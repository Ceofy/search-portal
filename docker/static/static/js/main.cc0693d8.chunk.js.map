{"version":3,"sources":["assets/images/cytoscape-logo.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","components/CommandPanel/index.jsx","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","api/apiConstants.js","api/cyrest.js","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/MessageSnackbar.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","withStyles","theme","Object","objectSpread","button","padding","props","classes","react_default","a","createElement","className","Typography_default","variant","handleClick","geneSymbol","searchActions","setSelectedGenes","getChip","value","isValid","hitSets","color","has","symbol","Chip_default","chip","avatar","Avatar_default","label","onClick","key","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","sortBySymbol","b","matchedSorted","sort","unmatchedSorted","sorted","concat","toConsumableArray","event","console","log","target","handleClear","map","InputPanel","components_CommandPanel","components_GeneList","Empty","index_es","Warning","cyInstance","PRESET_LAYOUT","name","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","useEffect","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","uiStateActions","setHighlights","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","width","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","filter","react_cytoscape_default","style","stylesheet","cy","LoadingPanel","title","message","CircularProgress_default","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","_this","setState","defineProperty","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toLowerCase","get","React","Component","marginLeft","marginTop","paddingLeft","NodeProperties","makeStyles","container","overflow","list","subtitle","TableBrowser_GeneAnnotationList","assign","EdgeProperties","removeHtmlTags","dataType","d","startsWith","originalText","v","replace","NetworkProperties","originalCX","len","networkAttr","networkAttributes","Math","random","n","useStyles","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","cyrest","handleImportNetwork","Button_default","disabled","available","alt","src","logo","Highlighter","FormGroup_default","row","FormControlLabel_default","control","Checkbox_default","checked","onChange","evt","toolbar","grow","flexGrow","menuButton","marginRight","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","transition","transitions","create","&:focus","others","objectWithoutProperties","networkName","noWrap","Ndex_Highlighter","Ndex_OpenInButton","DEFAULT_RATIO","NetworkView","_useState","useState","_useState2","slicedToArray","resized","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","option","MenuItem_default","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","query","MenuList_default","BASE_URL","importNetwork","cyRESTPort","payload","importNetworkUrl","CYREST_BASE_URL","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","Ndex","queryList","sourceUUID","jobId","checkCytoscapeConnection","statusUrl","cyRESTApi","port","catch","Error","then","res","handleErrors","running","cyrestActions","setAvailable","error","updateHistory","networkUUID","searchResults","sourceName","selectedSource","history","Ndex_NetworkList","querySize","networkEntry","edges","imageURL","rank","val","networkFetchStarted","handleFetch","Ndex_NetworkView","importNetworkStarted","cx","sourceId","uuid","TabContent","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","newValue","setSelectedSource","Results_Empty","selectedSourceName","Tabs_default","networkClear","Tab_default","Results_TabContent","MessageSnackbar","handleClose","reason","setOpen","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","action","Close_default","input","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","setQuery","_useState3","_useState4","loadCSS","document","querySelector","handleSearch","sourceNames","geneListString","split","clearAll","searchStarted","AppShell_MessageSnackbar","Paper_default","elevation","getElementById","execCommand","Icon_default","classNames","icon","InputBase_default","placeholder","onKeyDown","ref","Delete_default","Search_default","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","_this$props","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","Menu_default","AppShell_GeneTextBox","aria-haspopup","Home_default","fontSize","openLink","HELP_URL","Help_default","NDEX_URL","homeButton","url","window","easing","sharp","leavingScreen","easeOut","enteringScreen","headerLogo","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","status","text","index","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","cyrestport","URLSearchParams","location","setPort","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","preventDefault","_props$search","searchResult","components_AppShell","components_InputPanel","components_Results","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","createAction","clearQuery","searchSucceeded","searchFailed","setSearchResult","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","SET_SELECTED_SOURCE","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","SET_AVAILABLE","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","anchorEl","pathParam","Boolean","handleExample","exampleIdx","repaceDelimiters","currentTarget","core_Menu_default","transformOrigin","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchFinished","searchStatus","resultList","handleActions","_handleActions","forEach","singleResult","newList","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","highlight","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","properties","upperQuery","gene","toUpperCase","source_handleActions","isFetchingSource","cyrest_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","call","cySearchApi","sent","join","all","myGeneApi","filterGenes","put","type","uniqueGeneMap","t0","_marked2","sleep","ms","Promise","resolve","setTimeout","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","reducedSources","orderedSources","_context5","includes","firstEl","secondEl","indexOf","_marked5","Map","notfound","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","aspect","numberVerification","longNumber","cyRestSaga_marked2","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","render","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc0693d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React from 'react'\nimport './style.css'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  ...theme,\n  button: {\n    padding: '0.3em'\n  }\n})\n\nconst CommandPanel = props => {\n  const { classes } = props\n\n  return (\n    <div className=\"gene-list-header\">\n      <Typography variant=\"subtitle1\">Query Genes</Typography>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(CommandPanel)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort(sortBySymbol)\n  const unmatchedSorted = unmatched.sort(sortBySymbol)\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport SearchPanel from '../CommandPanel'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <SearchPanel {...props} />\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    console.log('@@@@@@@@@@@@@@@@@This should run only once:  CyViewer Mounted:', cyInstance)\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('unmount')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined || targets.length === 0) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    } else {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 10\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    console.log('OPEN === ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toLowerCase()\n    console.log('** LIST = ', symbol, geneList)\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>G</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    height: '100%',\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst NodeProperties = props => {\n  const { node } = props\n  const keys = Object.keys(node)\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LIST_DATA_PREFIX = 'list_of'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let len = originalCX.length\n  let networkAttr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry.networkAttributes) {\n      networkAttr = entry.networkAttributes\n      break\n    }\n  }\n\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={Math.random()}>\n          <ListItemText\n            inset\n            primary={removeHtmlTags(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst removeHtmlTags = entry => {\n  let dataType = entry.d\n\n  if (dataType === undefined) {\n    dataType = 'string'\n  }\n\n  if (dataType.startsWith(LIST_DATA_PREFIX)) {\n    return '(list not supported)'\n  }\n\n  const originalText = entry.v\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst OpenInButton = (props) => {\n  const { classes, cyrest, handleImportNetwork } = props\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"default\"\n      disabled={!cyrest.available}\n      onClick={handleImportNetwork}\n    >\n      Open in\n      <img alt=\"Cytoscape logo\" src={logo} className={classes.buttonIcon} />\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(OpenInButton)\n","import React from 'react'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\n\nconst Highlighter = props => {\n  const highlights = props.uiState.highlights\n  const handleChange = (evt, checked) => {\n    props.uiStateActions.setHighlights(checked)\n  }\n\n  return (\n    <FormGroup row>\n      <FormControlLabel\n        control={<Checkbox checked={highlights} onChange={handleChange} />}\n        label=\"Highlight Query Genes\"\n      />\n    </FormGroup>\n  )\n}\n\nexport default Highlighter\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport OpenInButton from './OpenInButton'\nimport Highlighter from './Highlighter'\nimport { Tooltip } from '@material-ui/core'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <OpenInButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network, search } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const query = search.results.genes\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(query.size, entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\nexport const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport { ListItem } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Paper from '@material-ui/core/Paper'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const checkCytoscapeConnection = props => {\n    cyRESTApi\n      .status(props.cyrest.port)\n      .catch(e => {\n        throw Error(e)\n      })\n      .then(res => handleErrors(res))\n      .then(running => {\n        props.cyrestActions.setAvailable(true)\n      })\n      .catch(error => {\n        props.cyrestActions.setAvailable(false)\n      })\n  }\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    checkCytoscapeConnection(props)\n\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank\n    } = networkEntry\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={'Rank ' + (rank) + ': ' + description}\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" className={classes.inline}>\n                  {'N: ' + nodes + ', E: ' + edges}\n                </Typography>\n              </Tooltip>\n              {'  Hit/Query = ' + hitGenes.length + '/' + querySize}\n            </React.Fragment>\n          }\n        >\n        </ListItemText>\n      </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\nimport Ndex from './Ndex'\n\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const { results } = props\n\n  if (results === null || results === undefined) {\n    return <LoadingPanel title={'Loading results'} message={'Please wait...'} />\n  } else {\n    const { sourceUUID } = results\n    return <Ndex hits={results.results} sourceUUID={sourceUUID} {...props} />\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, idx)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  const { classes, ...others } = props\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const { searchResults } = props.search\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    props.setOpen(false)\n  }\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.open}\n      autoHideDuration={4000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">Genes are copied to clipboard!</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/ /)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar open={open} setOpen={setOpen} />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n\n        <Divider className={classes.divider} />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport HomeIcon from '@material-ui/icons/Home'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  homeButton: {\n    height: '2em',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  logo: {\n    height: '1em'\n  },\n  headerLogo: {\n    height: '1.4em'\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n\n\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={this.handleHomeButton}\n            >\n              <HomeIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n            <Button\n              color=\"inherit\"\n              aria-label=\"Home\"\n              onClick={() => openLink(NDEX_URL)}\n            >\n              <img alt=\"NDEx logo\" src={logo} className={classes.homeButton} />\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const { isFetching, searchResult } = props.search\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <InputPanel className=\"input\" {...props} />\n        <Results className=\"results\" {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\nexport const setAvailable = createAction(SET_AVAILABLE)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\n\nimport ReactGA from 'react-ga'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      console.log('(((((((((((((MainPathname =  ====', pathname)\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst EXAMPLES = ['kras egfr cdk4 tp53', 'per1 per2 clock', 'mtor wnt1 igf1']\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      console.log('** Search route:', jobId, pathParam)\n      props.history.push(`/${jobId}`)\n    }\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          <MenuItem onClick={() => handleExample(0)}>Gene List 1</MenuItem>\n          <MenuItem onClick={() => handleExample(1)}>Gene List 2</MenuItem>\n          <MenuItem onClick={() => handleExample(2)}>Gene List 3</MenuItem>\n        </Menu>\n      </div>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      //TODO: call actual API\n      props.searchActions.setQuery(genes)\n      console.log('Got genes.  Start search now!', geneList)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n    return () => {\n      console.log('Page unmounted')\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport ReactGA from 'react-ga'\n\n\nconst TopPageContainer = props => {\n\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  searchFinished: [],\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      console.log('------------ Start  1 ------------------::')\n      const sources = payload.payload.sourceNames\n      const sourceLen = sources.length\n      const searchFinished = {}\n      sources.forEach(source => {\n        searchFinished[source] = false\n      })\n\n      return {\n        ...state,\n        isSearching: true,\n        searchFinished,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      console.log('Setting selected gene:', payload)\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n\n      const newList = [...state.resultList, singleResult]\n      console.log('------------ Setting single ------------------::', newList)\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: ''\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n\n    // if (position !== undefined) {\n    //   node.position = {\n    //     x: position.x * LAYOUT_SCALING_FACTOR,\n    //     y: position.y * LAYOUT_SCALING_FACTOR\n    //   }\n    // }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  setAvailable,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState = {\n  available: false,\n  port: 1234,\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: payload.payload }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  console.log('QQQQQQQQQQQQQQ URL = ', resultUrl, sourceName)\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  console.log('Sending query to search service:', queryObject)\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n\n    // TODO: this is a hack\n\n    console.log('Getting source list: ', sourceNames)\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\nconst checkStatus = statusJson => {\n  console.log('Status:::', statusJson)\n  const { progress } = statusJson\n  if (progress === 100) {\n    return true\n  } else {\n    return false\n  }\n}\n\nconst checkProgress = statusJson => {\n  const sources = statusJson.source\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    console.log('Network fetched: ', json)\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID } from './analytics'\n\nReactGA.initialize(GA_DEV_ID, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  console.log('*** Event handler:::', event)\n\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // Production\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}