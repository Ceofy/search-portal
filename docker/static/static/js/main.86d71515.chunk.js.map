{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/ndex-logo-mono-dark.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/ExpandPanel.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_ZOOMED","setZoomed","RESET_ZOOMED","resetZoomed","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_ORDER","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","FIT_NETWORK_VIEW","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","fitNetworkView","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","padding","borderRadius","height","borderWidth","backgroundColor","selectedButtonStyle","selectedChipStyle","margin","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","props","hitSets","color","found","has","symbol","react_default","a","createElement","Chip","avatar","Avatar","Check_default","variant","key","selected","style","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","selectedGenes","searchActions","className","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","matchedSorted","sort","reverse","unmatchedSorted","sorted","concat","Object","toConsumableArray","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","GeneList_ToggleButton","InputPanel","components_GeneList","Empty","Typography","MessageSnackbar","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","reason","setOpen","ContentProps","aria-describedby","message","id","action","IconButton","aria-label","onClick","handleClose","Close_default","theme","logo","button","display","marginLeft","marginRight","position","top","outer","justifyContent","alignItems","inner","marginTop","width","classes","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","state","setState","_useState5","_useState6","setMessage","uuid","length","cyrest","available","isLoadingNetwork","lastResponse","cycleId","console","log","type","currentId","setTimeout","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","AppShell_MessageSnackbar","align","cyInstance","PRESET_LAYOUT","name","animate","CONCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","fit","useEffect","on","target","networkActions","e","warn","selectEdge","edges","$","forEach","element","data","selectNode","nodes","removeClass","this","source","addClass","uiStateActions","layout","targets","elements","zoom","center","eles","duration","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","background","isLayoutAvailable","isLayout","resize","filter","react_cytoscape_default","stylesheet","cy","LoadingPanel","CircularProgress","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","assign","resized","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","entry","toString","findAttributes","originalCX","attrType","len","attr","ExpandPanel","_React$useState","React","defaultExpanded","_React$useState2","divider","borderTop","Math","random","ListItemText","primary","summary","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","component","disablePadding","details","index","useStyles","makeStyles","container","overflow","boxSizing","paddingLeft","paddingTop","lessPadding","noPadding","paddingBottom","extractContent","modifiedText","v","Array","isArray","join","extractTitle","n","formatPrimary","startsWith","endsWith","parse","linkifyjs_react_default","newTab","formatContext","splitResults","split","item","MemoNetworkProperties","networkAttr","content","leftDisplayItems","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","displayed","selectedSource","newTitle","splice","networkInfo","actualResults","listIndex","rightDisplay","list","currentEntry","secondaryString","primaryString","leftDisplay","keyId","react_split_es","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","_this","defineProperty","getListItem","geneEntry","description","_id","disableGutters","ListItemAvatar","inline","href","Launch_default","search_results","geneSymbol","get","Component","linkIcon","nested","spacing","unit","wideList","table","tableLayout","NodeProperties","selectedNodes","setDefaultExpanded","entityProperties","nodeProperties","displayItems","topDisplay","geneAnnotation","inset","TableBrowser_GeneAnnotationList","displayCol1","displayCol2","colSpan","valign","findNode","nodeId","nodeArray","isNaN","returnNode","MemoEdgeProperties","selectedEdges","nodeList","edgeProperties","b","aScore","bScore","aSource","aTarget","bSource","bTarget","listPadding","subtitle","root","minHeight","HoverTab","&:hover","opacity","Tab","TabContent","TableBrowser_NetworkProperties","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","DISABLED_STYLE","MemoTableBrowserPanel","tableDisplayTab","i","Tabs","newValue","TableBrowserPanel_TabContent","MemoTableBrowser","TableBrowser_TableBrowserPanel","BootstrapButton","borderColor","&:active","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","OpenInCytoscapeButton_BootstrapButton","logoDisabled","ResetZoomButton_BootstrapButton","disabledLogo","textAlign","lignHeight","highlight","evt","WbIncandescent_default","OpenInNDExButton_BootstrapButton","ndexSaveActions","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","cx","token","networkUrl","_this2","ndexSave","profile","authorization","DialogContentText","DialogActions","text-transform","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","error","JSON","stringify","onError","_this$props","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","preventDefault","handleOnSuccess","resp","Dialog","ndexModal","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","OpenInBrowser_default","fontSize","toolbar","paddingRight","grow","flexGrow","menuButton","breakpoints","up","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","&:focus","buttons","border","openIcon","other","objectWithoutProperties","networkName","noWrap","Ndex_ResetZoomButton","Ndex_Highlighter","components_NDExSignInModal","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","Ndex_OpenOriginalNetworkButton","DEFAULT_RATIO","NetworkView","setResize","Ndex_NetworkToolbar","direction","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","BootstrapInput","label + &","input","textColor","InputBase","formStyle","left","marginBottom","divStyle","borderBottom","typeStyle","selectStyle","SortPanel","sortPValueOn","setSortPValueOn","Select","displayEmpty","MenuItem","networkAvatar","menuItem","menuText","secondary","plot","openFirst","first","handleFetch","networkUUID","sortFunction","sortOrder","PValue","handleListItemClick","enrichmentStyle","selectedIndex","Ndex_SortPanel","MenuList","renderNetworkListItem","queryList","Ndex","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","Ndex_NetworkList","querySize","networkEntry","imageURL","lineHeight","icon","ListItemIcon","pVal","toExponential","pv","rowSpan","parent_network_nodes","parent_network_edges","Ndex_NetworkView","sourceId","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","Results_Empty","selectedSourceName","Results_HoverTab","Results_TabContent","flex","iconButton","geneTextRef","useRef","queryGenes","queryText","loadCSS","document","querySelector","handleSearch","sourceNames","elevation","getElementById","select","execCommand","Icon","classNames","Divider","Delete_default","onKeyDown","ref","Search_default","titleStyle","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","textBox","AppShell_GeneTextBox","Home_default","openLink","HELP_URL","Help_default","IL_URL","idekerLogo","NDEX_URL","CYTOSCAPE_URL","NRNB_URL","nrnbLogo","WP_URL","wpLogo","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","sourceEntry","version","status","text","Settings_default","LINKS","link","github","flexShrink","drawerHeader","objectSpread","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","onpopstate","onBackButtonEvent","searchResult","components_AppShell","components_Results","components_InputPanel","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","searchButtonEl","anchorEl","query","Boolean","currentTarget","Menu_default","Menu_Menu","transformOrigin","example","exampleIdx","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","_handleActions","payload","singleResult","uiState_handleActions","zoomed","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","fadedEdge","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","upperQuery","gene","source_handleActions","isFetchingSource","currentSource","cyrest_handleActions","port","isFetchingAvailable","isPollingAvailable","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","Content-Type","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","geneListString","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","all","myGeneApi","filterGenes","put","uniqueGeneMap","notFound","t0","_marked2","sleep","ms","Promise","resolve","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","orderedSources","_context5","_marked5","Map","notfound","cyRESTPort","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","responseJson","aspect","numberVerification","longNumber","cyRestSaga_marked2","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","cyRestStatusSaga_marked","take","race","cyRestStatusSaga_marked2","cyRestStatusSaga_marked3","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","ndexSaveSaga_marked2","user","pwd","auth","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","cyRestStatusSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86d71515.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-dark.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\nexport const SET_ZOOMED = 'SET_ZOOMED'\nexport const setZoomed = createAction(SET_ZOOMED)\n\nexport const RESET_ZOOMED = 'RESET_ZOOMED'\nexport const resetZoomed = createAction(RESET_ZOOMED)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const FIT_NETWORK_VIEW = 'FIT_NETWORK_VIEW'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MuiToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nconst buttonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"#FFFFFF\"\n};\n\nconst selectedButtonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"rgb(252, 235, 242)\"\n};\n\nconst selectedChipStyle = {\n  margin: \"0\",\n  borderRadius: \"20px\"\n};\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: \"transparent\"\n};\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: \"transparent\"\n  }\n})(MuiToggleButton);\n\nconst GeneList = props => {\n\n  const results = props.search.results;\n  const hits = props.network.hitGenes;\n  const hitSets = new Set(hits);\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search.selectedGenes[0]) {\n      props.searchActions.clearSelectedGenes();\n    } else {\n      props.searchActions.setSelectedGenes(newAlignment);\n    }\n  };\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />;\n  }\n\n  const geneList = results.genes;\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />;\n  }\n\n  const matched = [];\n  const unmatched = [];\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value);\n    } else {\n      unmatched.push(value);\n    }\n  }\n\n  const matchedSorted = matched.sort().reverse();\n  const unmatchedSorted = unmatched.sort().reverse();\n  const sorted = [...matchedSorted, ...unmatchedSorted];\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup\n              value={props.search.selectedGenes}\n              exclusive\n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton\n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) &&\n                  props.search.selectedGenes[0] === geneValue.symbol\n                    ? selectedButtonStyle\n                    : buttonStyle\n                }\n              >\n                {getChip(geneValue, true, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nconst getChip = (value, isValid, props, hitSets) => {\n  let color = \"default\";\n  let found = false;\n  if (hitSets.has(value.symbol)) {\n    color = \"secondary\";\n    found = true;\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        avatar={<Avatar>{found ? <CheckIcon /> : \"-\"}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    );\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={\"INVALID: \" + value}\n        key={value}\n        clickable={true}\n      />\n    );\n  }\n};\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default GeneList;\n","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>\n        Query Genes\n      </div>\n      <GeneList {...props}/>\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst MessageSnackbar = props => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        \"aria-describedby\": \"message-id\"\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  );\n};\n\nexport default MessageSnackbar;\n","import React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport cytoLogo from \"../../../assets/images/cytoscape-logo.svg\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport \"./style.css\";\n\nconst styles = theme => ({\n  logo: {},\n  button: {\n    height: \"50%\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    position: \"relative\",\n    top: \"15%\"\n  },\n  outer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inner: {\n    position: \"relative\",\n    marginTop: \"15%\",\n    width: \"100%\"\n  }\n});\n\nconst Warning = props => {\n  const { classes } = props;\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState(\"dormant\");\n  const [message, setMessage] = useState(null);\n\n  const handleClick = () => {\n    props.handleImportNetwork();\n  };\n\n  if (\n    props.network.uuid &&\n    props.network.uuid.length > 0 &&\n    props.cyrest.available\n  ) {\n    //Snackbar\n    const isLoadingNetwork = props.cyrest.isLoadingNetwork;\n    const lastResponse = props.cyrest.lastResponse;\n\n    let cycleId = 0;\n    console.log(\"cycleId: \" + cycleId);\n    console.log(\"state: \" + state);\n\n    if (state === \"dormant\" && isLoadingNetwork) {\n      setMessage(\"Opening network in Cytoscape Desktop . . .\");\n      setState(\"openLoading\");\n      if (!open) {\n        setOpen(true);\n      }\n    }\n    if (\n      (state === \"openLoading\" || state === \"closeLoading\") &&\n      lastResponse != null\n    ) {\n      setState(\"openResult\");\n      if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n        setMessage(\"Network opened in Cytoscape Desktop!\");\n      } else {\n        setMessage(\"Network failed to open in Cytoscape Desktop\");\n      }\n      if (!open) {\n        setOpen(true);\n      }\n    }\n    if (state === \"openResult\" && !open) {\n      setOpen(true);\n    }\n    if (state === \"openResult\" && open) {\n      let currentId = cycleId;\n      setTimeout(() => {\n        if (state === \"openResult\" && currentId === cycleId) {\n          setState(\"dormant\");\n          cycleId++;\n          setOpen(false);\n        }\n      }, 6000);\n    }\n\n    const handleClose = (event, reason) => {\n      console.log(\"click\");\n      if (state === \"openLoading\") {\n        console.log(\"openLoading to closeLoading\");\n        setState(\"closeLoading\");\n      } else if (state === \"openResult\") {\n        console.log(\"openResult to dormant\");\n        setState(\"dormant\");\n        cycleId++;\n      }\n      setOpen(false);\n      console.log(\"open: \" + open);\n    };\n\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton\n            className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Network is too big for interactive view. <br />\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={\"right\"}\n          vertical={\"bottom\"}\n          handleClose={handleClose}\n        />\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">\n            Network is too big for interactive view. <br />\n            Please open Cytoscape Desktop to view.\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(Warning);\n","import React, { useEffect, useState } from \"react\";\nimport CytoscapeComponent from \"react-cytoscapejs\";\nimport \"./style.css\";\nimport Warning from \"./Warning\";\n\nlet cyInstance = null;\n\nconst PRESET_LAYOUT = {\n  name: \"preset\",\n  padding: 6,\n  animate: false\n};\n\nconst CONCENTRIC_LAYOUT = {\n  name: \"concentric\",\n  padding: 6,\n  minNodeSpacing: 100,\n  animate: false\n};\n\nconst COSE_SETTING = {\n  name: \"cose\",\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000;\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10;\n  },\n  animate: false\n};\n\nexport const MAX_NETWORK_SIZE = 5000;\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState;\n  const { fit } = props.network;\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return;\n    }\n    \n    cyInstance.on(\"tap\", function(event) {\n      try {\n        // cyInstance.nodes().removeClass('connected')\n        const target = event.target;\n        if (target === cyInstance) {\n          props.networkActions.changeTab(0);\n          console.log(\"UNSELECT\");\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    });\n\n    const selectEdge = () => {\n      setTimeout(() => {\n        const edges = [];\n        const selectedEdges = cyInstance.$(\"edge:selected\");\n        selectedEdges.forEach(element => {\n          edges.push(element.data());\n        });\n        props.networkActions.selectEdges(edges);\n      }, 1);\n    };\n\n    const selectNode = () => {\n      setTimeout(() => {\n        const nodes = [];\n        const selectedNodes = cyInstance.$(\"node:selected\");\n        selectedNodes.forEach(element => {\n          if (element.data().name !== \"\") {\n            nodes.push(element.data());\n          }\n        });\n        props.networkActions.selectNodes(nodes);\n      }, 1);\n    };\n\n    cyInstance.on(\"tap\", \"node\", function() {\n      try {\n        cyInstance.nodes().removeClass(\"connected\");\n      } catch (e) {\n        console.warn(e);\n      }\n      selectNode();\n    });\n    \n    cyInstance.on(\"tap\", \"edge\", function() {\n      try {\n        cyInstance.nodes().removeClass(\"connected\");\n        const selected = this.data();\n        const { source, target } = selected;\n        cyInstance.$(\"#\" + source + \", #\" + target).addClass(\"connected\");\n      } catch (e) {\n        console.warn(e);\n      }\n      selectEdge();\n    });\n\n    cyInstance.on(\"boxend\", function(event) {\n      selectEdge();\n      selectNode();\n    });\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true);\n    \n    if (layout === COSE_SETTING) {\n      setTimeout(() => {\n        props.networkActions.fitNetworkView(true);\n      }, 1);\n    }\n\n    return () => {\n      console.log(\"Network viewer unmounted\");\n    };\n  }, []);\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return;\n    }\n\n    const targets = props.search.selectedGenes;\n    if (targets === null || targets === undefined) {\n      return;\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]');\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      );\n    }\n\n    if (targets.length === 0) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      );\n    }\n  }, [props.search.selectedGenes]);\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return;\n    }\n    if (fit) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      );\n      setTimeout(() => {\n        props.networkActions.fitNetworkView(false);\n      });\n    }\n  }, [fit]);\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount;\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning {...props} />;\n  }\n\n  const cyjs = props.network.network;\n  if (cyjs === null || cyjs === undefined) {\n    return null;\n  }\n\n  const networkAreaStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    background: props.network.backgroundColor\n  };\n\n  const isLayoutAvailable = cyjs.isLayout;\n\n  let layout = PRESET_LAYOUT;\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING;\n  } else if (!isLayoutAvailable) {\n    layout = CONCENTRIC_LAYOUT;\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize();\n\n    if (highlights) {\n      cyInstance.elements().addClass(\"faded\");\n      const query = cyInstance.filter('node[querynode = \"true\"]');\n      query.addClass(\"highlight\");\n    } else {\n      cyInstance\n        .elements()\n        .removeClass(\"faded\")\n        .removeClass(\"highlight\");\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => {\n        cyInstance = cy;\n      }}\n    />\n  );\n};\n\nexport default CytoscapeViewer;\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\" style={{backgroundColor: props.color}}>\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n        color='#FFFFFF'\n      />\n    ) : (\n      <CytoscapeViewer \n        resized={props.resized}\n        {...props}\n      />\n    )}\n  </div>\n)\n\nexport default (NetworkViewer)\n","export const camelCaseToTitleCase = (camelCaseString) => {\n    if (camelCaseString.slice(0, 4) === \"http\" ||\n        camelCaseString.slice(0, 5) === 'Prov:') {\n        return camelCaseString\n    }\n    let result = camelCaseString\n        .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")           \n        .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")           \n        .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")          \n        .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")     \n        .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")  \n        .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n        .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\") \n        .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")      \n        .trim();\n    result = result.charAt(0).toUpperCase() + result.slice(1)\n    result = result.replace('Wiki Pathways', 'WikiPathways')\n        .replace('Wikipathways', 'WikiPathways')\n        .replace('Sbo ', 'SBO ')\n    return result\n  }","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\n\nexport default function ExpandPanel(props) {\n  const [open, setOpen] = React.useState(props.defaultExpanded);\n  let style;\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  if (props.divider) {\n    style = {\n      borderTop: \"1px solid #EFEFEF\"\n    };\n  } else {\n    style = {};\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={handleClick} key={Math.random()} style={style}>\n        <ListItemText primary={props.summary} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem>\n            <ListItemText primary={props.details} />\n          </ListItem>\n        </List>\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Split from \"react-split\";\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\n\nimport { camelCaseToTitleCase } from \"./camel-case-util\";\nimport { stripScripts } from \"./strip-scripts-util\";\nimport { findAttributes } from \"./attribute-util\";\n\nimport Linkify from \"linkifyjs/react\";\nimport parse from \"html-react-parser\";\nimport ExpandPanel from \"./ExpandPanel\";\n\nlet index = 0;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"0.2em\",\n    backgroundColor: \"#FFFFFF\",\n    overflow: \"auto\",\n    height: \"100%\",\n    boxSizing: \"content-box\"\n  },\n  padding: {\n    paddingLeft: \"16px\",\n    paddingTop: \"12px\"\n  },\n  lessPadding: {\n    paddingTop: \"2.49px\"\n  },\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  }\n}));\n\nconst NetworkProperties = props => {\n  index = 0;\n  const originalCX = props.network.originalCX;\n  const classes = useStyles();\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, \"networkAttributes\");\n  if (networkAttr === null) {\n    return;\n  }\n\n  //What to display\n  const leftDisplayItems = [\"Name\", \"Description\", \"Reference\", \"@context\"];\n  const properties = [\"Organism\", \"Cell\", \"Disease\"];\n  const contributors = [\"Author\", \"Reviewers\", \"Rights Holder\", \"Rights\"];\n  const wikiPathways = [\n    \"WikiPathways ID\",\n    \"WikiPathways Version\",\n    \"WikiPathways IRI\"\n  ];\n  const networkInformation = [\"Version\", \"Network Type\", \"Labels\"];\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ];\n\n  //Filter properties\n  const attributes = [];\n  let content;\n  let title;\n  networkAttr.forEach(element => {\n    content = extractContent(element);\n    title = extractTitle(element);\n    if (!title.startsWith(\"__\") && content != null && content !== \"\") {\n      if (\n        title === \"Description\" &&\n        props.uiState.selectedSource === \"interactome\"\n      ) {\n        const newTitle = \"Description of parent network\";\n        leftDisplayItems.splice(1, 0, newTitle);\n        const networkInfo =\n          props.search.actualResults[props.network.listIndex - 1];\n        content =\n          networkInfo.nodes + \" nodes, \" + networkInfo.edges + \" edges<br/>\" + content;\n        attributes.push({\n          title: newTitle,\n          content: content, //TODO\n          displayed: false\n        });\n      } else {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        });\n      }\n    } else if (title === \"Name\") {\n      attributes.push({\n        title: title,\n        content: \"Untitled\",\n        displayed: false\n      });\n    }\n  });\n\n  //Right side of display\n  const rightDisplay = [];\n  rightDisplayItems.forEach(list => {\n    let primaryString = \"\";\n    let currentEntry;\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element;\n      })[0];\n      if (currentEntry != null) {\n        primaryString +=\n          currentEntry.title + \": \" + currentEntry.content + \"<br>\";\n        currentEntry.displayed = true;\n      }\n    });\n    let secondaryString;\n    switch (list) {\n      case properties:\n        secondaryString = \"Properties\";\n        break;\n      case contributors:\n        secondaryString = \"Contributors\";\n        break;\n      case wikiPathways:\n        secondaryString = \"WikiPathways\";\n        break;\n      case networkInformation:\n        secondaryString = \"Network Information\";\n        break;\n    }\n    primaryString = formatPrimary(primaryString);\n    if (primaryString !== \"\") {\n      rightDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      );\n    }\n  });\n\n  //Left side of display\n  const leftDisplay = [];\n  let currentEntry;\n  let primaryString;\n  let secondaryString;\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element;\n    })[0];\n    if (currentEntry != null) {\n      if (element === \"@context\") {\n        primaryString = formatContext(currentEntry.content);\n        currentEntry.displayed = true;\n        const summary = (\n          <Typography component=\"span\" variant=\"body2\">\n            Click to view the namespaces associated with this network\n          </Typography>\n        );\n        const details = (\n          <Typography variant=\"body2\">{primaryString}</Typography>\n        );\n        leftDisplay.push(\n          <React.Fragment>\n            <div className={classes.padding}>\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                color=\"textSecondary\"\n              >\n                @context\n              </Typography>\n            </div>\n            <ExpandPanel\n              summary={summary}\n              details={details}\n              defaultExpanded={false}\n              keyId={index++}\n              divider={false}\n            />\n          </React.Fragment>\n        );\n      } else {\n        primaryString = formatPrimary(currentEntry.content);\n        secondaryString = element;\n        currentEntry.displayed = true;\n        leftDisplay.push(\n          <ListItem key={index++} className={classes.noPadding}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"caption\"\n                    color=\"textSecondary\"\n                  >\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        );\n      }\n    }\n  });\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content);\n      secondaryString = entry.title;\n      entry.displayed = true;\n      leftDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                >\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      );\n    }\n  });\n\n  //Display panes\n  return (\n    <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n      <div className={\"network-info-panel\"}>\n        <List className={classes.lessPadding}>{leftDisplay}</List>\n      </div>\n      <div className={\"network-info-panel\"}>\n        <List className={classes.lessPadding}>{rightDisplay}</List>\n      </div>\n    </Split>\n  );\n};\n\nconst extractContent = entry => {\n  let modifiedText = entry.v;\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(\", \");\n  }\n  return stripScripts(modifiedText.trim());\n};\n\nconst extractTitle = entry => {\n  let modifiedText;\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1);\n  } else {\n    modifiedText = \"\";\n  }\n  return stripScripts(modifiedText.trim());\n};\n\nconst formatPrimary = entry => {\n  if (entry === \"\") {\n    return entry;\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, \"<br>\")\n    .replace(/(<\\/?br\\/?>)+/gi, \"<br>\")\n    .replace(/(\\n)+/gi, \"\\n\")\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim();\n  if (modifiedText.startsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1);\n  }\n  if (modifiedText.endsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4);\n  }\n  modifiedText = parse(modifiedText);\n  return (\n    <Linkify key={\"link\" + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  );\n};\n\nconst formatContext = entry => {\n  const elements = entry.split(\",\");\n  let splitResults;\n  let result = \"<table><tbody>\";\n  elements.forEach(item => {\n    splitResults = item.split('\"');\n    result +=\n      \"<tr><td>\" +\n      splitResults[1] +\n      \"</td><td>\" +\n      splitResults[3] +\n      \"</td></tr>\";\n  });\n  result += \"</tbody></table>\";\n  return formatPrimary(result);\n};\n\nconst MemoNetworkProperties = NetworkProperties; /*React.memo(NetworkProperties, (prevProps, newProps) => {\n  return true\n})*/\n\nexport default MemoNetworkProperties;\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n        disableGutters={true}\n        style={{padding: '0'}}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <div>\n                      <Typography component=\"span\" variant=\"body2\" >\n                        {geneEntry.symbol}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography\n                        component=\"span\"\n                        className={classes.inline}\n                        variant=\"caption\"\n                        color='textSecondary'\n                      >\n                        {camelCaseToTitleCase(geneEntry.name)}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"body2\" color='textPrimary'>\n                        {description}\n                      </Typography>\n                    </div>\n                  </td>\n                  <td>\n                    <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                      <IconButton\n                        aria-label=\"Link to GeneCards\"\n                        href={GENE_CARDS_URL + geneEntry.symbol}\n                        target=\"_blank\"\n                      >\n                        <LinkIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          }\n        />\n      </ListItem>\n    )\n  }    \n} \n\n  /*\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n*/\n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from \"react\";\nimport Linkify from \"linkifyjs/react\";\nimport parse from \"html-react-parser\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport { camelCaseToTitleCase } from \"./camel-case-util.js\";\nimport { stripScripts } from \"./strip-scripts-util.js\";\n\nimport GeneAnnotationList from \"./GeneAnnotationList\";\nimport ExpandPanel from \"./ExpandPanel\";\n\nlet index = 0;\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    width: \"100%\"\n  },\n  wideList: {\n    marginTop: \"0\",\n    width: \"100%\",\n    padding: \"0\"\n  },\n  table: {\n    width: \"100%\",\n    tableLayout: \"fixed\"\n  }\n}));\n\nconst NodeProperties = props => {\n  const classes = useStyles();\n  const nodes = props.network.selectedNodes;\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true);\n\n  const entityProperties = [\"Name\", \"HGNC\", \"Ensembl\", \"Type\"];\n\n  const nodeProperties = [\n    \"Height\",\n    \"Width\",\n    \"Shape\",\n    \"Is GPML Shape\",\n    \"Color\",\n    \"Fill Color\",\n    \"Transparent\",\n    \"Border Thickness\",\n    \"Border Style\",\n    \"Label Size\",\n    \"Label Font\",\n    \"Id\"\n  ];\n\n  const displayItems = [entityProperties, nodeProperties];\n\n  const sortedNodes = nodes/*nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });*/\n\n  const topDisplay = [];\n  sortedNodes.forEach(node => {\n    //Filter properties\n    const attributes = [];\n    let content;\n    let title;\n    let geneAnnotation = null;\n    let inset = false;\n    if (\n      props.search.results != null &&\n      props.search.results.genes.get(node.name) != null\n    ) {\n      inset = true;\n      geneAnnotation = (\n        <List className={classes.noPadding}>\n          <GeneAnnotationList\n            {...props}\n            search_results={props.search.results}\n            geneSymbol={node.name}\n          />\n        </List>\n      );\n    }\n    for (let key in node) {\n      content = extractContent(node[key]);\n      title = extractTitle(key);\n      if (\n        !title.startsWith(\"__\") &&\n        content != null &&\n        content !== \"null\" &&\n        content !== \"\"\n      ) {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        });\n      }\n    }\n\n    const displayCol1 = [];\n    const displayCol2 = [];\n    let primaryString;\n    let secondaryString;\n    displayItems.forEach(list => {\n      primaryString = \"\";\n      let currentEntry;\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element;\n        })[0];\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + \": \" + currentEntry.content + \"<br>\";\n          currentEntry.displayed = true;\n        }\n      });\n      primaryString = formatPrimary(primaryString);\n      if (primaryString !== \"\") {\n        switch (list) {\n          case entityProperties:\n            secondaryString = \"Entity Properties\";\n            displayCol1.push(\n              <ListItem key={index++} className={classes.noPadding}>\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            );\n            break;\n          case nodeProperties:\n            secondaryString = \"Node Properties\";\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.noPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            );\n            break;\n        }\n      }\n    });\n\n    primaryString = \"\";\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + \": \" + entry.content + \"<br>\";\n        entry.displayed = true;\n      }\n    });\n    primaryString = formatPrimary(primaryString);\n    secondaryString = \"Additional properties\";\n\n    if (primaryString !== \"\") {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      );\n    }\n\n    const summary = <Typography variant=\"body2\">{node.name}</Typography>;\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td colSpan=\"2\" valign=\"top\">\n              {geneAnnotation}\n            </td>\n          </tr>\n          <tr>\n            <td valign={\"top\"}>{displayCol1}</td>\n            <td valign={\"top\"}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        keyId={node.id + index++}\n        divider={true}\n      />\n    );\n  });\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    );\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true);\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    );\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false);\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return \"\";\n  }\n  return stripScripts(entry);\n};\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return \"\";\n  }\n  return stripScripts(entry);\n};\n\nconst formatPrimary = entry => {\n  if (entry === \"\") {\n    return entry;\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, \"<br>\")\n    .replace(/(<\\/?br\\/?>)+/gi, \"<br>\")\n    .replace(/(\\n)+/gi, \"\\n\")\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim();\n  if (modifiedText.startsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1);\n  }\n  if (modifiedText.endsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4);\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText));\n  return (\n    <Linkify key={\"link\" + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  );\n};\n\nexport default NodeProperties;\n","import React, { useState } from \"react\";\nimport Linkify from \"linkifyjs/react\";\nimport parse from \"html-react-parser\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ExpandPanel from \"./ExpandPanel\";\n\nimport { camelCaseToTitleCase } from \"./camel-case-util.js\";\nimport { stripScripts } from \"./strip-scripts-util.js\";\n\nlet index = 0;\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    width: \"100%\"\n  },\n  wideList: {\n    marginTop: \"0\",\n    width: \"100%\",\n    padding: \"0\"\n  },\n  table: {\n    width: \"100%\",\n    tableLayout: \"fixed\"\n  }\n}));\n\nconst EdgeProperties = props => {\n  const classes = useStyles();\n  const edges = props.network.selectedEdges;\n  const nodes = props.nodeList;\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true);\n\n  const entityProperties = [\n    \"Source\",\n    \"Target\",\n    \"Type\",\n    \"SBO Type\",\n    \"Interaction\",\n    \"Throughput\",\n    \"Location\"\n  ];\n\n  const edgeProperties = [\n    \"Start Arrow\",\n    \"End Arrow\",\n    \"Connector Type\",\n    \"Line Thickness\",\n    \"Line Style\",\n    \"Color\",\n    \"Id\"\n  ];\n\n  const displayItems = [entityProperties, edgeProperties];\n\n  const sortedEdges = edges.sort((a, b) => {\n    let aScore = 0;\n    let bScore = 0;\n    const aSource = findNode(a.source, nodes)\n    const aTarget = findNode(a.target, nodes)\n    const bSource = findNode(b.source, nodes)\n    const bTarget = findNode(b.target, nodes)\n    if (aSource !== \"\") {\n      aScore++;\n    }\n    if (aTarget !== \"\") {\n      aScore++;\n    }\n    if (bSource !== \"\") {\n      bScore++;\n    }\n    if (bTarget !== \"\") {\n      bScore++;\n    }\n    if (bScore - aScore !== 0) {\n      return bScore - aScore;\n    } else if (aSource === \"\") {\n      return 1;\n    } else if (bSource === \"\") {\n      return -1;\n    }\n\n    if (aSource.toUpperCase() > bSource.toUpperCase()) {\n      return 1;\n    } else if (aSource.toUpperCase() < bSource.toUpperCase()) {\n      return -1;\n    } else if (aTarget.toUpperCase() > bTarget.toUpperCase()) {\n      return 1;\n    } else {\n      return -1;\n    }\n  });\n\n  const topDisplay = [];\n  edges.forEach(edge => {\n    //Filter properties\n    const attributes = [];\n    let content;\n    let title;\n    let source;\n    let target;\n    for (let key in edge) {\n      content = extractContent(edge[key]);\n      title = extractTitle(key);\n      if (\n        !title.startsWith(\"__\") &&\n        content != null &&\n        content !== \"null\" &&\n        content !== \"\"\n      ) {\n        if (title === \"source\") {\n          source = findNode(content, nodes);\n          attributes.push({\n            title: \"Source\",\n            content: source,\n            displayed: false\n          });\n        } else if (title === \"target\") {\n          target = findNode(content, nodes);\n          attributes.push({\n            title: \"Target\",\n            content: target,\n            displayed: false\n          });\n        } else {\n          attributes.push({\n            title: camelCaseToTitleCase(title),\n            content: content,\n            displayed: false\n          });\n        }\n      }\n    }\n\n    const displayCol1 = [];\n    const displayCol2 = [];\n    let primaryString;\n    let secondaryString;\n    displayItems.forEach(list => {\n      primaryString = \"\";\n      let currentEntry;\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element;\n        })[0];\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + \": \" + currentEntry.content + \"<br>\";\n          currentEntry.displayed = true;\n        }\n      });\n      primaryString = formatPrimary(primaryString);\n      if (primaryString !== \"\") {\n        switch (list) {\n          case entityProperties:\n            secondaryString = \"Entity Properties\";\n            displayCol1.push(\n              <ListItem key={index++} className={classes.noPadding}>\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            );\n            break;\n          case edgeProperties:\n            secondaryString = \"Edge Properties\";\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            );\n            break;\n        }\n      }\n    });\n\n    primaryString = \"\";\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + \": \" + entry.content + \"<br>\";\n        entry.displayed = true;\n      }\n    });\n    primaryString = formatPrimary(primaryString);\n    secondaryString = \"Additional properties\";\n\n    if (primaryString !== \"\") {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      );\n    }\n\n    const summary = (\n      <Typography variant=\"body2\">{source + \" -> \" + target}</Typography>\n    );\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td valign={\"top\"}>{displayCol1}</td>\n            <td valign={\"top\"}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    );\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        keyId={index++}\n        divider={true}\n      />\n    );\n  });  \n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={classes.center}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    );\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true);\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    );\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false);\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return \"\";\n  }\n  return stripScripts(entry);\n};\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return \"\";\n  }\n  return stripScripts(entry);\n};\n\nconst formatPrimary = entry => {\n  if (entry === \"\") {\n    return entry;\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, \"<br>\")\n    .replace(/(<\\/?br\\/?>)+/gi, \"<br>\")\n    .replace(/(\\n)+/gi, \"\\n\")\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim();\n  if (modifiedText.startsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1);\n  }\n  if (modifiedText.endsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4);\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText));\n  return (\n    <Linkify key={\"link\" + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  );\n};\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === \"\") {\n    return nodeId;\n  }\n  const returnNode = nodeArray.filter(\n    item => item[\"@id\"].toString() === nodeId.toString()\n  )[0];\n\n  if (returnNode != null) {\n    return returnNode.n;\n  } else {\n    return \"\";\n  }\n};\n\nconst MemoEdgeProperties = EdgeProperties; /*React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network.selectedEdges, newProps.network.selectedEdges)\n})*/\n\nexport default MemoEdgeProperties;\n","import React from \"react\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { makeStyles, withStyles } from \"@material-ui/styles\";\n\nimport MemoNetworkProperties from \"./NetworkProperties\";\nimport NodeProperties from \"./NodeProperties\";\nimport MemoEdgeProperties from \"./EdgeProperties\";\n\nlet update = 0;\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"0.2em\",\n    backgroundColor: \"#FFFFFF\",\n    overflow: \"auto\"\n  },\n  list: {},\n  subtitle: {\n    marginLeft: \"1em\",\n    marginTop: \"0.5em\"\n  },\n  root: {\n    minHeight: 0\n  }\n}));\n\nconst HoverTab = withStyles(theme => ({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"rgb(220,220,220)\",\n      opacity: 1\n    }\n  }\n}))(props => <Tab {...props} />);\n\nconst TabContent = props => {\n  const { value } = props;\n  if (value === 0) {\n    return <MemoNetworkProperties {...props} />;\n  } else if (value === 1) {\n    return <NodeProperties {...props} />;\n  } else {\n    return <MemoEdgeProperties {...props} />;\n  }\n};\n\nconst DISABLED_STYLE = {\n  width: \"100%\"\n};\n\nconst TableBrowserPanel = props => {\n  //const network = props.network\n  const classes = useStyles();\n  let value = props.network.tableDisplayTab;\n  /*\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n*/\n  const originalCX = props.network.originalCX;\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />;\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue);\n  }\n\n  let nodeList;\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes;\n      break;\n    }\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        className={classes.root}\n        buttonStyle={{ height: \"28px\" }}\n      >\n        <HoverTab\n          className={classes.root}\n          key={\"network-tab\"}\n          label={\"Network\"}\n          buttonStyle={{ height: \"28px\" }}\n        />\n        <HoverTab\n          className={classes.root}\n          key={\"nodes-tab\"}\n          label={\"Nodes\"}\n          buttonStyle={{ height: \"28px\" }}\n        />\n        <HoverTab\n          className={classes.root}\n          key={\"edges-tab\"}\n          label={\"Edges\"}\n          buttonStyle={{ height: \"28px\" }}\n        />\n      </Tabs>\n      <TabContent value={value} nodeList={nodeList} {...props} />\n    </div>\n  );\n};\n\nconst MemoTableBrowserPanel = TableBrowserPanel; /*React.memo(TableBrowserPanel, (prevProps, newProps) => {\n  return isEqual(prevProps.network.tableDisplayTab, newProps.network.tableDisplayTab)\n})*/\n\nexport default MemoTableBrowserPanel;\n","import React from 'react'\n\nimport MemoTableBrowserPanel from './TableBrowserPanel'\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  if (props.network.originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  return (\n    <div className={'table-browser'}>\n      <MemoTableBrowserPanel {...props} />\n    </div>\n  ) \n}\n\nconst MemoTableBrowser = TableBrowser /*React.memo(TableBrowser, (prevProps, newProps) => {\n  return isEqual(prevProps.network.isFetching, newProps.network.isFetching)\n})*/\n\nexport default (MemoTableBrowser)\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../../../assets/images/cytoscape-logo.svg\";\nimport logoDisabled from \"../../../assets/images/cytoscape-logo-mono-light.svg\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\";\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: \"0.5em\",\n    borderColor: \"#EA9123\",\n    \"&:active\": {\n      borderColor: \"#EA9123\"\n    }\n  }\n})(Button);\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"2em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\"\n  }\n});\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling();\n    return () => {\n      props.cyrestActions.stopCyRestPolling();\n    };\n  }, []);\n\n  const { classes } = props;\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) ||\n    !props.cyrest.available;\n\n  const handleClick = () => {\n    props.handleImportNetwork();\n  };\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork;\n  const lastResponse = props.cyrest.lastResponse;\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState(\"dormant\");\n  const [message, setMessage] = useState(null);\n  let cycleId = 0;\n  //console.log(\"cycleId: \" + cycleId);\n  //console.log(\"state: \" + state);\n\n  if (state === \"dormant\" && isLoadingNetwork) {\n    setMessage(\"Opening network in Cytoscape Desktop . . .\");\n    setState(\"openLoading\");\n    if (!open) {\n      setOpen(true);\n    }\n  }\n  if (\n    (state === \"openLoading\" || state === \"closeLoading\") &&\n    lastResponse != null\n  ) {\n    setState(\"openResult\");\n    if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n      setMessage(\"Network opened in Cytoscape Desktop!\");\n    } else {\n      setMessage(\"Network failed to open in Cytoscape Desktop\");\n    }\n    if (!open) {\n      setOpen(true);\n    }\n  }\n  if (state === \"openResult\" && !open) {\n    setOpen(true);\n  }\n  if (state === \"openResult\" && open) {\n    let currentId = cycleId;\n    setTimeout(() => {\n      if (state === \"openResult\" && currentId === cycleId) {\n        setState(\"dormant\");\n        cycleId++;\n        setOpen(false);\n      }\n    }, 6000);\n  }\n\n  const handleClose = (event, reason) => {\n    console.log('click')\n    if (state === \"openLoading\") {\n      setState(\"closeLoading\");\n    } else if (state === \"openResult\") {\n      setState(\"dormant\");\n      cycleId++;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={\"right\"}\n        vertical={\"bottom\"}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(OpenInCytoscapeButton);\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core'\n\nimport logo from '../../../assets/images/zoom-logo.svg'\nimport disabledLogo from '../../../assets/images/zoom-logo-mono.svg'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '1.75em'\n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    borderColor: '#000000',\n    color: '#000000',\n    '&:active': {\n      borderColor: '#000000',\n      color: '#000000'\n    }\n  }\n})(Button)\n\nconst ResetZoomButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const handleClick = () => {\n    props.networkActions.fitNetworkView(true)\n  }\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(ResetZoomButton)\n","import React from 'react'\n\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: 'center',\n    lignHeight: '50%',\n    position: 'relative',\n    top: '1px'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  let highlight = props.uiState.highlights\n  \n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight\n      props.uiStateActions.setHighlights(highlight)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement='bottom'>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? 'secondary' : 'default'}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? 'secondary' : 'disabled'}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(Highlighter))\n\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n  },\n})(Button);\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(OpenInNDExButton))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes } = this.props\n    const token = this.props.ndexSave.profile ? this.props.ndexSave.profile.authorization.token : null\n    const cx = this.props.network.originalCX\n\n    const networkUrl = this.props.ndexSave.networkUrl\n\n    return this.props.ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default (withStyles(styles)(NDExSave))\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default (NDExSignInModal)\n\n\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\n\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: '4.3em',\n      borderColor: '#000000',\n      color: '#000000',\n      '&:active': {\n        borderColor: '#000000',\n        color: '#000000'\n      },\n    },\n  })(Button);\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n  console.log(SERVICE_SERVER_URL)\n  console.log(url)\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default (withStyles(styles)(OpenOriginalNetworkButton))\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Tooltip } from '@material-ui/core'\n\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport ResetZoomButton from './ResetZoomButton'\nimport Highlighter from './Highlighter'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    paddingTop: '0',\n    paddingBottom: '0',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...other} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport MemoTableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <MemoTableBrowser {...props}/>\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0',\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    },\n  },\n}))(InputBase);\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n}\n\nconst typeStyle = {\n  position: 'relative',\n  top: '14.5px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === 'p-Value') {\n      setSortPValueOn(true)\n      props.uiStateActions.setSortOrder(['p-Value', 'Overlap'])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions.setSortOrder(['Overlap', 'p-Value'])\n    }\n  }\n  \n  if (props.uiState.selectedSource === 'enrichment') {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? 'p-Value' : 'Overlap'}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={'p-Value'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={'Overlap'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default (SortPanel)\n            ","import React, { useEffect } from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SortPanel from \"./SortPanel\";\n\nimport \"./style.css\";\nimport { callbackify } from \"util\";\n\nconst styles = theme => ({\n  inline: {\n    display: \"inline\"\n  },\n  subtitle: {\n    marginLeft: \"1em\",\n    marginTop: \"0.5em\"\n  },\n  networkAvatar: {\n    margin: 5,\n    color: \"#fff\",\n    backgroundColor: \"#FAFAFA\"\n  },\n  menuItem: {\n    \"&:focus\": {\n      backgroundColor: \"rgba(230,230,230,0.6)\"\n    }\n  },\n  menuText: {\n    \"&:focus\": {}\n  },\n  secondary: {\n    width: \"15em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0.2em\"\n  },\n  plot: {\n    width: \"80%\",\n    background: \"teal\"\n  },\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    position: \"relative\",\n    top: \"25%\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\n\nconst findSort = sortOrder => {\n  if (sortOrder[0] === \"p-Value\") {\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1;\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1;\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    };\n  } else {\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1;\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1;\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    };\n  }\n};\n\nconst NetworkList = props => {\n  let hits = props.hits;\n\n  const openFirst = first => {\n    if (first != null) {\n      props.handleFetch(\n        first.networkUUID,\n        first.description,\n        first.nodes,\n        first.edges,\n        first.hitGenes\n      );\n    }\n  };\n\n  //Sort hits\n  useEffect(() => {\n    if (props.uiState.selectedSource === \"enrichment\") {\n      const sortFunction = findSort(props.uiState.sortOrder);\n      hits = hits.sort(sortFunction);\n    }\n    props.searchActions.setActualResults(hits);\n    openFirst(hits[0]);\n    props.networkActions.changeListIndex(1);\n  }, [props.uiState.sortOrder, props.uiState.selectedSource]);\n\n  useEffect(() => {\n    //Open first hit\n    openFirst();\n  }, [props.uiState.selectedSource]);\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />;\n  }\n\n  let index = 1;\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index);\n  }\n\n  const selectedIndex = props.network.listIndex;\n\n  let enrichmentStyle;\n  if (props.uiState.selectedSource === \"enrichment\") {\n    enrichmentStyle = {\n      height: `calc(100% - 49px)`\n    };\n  } else {\n    enrichmentStyle = {}\n  }\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\" style={enrichmentStyle}>\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry =>\n              props.renderNetworkListItem(\n                props.search.queryList.length,\n                entry,\n                props.classes,\n                handleListItemClick,\n                selectedIndex,\n                index++\n              )\n            )}\n          </MenuList>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography\n            variant={\"subtitle1\"}\n            color={\"textSecondary\"}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(NetworkList);\n","import React from \"react\";\nimport \"./style.css\";\n\nimport Split from \"react-split\";\n\nimport NetworkView from \"./NetworkView\";\nimport NetworkList from \"./NetworkList\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ListItem } from \"@material-ui/core\";\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList;\n\n  const sourceUUID = props.sourceUUID;\n\n  const id = props.search.results.jobId;\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes();\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    });\n    updateHistory(networkUUID);\n  };\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId;\n    const searchResults = props.search.searchResults;\n    const sourceName = props.uiState.selectedSource;\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log(\"** network changed:\", jobId, sourceName);\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`);\n    }\n  };\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true);\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    });\n  };\n\n  const renderNetworkListItem = (\n    querySize,\n    networkEntry,\n    classes,\n    handleListItemClick,\n    selectedIndex,\n    index\n  ) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      details\n    } = networkEntry;\n\n    const genes = (\n      <div display=\"inline\">\n        <Typography display=\"inline\" style={{ lineHeight: \"1.33\" }}>\n          <strong>{hitGenes ? hitGenes.length : \"?\"}</strong>{\" \"}\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          display=\"inline\"\n          color=\"textSecondary\"\n          style={{ lineHeight: \"1\" }}\n        >\n          genes\n        </Typography>\n      </div>\n    );\n\n    const icon = (\n      <ListItemIcon style={{ width: \"20px\" }}>\n        <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n      </ListItemIcon>\n    );\n\n    if (props.uiState.selectedSource === \"enrichment\") {\n      let pVal = details.PValue;\n      if (pVal !== undefined) {\n        if (pVal !== 0) {\n          pVal = pVal.toExponential(2);\n        }\n      }\n      const pv = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{pVal}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            pv\n          </Typography>\n        </div>\n      );\n\n      const title = (\n        <Typography style={{ lineHeight: \"1.33\" }}>\n          {description.split(\":\").slice(1)}\n        </Typography>\n      );\n\n      const subtitle = (\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n          style={{ lineHeight: \"1\" }}\n        >\n          Nodes: {nodes}, Edges: {edges}, Source: {description.split(\":\")[0]}\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\">\n                  {icon}\n                </td>\n                <td width=\"90px\" align=\"left\" valign=\"bottom\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\">\n                  {pv}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    } else {\n      const node = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{nodes}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"nodes \"}\n          </Typography>\n        </div>\n      );\n\n      const edge = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{edges}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"edges\"}\n          </Typography>\n        </div>\n      );\n\n      const title = (\n        <React.Fragment>\n          <Typography color=\"textPrimary\" style={{ lineHeight: \"1.33\" }}>\n            {description}\n          </Typography>\n        </React.Fragment>\n      );\n\n      const subtitle = (\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          Parent: {details.parent_network_nodes} nodes,{\" \"}\n          {details.parent_network_edges} edges\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" width=\"50px\">\n                  {icon}\n                </td>\n                <td colSpan=\"2\" align=\"left\" valign=\"bottom\" width=\"150px\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\" width=\"75px\">\n                  {node}\n                </td>\n                <td align=\"left\" valign=\"baseline\" width=\"80px\">\n                  {edge}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    }\n\n    /*\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <ListItemIcon style={{ width: \"30px\" }}>\n            <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n          </ListItemIcon>\n          <table tableLayout=\"fixed\" width=\"100%\">\n            <tbody>\n              <tr>\n                <td colSpan=\"4\" width=\"100%\">\n                  <Typography>{description}</Typography>\n                </td>\n              </tr>\n              <tr>\n                <td width=\"25%\">\n                  <Typography display=\"inline\" color=\"textSecondary\">\n                    <strong>{hitGenes.length}</strong>{\" \"}\n                  </Typography>\n                  <Typography variant=\"caption\" display=\"inline\" color=\"textSecondary\">\n                    genes\n                  </Typography>\n                </td>\n                <td width=\"25%\">\n                  <Typography display=\"inline\" color=\"textSecondary\">\n                    <strong>{pVal}</strong>{\" \"}\n                  </Typography>\n                  <Typography variant=\"caption\" display=\"inline\" color=\"textSecondary\">\n                    pv\n                  </Typography>\n                </td>\n                <td width=\"25%\">\n                  <Typography variant=\"caption\" color=\"textSecondary\">{nodes} nodes</Typography>\n                </td>\n                <td width=\"25%\">\n                  <Typography variant=\"caption\" color=\"textSecondary\">{edges} edges</Typography>\n                </td>\n              </tr>\n              <tr>\n                <td colSpan=\"4\">\n                <Typography variant=\"caption\" color=\"textSecondary\">Source: WikiPathways</Typography>\n              </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    }\n\n    /*\n\n    const icon = (\n      <ListItemIcon style={{ minWidth: \"0px\" }}>\n        <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n      </ListItemIcon>\n    );\n\n    const geneNumber = (\n      <React.Fragment>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          Genes\n        </Typography>\n        <Typography variant=\"body1\">\n          <font color=\"#333333\">\n            <strong>{hitGenes.length}</strong>\n          </font>\n        </Typography>\n      </React.Fragment>\n    );\n\n    const title = <Typography color=\"textPrimary\">{description}</Typography>;\n\n    if (props.uiState.selectedSource === \"enrichment\") {\n      let pValueNumber = \"\";\n      let pVal = details.PValue;\n      if (pVal !== undefined) {\n        if (pVal !== 0) {\n          pVal = pVal.toExponential(2);\n        }\n        pValueNumber = (\n          <React.Fragment>\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              p-Value\n            </Typography>\n            <Typography variant=\"body1\" noWrap=\"true\">\n              <font color=\"#333333\">\n                <strong>{pVal}</strong>\n              </font>\n            </Typography>\n          </React.Fragment>\n        );\n      }\n\n      const sourceName = (\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          Source\n        </Typography>\n      );\n\n      const nodesAndEdges = (\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          Nodes: {nodes}, Edges: {edges}\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table tableLayout=\"fixed\">\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" width=\"50px\">\n                  {icon}\n                </td>\n                <td align=\"center\" valign=\"bottom\" width=\"100px\">\n                  {geneNumber}\n                </td>\n                <td rowSpan=\"2\" align=\"left\" valign=\"top\">\n                  <div>{title}</div>\n                  <div>{nodesAndEdges}</div>\n                  <div>{sourceName}</div>\n                </td>\n              </tr>\n              <tr>\n                <td align=\"center\" valign=\"top\" width=\"100px\">\n                  {pValueNumber}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    } else {\n      const nodeNumber = (\n        <React.Fragment>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            Nodes\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            <font color=\"#333333\">\n              <strong>{nodes}</strong>\n            </font>\n          </Typography>\n        </React.Fragment>\n      );\n\n      const edgeNumber = (\n        <React.Fragment>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            Edges\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            <font color=\"#333333\">\n              <strong>{edges}</strong>\n            </font>\n          </Typography>\n        </React.Fragment>\n      );\n\n      const parentNodesAndEdges = (\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          Parent nodes: {nodes}, Parent edges: {edges}\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table tableLayout=\"fixed\">\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" width=\"50px\">\n                  {icon}\n                </td>\n                <td colSpan=\"3\" align=\"center\" valign=\"bottom\" width=\"100px\">\n                  {geneNumber}\n                </td>\n                <td rowSpan=\"2\" align=\"left\" valign=\"top\">\n                  {title}\n                  {parentNodesAndEdges}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"right\" valign=\"top\" width=\"49px\">\n                  {nodeNumber}\n                </td>\n                <td width=\"2px\" />\n                <td align=\"left\" valign=\"top\" width=\"49px\">\n                  {edgeNumber}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    }\n\n    /*\n    const topDescription = (\n      <React.Fragment>\n        Nodes: <strong>{nodes}</strong>, Edges: <strong>{edges}</strong>\n      </React.Fragment>\n    );\n\n    const bottomDescription1 = (\n      <React.Fragment>\n        Overlap: <strong>{hitGenes.length}</strong> out of {querySize} genes\n      </React.Fragment>\n    );\n\n    let bottomDescription2 = \"\";\n    const pVal = details.PValue;\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(2);\n      if (pVal === 0) {\n        pValText = 0;\n      }\n      bottomDescription2 = (\n        <React.Fragment>\n          p-value = <strong>{pValText}</strong>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={event => {\n          handleFetch(networkUUID, description, nodes, edges, hitGenes);\n          handleListItemClick(event, index);\n        }}\n        selected={selectedIndex === index}\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <div className={classes.listTitle}>\n              <Typography color=\"textPrimary\">{description}</Typography>\n            </div>\n          }\n          secondary={\n            <Typography\n              component=\"span\"\n              variant={\"caption\"}\n              color=\"textSecondary\"\n            >\n              {topDescription}\n              <br />\n              {bottomDescription1}\n              <br />\n              {bottomDescription2}\n            </Typography>\n          }\n        />\n      </ListItem>\n    );\n    */\n  };\n\n  return (\n    <Split sizes={[40, 60]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList\n        renderNetworkListItem={renderNetworkListItem}\n        handleFetch={handleFetch}\n        hits={props.hits}\n        {...props}\n      />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  );\n};\n\nexport default Ndex;\n","import React from 'react'\n\nimport Ndex from './Ndex'\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const results = props.results\n\n  if (results === null || results === undefined) {\n    return (\n      <LoadingPanel \n        title={'Loading results'} \n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  } else {\n    return (\n      <Ndex \n        hits={results.results} \n        sourceUUID={results.sourceUUID}\n        {...props}\n      />\n    )\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Empty from \"./Empty\";\nimport TabContent from \"./TabContent\";\nimport { ListItem } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  tabs: {},\n  grow: {\n    flexGrow: 1\n  }\n});\n\nconst HoverTab = withStyles(theme => ({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"rgb(230,230,230)\",\n      opacity: 1\n    }\n  }\n}))(props => <Tab {...props} />);\n\nconst Results = props => {\n  const { classes } = props;\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0);\n\n  useEffect(() => {\n    updateHistory(0);\n  }, []);\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx);\n    updateHistory(idx);\n    props.networkActions.networkClear();\n    props.networkActions.changeListIndex(0);\n  };\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results;\n    if (results === null || results === undefined) {\n      return;\n    }\n\n    const jobId = results.jobId;\n    const searchResults = props.search.searchResults;\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue);\n      console.log(\"** Tab change:\", jobId, sourceName);\n      props.uiStateActions.setSelectedSource(sourceName);\n      props.history.push(`/${jobId}/${sourceName}`);\n    }\n  };\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources;\n  if (sources === null || sources === undefined) {\n    return <Empty />;\n  }\n\n  const searchResults = props.search.searchResults;\n  const selectedSourceName = getSourceName(sources, idx);\n\n  const results = findResult(selectedSourceName, searchResults);\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange} className={classes.tabs}>\n          {sources.map(source => (\n            <HoverTab\n              key={source.uuid}\n              label={\n                source.name === \"enrichment\"\n                  ? \"Gene Enrichment\"\n                  : source.name === \"interactome-ppi\"\n                  ? \"Protein Interactions\"\n                  : source.name === \"interactome-association\"\n                  ? \"Gene Association\"\n                  : source.name\n              }\n            >\n              <ListItem button>hey</ListItem>\n            </HoverTab>\n          ))}\n        </Tabs>\n        <TabContent results={results} {...props} />\n      </div>\n    </div>\n  );\n};\n\n/*\n\n              */\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name;\n};\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null;\n  }\n\n  const resultArray = results.sources;\n\n  let idx = resultArray.length;\n\n  while (idx--) {\n    const currentResult = resultArray[idx];\n    if (currentResult.sourceName === sourceName) {\n      return currentResult;\n    }\n  }\n  return null;\n};\n\nexport default withStyles(styles)(Results);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { loadCSS } from \"fg-loadcss/src/loadCSS\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport classNames from \"classnames\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport MessageSnackbar from \"./MessageSnackbar\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"50vmin\",\n    padding: \"0.3em\",\n    background: \"#f1f1f1\",\n    marginLeft: \"1em\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n};\n\nconst ORIGINAL_GENE_TEXT = \"original-gene-text\";\n\nconst GeneTextBox = props => {\n  const { classes } = props;\n  const geneTextRef = useRef(null);\n\n  const [queryText, setQuery] = useState(props.search.queryGenes);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    loadCSS(\n      \"https://use.fontawesome.com/releases/v5.1.0/css/all.css\",\n      document.querySelector(\"#insertion-point-jss\")\n    );\n    return () => {};\n  }, []);\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT);\n    copyText.select();\n    document.execCommand(\"copy\");\n\n    // Show message\n    setOpen(true);\n  };\n  /*\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n  \n    const sourceNames = sources.map(source => source.name)\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/)\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n    \n  }\n*/\n  const handleSearch = evt => {\n    const genes = queryText;\n    const sources = props.source.sources;\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return;\n    }\n\n    const sourceNames = sources.map(source => source.name);\n\n    const geneListString = genes.replace(\",\", \" \");\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/);\n\n    props.searchActions.clearAll();\n    props.history.push(\"/\");\n    props.searchActions.setQuery(genes);\n    props.searchActions.searchStarted({ geneList, sourceNames });\n  };\n\n  const handleChange = evt => {\n    const value = evt.target.value;\n    setQuery(value);\n  };\n\n  const handleClear = evt => {\n    setQuery(\"\");\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch(event);\n    }\n  };\n\n  return (\n    <div>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={\"Genes are copied to clipboard!\"}\n        autoHideDuration={4000}\n        horizontal={\"left\"}\n        vertical={\"bottom\"}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, \"far fa-clipboard\")} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(GeneTextBox);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo-mono-dark.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono-dark.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo-mono-dark.svg'\nimport wpLogo from '../../assets/images/wp-logo-mono-dark.svg'\nimport idekerLogo from '../../assets/images/ideker-logo-mono-dark.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    paddingLeft: '16px',\n    paddingRight: '16px'\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '16px'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\" style={titleStyle}>\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <div className={classes.textBox}>\n              <GeneTextBox {...props} />\n             </div>\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n              \n            <Tooltip title=\"Help\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={() => openLink(HELP_URL)}\n              >\n                <HelpIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NDEx\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NDEX_URL)}\n              >\n                <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\nconst IL_URL = 'http://idekerlab.ucsd.edu/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, { withTheme: true})(TitleBar))","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" alt='list item icon'/>\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin',\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...props} />\n      <SettingsPanel {...props}/>\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default (withStyles(styles, {withTheme: true})(AppShell))","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const isFetching = props.search.isFetching\n  const searchResult = props.search.searchResult\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props} >\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props} >\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props}/>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default (HomePanel)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel {...props} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport * as examples from \"./example-genes\";\n\nconst EXAMPLES = examples.default.examples;\n\nconst styles = {\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n};\n\nconst SearchTextBox = props => {\n  const { classes } = props;\n  const searchButtonEl = useRef();\n\n  const [state, setState] = useState({ anchorEl: null, query: \"\" });\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId;\n      props.history.push(`/${jobId}`);\n    }\n  }, []);\n\n  const open = Boolean(state.anchorEl);\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null });\n  };\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    });\n  };\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    });\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      // TODO: add validator here\n      handleSearch();\n    }\n  };\n\n  const handleClear = () => {\n    setState({ ...state, query: \"\" });\n  };\n\n  const handleSearch = event => {\n    const genes = state.query;\n    const sources = props.source.sources;\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return;\n    }\n\n    const sourceNames = sources.map(source => source.name);\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/);\n    props.searchActions.setQuery(genes);\n    props.searchActions.searchStarted({ geneList, sourceNames });\n  };\n\n  return (\n    <Paper className={\"search-text-box\"} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={\"default\"}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange(\"query\")}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={\"primary\"}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SearchTextBox);\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\nimport LoadingPanel from '../LoadingPanel'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox \n        {...props}\n      />\n      <Footer />\n    </div>\n  )\n}\n\nexport default (StartPanel)","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell \n    {...props}\n  >\n    <StartPanel\n      {...props}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      {...props}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setZoomed,\n  setSortOrder,\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: 'enrichment',\n  zoomed: false,\n  sortOrder: ['p-Value', 'Overlap'],\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    },\n    [setZoomed]: (state, payload) => {\n      return {\n        ...state,\n        zoomed: payload.payload\n      }\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      }\n    },\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from \"redux-actions\";\nimport { CxToJs, CyNetworkUtils } from \"cytoscape-cx2js\";\nimport { MAX_NETWORK_SIZE } from \"../components/Results/CytoscapeViewer\";\nimport * as vs from \"../assets/data/styles.json\";\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  fitNetworkView\n} from \"../actions/network\";\n\nconst defaultState = {\n  isFetching: false,\n  uuid: \"\",\n  jobId: \"\",\n  sourceId: \"\",\n  networkName: \"\",\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0,\n  fit: false\n};\n\nconst utils = new CyNetworkUtils();\nconst cx2js = new CxToJs(utils);\n\nconst PRESET_VS = vs.default[0].style;\n\n// Standard selection\nPRESET_VS.push({\n  selector: \"node:selected\",\n  css: {\n    \"background-color\": \"red\",\n    color: \"#FFFFFF\",\n    \"background-opacity\": 1,\n    \"border-width\": 0,\n    width: 100,\n    height: 100\n  }\n});\n\n// For class-based style update\nconst fadedNode = {\n  selector: \"node.faded\",\n  css: {\n    opacity: 0.9\n  }\n};\n\nconst fadedEdge = {\n  selector: \"edge.faded\",\n  css: {\n    opacity: 0.9\n  }\n};\n\nconst highlight = {\n  selector: \".highlight\",\n  css: {\n    opacity: 1.0,\n    \"overlay-color\": \"#C51162\",\n    \"overlay-padding\": 12,\n    \"overlay-opacity\": 0.5\n  }\n};\n\nconst activeObject = {\n  selector: \"node:active\",\n  css: {\n    \"overlay-color\": \"#FFFF66\",\n    \"overlay-padding\": 25,\n    \"overlay-opacity\": 0.3\n  }\n};\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log(\"Query start: genes = \", payload);\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: \"blue\",\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0\n      };\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx;\n      let network = {};\n      let backgroundColor = {};\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes);\n          network = cyjsNetwork;\n        } catch (err) {\n          // This is an error state\n          console.warn(\"Could not convert given CX to CYJS:\", err);\n          throw new Error(\"Could not convert given CX to CYJS:\", err);\n        }\n\n        backgroundColor = getBackGround(originalCX);\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      };\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      };\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: \"\",\n        networkName: \"\",\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      };\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      };\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: payload.payload\n      };\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      };\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: payload.payload\n      };\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      };\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      };\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      };\n    },\n    [fitNetworkView]: (state, payload) => {\n      return {\n        ...state,\n        fit: payload.payload\n      };\n    }\n  },\n  defaultState\n);\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx);\n  const attributeNameMap = {};\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap);\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap);\n\n  const newStyle = styleUpdater(style);\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes);\n  const elements = [...updatedNodes, ...elementsObj.edges];\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  };\n};\n\nconst VS_TAG = \"cyVisualProperties\";\nconst getBackGround = cx => {\n  let color = \"pink\";\n\n  const vps = cx.filter(entry => entry[VS_TAG]);\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0];\n    const allVp = vp[VS_TAG];\n    const networkVp = allVp.filter(p => p[\"properties_of\"] === \"network\");\n    return networkVp[0].properties[\"NETWORK_BACKGROUND_PAINT\"];\n  } else {\n    return color;\n  }\n};\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length;\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()));\n\n  while (len--) {\n    const node = nodes[len];\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null;\n    if (upperQuery.has(name)) {\n      node.data[\"query\"] = \"true\";\n    }\n  }\n  return nodes;\n};\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0];\n  if (node.position === undefined) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst styleUpdater = style => {\n  style.push(fadedNode);\n  style.push(fadedEdge);\n  style.push(highlight);\n  style.push(activeObject);\n  return style;\n};\n\nexport default network;\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst cyrest = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default cyrest\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport * as api from \"../api/ndex\";\nimport * as myGeneApi from \"../api/mygene\";\nimport * as cySearchApi from \"../api/search\";\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from \"../actions/search\";\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from \"../actions/source\";\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from \"../actions/network\";\n\nconst API_CALL_INTERVAL = 1000;\n\nconst SELECTED_SOURCES = [\"enrichment\", \"interactome\"];\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch);\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult);\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork);\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource);\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList;\n  let sourceNames = action.payload.sourceNames;\n\n  // If source names are missing, find them:\n  if (\n    sourceNames === undefined ||\n    sourceNames === null ||\n    sourceNames.length === 0\n  ) {\n    const sources = yield call(cySearchApi.getSource, null);\n    const sourceJson = yield call([sources, \"json\"]);\n    const sourceList = sourceJson.results;\n    sourceNames = sourceList.map(source => source.name);\n    sourceNames = sourceNames.filter(name => name !== \"keyword\");\n  }\n  const geneListString = geneList.join();\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ]);\n\n    const geneJson = yield call([geneRes, \"json\"]);\n    const resultLocation = searchRes.headers.get(\"Location\");\n    const parts = resultLocation.split(\"/\");\n    const jobId = parts[parts.length - 1];\n    const filtered = filterGenes(geneJson);\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    });\n  } catch (e) {\n    console.warn(\"NDEx search error:\", e);\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: \"NDEx network search error\",\n        query: geneListString,\n        error: e.message\n      }\n    });\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId;\n\n  const currentResult = {};\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId);\n      const statusJson = yield call([statusRes, \"json\"]);\n\n      const { progress } = statusJson;\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId);\n        const resultJson = yield call([resultRes, \"json\"]);\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        });\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        });\n        return;\n      }\n\n      const status = statusJson.sources;\n\n      let idx = status.length;\n      while (idx--) {\n        const src = status[idx];\n        const { progress, sourceName } = src;\n        if (progress === 100) {\n          const resultRes = yield call(\n            cySearchApi.getResult,\n            jobId,\n            sourceName\n          );\n          const json = yield call([resultRes, \"json\"]);\n\n          currentResult[sourceName] = json;\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          });\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL);\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId);\n    const resultJson = yield call([resultRes, \"json\"]);\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    });\n  } catch (e) {\n    console.warn(\"NDEx search error:\", e);\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: \"Failed to fetch search result\",\n        jobId,\n        error: e.message\n      }\n    });\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload;\n    const id = params.id;\n    const sourceUUID = params.sourceUUID;\n    const networkUUID = params.networkUUID;\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID);\n    const json = yield call([cx, \"json\"]);\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json });\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error });\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null);\n    const json = yield call([sources, \"json\"]);\n\n    const orderedSources = json.results\n    /*\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry[\"name\"])\n    );\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl[\"name\"]) -\n        SELECTED_SOURCES.indexOf(secondEl[\"name\"])\n    );\n*/\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources });\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error });\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map();\n  const notFound = [];\n\n  let len = resultList.length;\n  while (len--) {\n    const entry = resultList[len];\n    if (entry.notfound) {\n      notFound.push(entry.query);\n    } else {\n      uniqueGeneMap.set(entry.query, entry);\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  };\n};\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}