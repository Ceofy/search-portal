{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/search-logo.svg","assets/images/ucsd-logo.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/HoverTab.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/LayoutSettings.js","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/ExpandPanel.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","api/apiConstants.js","api/cyrest.js","sagas/cyRestStatusSaga.js","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/LayoutSelector.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/InfoModal.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","reducers/search.js","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/uiState.js","reducers/network.js","reducers/source.ts","reducers/cyrest.ts","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga-util.ts","sagas/ndexSaga.ts","sagas/cyRestSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg","assets/images/cytoscape-logo.svg"],"names":["module","exports","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_OPTIONS","SET_SORT_BY","setSortOptions","setSortBy","SET_LAYOUT","SET_LAYOUTS","setLayout","setLayouts","SET_ANNOTATIONS","setAnnotations","FIT_NETWORK_VIEW","fitNetworkView","UPDATE","update","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","SET_NETWORK_URL","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","setNetworkUrl","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","padding","borderRadius","height","borderWidth","backgroundColor","selectedButtonStyle","selectedChipStyle","margin","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","props","hitSets","color","found","has","symbol","Chip","avatar","Avatar","style","width","position","left","variant","key","selected","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","geneToNodeMap","alignment","selectedGenes","searchActions","className","geneList","genes","matched","unmatched","values","push","matchedSorted","sort","reverse","unmatchedSorted","sorted","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","InputPanel","nodeList","nodeAttributes","originalCX","i","length","nodes","undefined","geneName","currentAttribute","n","nodeName","filter","node","po","geneNames","v","j","startsWith","substring","size","HoverTab","Hover","theme","root","backgroundcolor","opacity","Tab","Empty","Typography","message","MessageSnackbar","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","id","action","IconButton","aria-label","onClick","logo","button","display","marginLeft","marginRight","top","outer","justifyContent","alignItems","inner","marginTop","classes","useState","state","setState","setMessage","uuid","cyrest","available","isLoadingNetwork","lastResponse","cycleId","console","log","type","currentId","setTimeout","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","align","CONCENTRIC_LAYOUT","name","minNodeSpacing","animate","COSE_LAYOUT","nodeRepulsion","nodeOverlap","idealEdgeLength","edge","fit","Cytoscape","use","CyCanvas","cyInstance","annotationRenderer","CxToCyCanvas","CxToJs","utils","CyNetworkUtils","CytoscapeViewer","propLayouts","propLayout","uiState","highlights","cyjs","cloneDeep","elements","originalElements","PRESET_LAYOUT","positions","_private","data","elem","toString","layout","useEffect","on","target","networkActions","e","warn","selectEdge","edges","$","forEach","element","selectNode","removeClass","this","source","addClass","isLayout","Promise","resolve","reject","networkAttr","entry","networkAttributes","firstEntry","annotationEntry","attr","nice","rawCXtoNiceCX","drawAnnotationsFromNiceCX","drawBackground","renderAnnotations","then","uiStateActions","layouts","targets","zoom","center","eles","duration","nodeCount","edgeCount","resize","stop","background","stylesheet","cy","LoadingPanel","CircularProgress","NetworkViewer","isFetching","actualResults","resized","findAttributes","attrType","len","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","ExpandPanel","React","defaultExpanded","divider","borderTop","Math","random","ListItemText","primary","summary","Collapse","in","timeout","unmountOnExit","component","disablePadding","details","index","useStyles","makeStyles","container","overflow","boxSizing","paddingLeft","paddingTop","lessPadding","noPadding","paddingBottom","extractContent","modifiedText","Array","isArray","join","extractTitle","formatPrimary","endsWith","parse","formatContext","split","item","splitResults","valign","NetworkProperties","context","content","leftDisplayItems","properties","contributors","wikiPathways","indraGO","networkInformation","rightDisplayItems","attributes","displayed","selectedSource","latinIndex","toLowerCase","indexOf","newTitle","splice","rightDisplay","list","currentEntry","secondaryString","primaryString","leftDisplay","keyId","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","getListItem","geneEntry","description","_id","disableGutters","ListItemAvatar","inline","href","search_results","geneSymbol","upperListItem","get","Component","linkIcon","nested","spacing","wideList","table","tableLayout","icon","weidth","MemoNodeProperties","memo","selectedNodes","nodeData","aliasList","memberList","setDefaultExpanded","entityProperties","nodeProperties","displayItems","a","b","topDisplay","geneAnnotation","inset","querynode","aliases","members","represents","prefix","add","aliasLinks","alias","memberLinks","member","displayCol1","displayCol2","colSpan","oldProps","newProps","isEqual","findNode","nodeId","nodeArray","isNaN","returnNode","MemoEdgeProperties","selectedEdges","edgeProperties","aScore","bScore","aSource","aTarget","bSource","bTarget","listPadding","queryList","includes","prevProps","subtitle","minHeight","TabContent","JSON","mapKeys","k","r","d","concat","DISABLED_STYLE","TableBrowserPanel","tableDisplayTab","Tabs","newValue","MemoTableBrowser","BASE_URL","SERVICE_SERVER_URL","status","cyRESTPort","fetch","CYREST_BASE_URL","method","importNetwork","payload","importNetworkUrl","headers","Accept","body","stringify","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","currentConnectionState","call","put","take","race","all","BootstrapButton","borderColor","fade","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","logoDisabled","disabledLogo","textAlign","lignHeight","highlight","evt","ndexSaveActions","NDExSave","cx","token","networkUrl","ndexSave","profile","authorization","DialogContentText","DialogActions","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","err","error","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","clientId","render","renderProps","buttonText","CredentialsSignOn","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","handleError","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal","onLogout","preventDefault","handleOnSuccess","resp","Dialog","ndexModal","aria-labelledby","image","errorMessage","handleOpen","url","window","fontSize","formControl","input","focused","notchedOutline","menuItems","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","InputLabel","ref","htmlFor","Select","OutlinedInput","MenuItem","toolbar","paddingRight","grow","flexGrow","menuButton","breakpoints","up","shape","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","buttons","border","openIcon","other","networkName","setValue","noWrap","DEFAULT_RATIO","NetworkView","setResize","direction","onDragEnd","infoStyle","iconStyle","bottom","PaperComponent","cancel","InfoModal","cursor","dividers","rel","BootstrapInput","textColor","InputBase","formStyle","marginBottom","divStyle","borderBottom","textStyle","selectStyle","SortPanel","sortBy","sortOptions","displayEmpty","findSort","PValue","rank","similarity","networkAvatar","menuItem","menuText","secondary","plot","openFirst","first","handleFetch","networkUUID","networkCount","totalNetworkCount","firstHit","sortFunction","opened","listIndex","handleListItemClick","enrichmentStyle","selectedIndex","MenuList","renderNetworkListItem","titleStyle","lineHeight","wordBreak","subtitleStyle","edgeStyle","tableStyle","borderCollapse","borderSpacing","Ndex","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","querySize","networkEntry","imageURL","ListItemIcon","newline","pVal","threshold","pow","ceil","LN10","toExponential","pv","sim","toFixed","rowSpan","parent_network_nodes","parent_network_edges","totalNetworks","sourceId","numberOfNetworks","TAB_LABELS","enrichment","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","others","setSelectedTabIndex","selectedSourceName","EMPTY_STATE","isSearching","queryGenes","searchStatus","resultList","HGNC_REGEX","RegExp","handleActions","newQueryList","gene","test","singleResult","EXAMPLES","examples","flex","iconButton","geneTextRef","anchorEl","query","menuOpen","Boolean","loadCSS","document","querySelector","handleSearch","sourceNames","elevation","currentTarget","transformOrigin","example","Divider","getElementById","select","execCommand","Icon","classNames","onKeyDown","textTransform","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","homeLogo","textBox","openLink","NDEX_URL","HELP_URL","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","whiteSpace","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","sourceEntry","version","text","LINKS","link","github","flexShrink","drawerHeader","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","children","HomePanel","historyListener","pathname","listen","withRouter","connect","dispatch","bindActionCreators","sourceActions","ReactGA","set","page","pageview","searchButtonEl","autoFocus","searchLogo","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","ndex","APP_VERSION","TopPage","Top","App","hostname","match","sortOrder","annotations","cx2js","vs","selector","css","fadedNode","fadedEdge","activeObject","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","p","upperQuery","isFetchingSource","currentSource","info","port","isFetchingAvailable","isPollingAvailable","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","MYGENE_BASE_URL","getSource","mode","response","ok","catch","checkStatus","getResult","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","filterGenes","uniqueGeneMap","Map","notFound","notfound","watchSearch","watchSearchResult","fetchSource","rootSaga","API_CALL_INTERVAL","sourceJson","geneListString","myGeneApi","geneRes","searchRes","geneJson","resultLocation","parts","filtered","sleep","ms","finishedSourceNames","statusRes","statusJson","progress","resultRes","json","finishCount","params","api","orderedSources","takeLatest","cyrestSaga","watchImportNetwork","getCyRESTPort","addNumberVerification","aspect","patchedCX","numberVerification","longNumber","responseJson","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","user","basicAuthSignIn","accountName","pwd","password","auth","btoa","firstName","responseText","networkURL","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","next","run","cyRestSaga","cyRestStatusSaga","basename","process","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cca7879d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.55a0b3a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-logo.19dae5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)\n","import { createAction } from 'redux-actions'\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_OPTIONS = 'SET_SORT_OPTIONS'\nexport const SET_SORT_BY = 'SET_SORT_BY'\nexport const setSortOptions = createAction(SET_SORT_OPTIONS)\nexport const setSortBy = createAction(SET_SORT_BY)\n\n//Layout\nexport const SET_LAYOUT = 'SET_LAYOUT'\nexport const SET_LAYOUTS = 'SET_LAYOUTS'\nexport const setLayout = createAction(SET_LAYOUT)\nexport const setLayouts = createAction(SET_LAYOUTS)\n\n//Annotations\nexport const SET_ANNOTATIONS = 'SET_ANNOTATIONS'\nexport const setAnnotations = createAction(SET_ANNOTATIONS)\n\n//Fit\nexport const FIT_NETWORK_VIEW = 'FIT_NETWORK_VIEW'\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)\n\nexport const UPDATE = 'UPDATE'\nexport const update = createAction(UPDATE)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)\n","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nconst buttonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: '#FFFFFF'\n}\n\nconst selectedButtonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: 'rgb(252, 235, 242)'\n}\n\nconst selectedChipStyle = {\n  margin: '0',\n  borderRadius: '20px'\n}\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: 'transparent'\n}\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: 'transparent'\n  }\n})(MuiToggleButton)\n\nconst GeneList = props => {\n  const results = props.search.results\n  const hits = props.network.hitGenes\n  const hitSets = new Set(hits)\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment in props.geneToNodeMap) {\n      const alignment = props.geneToNodeMap[newAlignment]\n      if (alignment === props.search.selectedGenes[0]) {\n        props.searchActions.clearSelectedGenes()\n      } else {\n        props.searchActions.setSelectedGenes(alignment)\n      }\n    } else {\n      if (newAlignment === props.search.selectedGenes[0]) {\n        props.searchActions.clearSelectedGenes()\n      } else {\n        props.searchActions.setSelectedGenes(newAlignment)\n      }\n    }\n  }\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (const value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const matchedSorted = matched.sort().reverse()\n  const unmatchedSorted = unmatched.sort().reverse()\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup\n              value={props.search.selectedGenes}\n              exclusive\n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton\n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) &&\n                  props.search.selectedGenes[0] === geneValue.symbol\n                    ? selectedButtonStyle\n                    : buttonStyle\n                }\n              >\n                {getChip(geneValue, true, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        avatar={\n          <Avatar\n            style={{\n              height: '32px',\n              width: '32px',\n              position: 'relative',\n              left: '-4px'\n            }}\n          >\n            {found ? <CheckIcon style={{ height: '18px' }} /> : '-'}\n          </Avatar>\n        }\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        key={value}\n        clickable={true}\n      />\n    )\n  }\n}\n\nexport default GeneList\n","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => {\n  const stripGene = geneName => {\n    if (geneName == null) {\n      return null\n    }\n    if (geneName.startsWith('hgnc.symbol:') && geneName.length > 12) {\n      return geneName.substring(12)\n    }\n    return geneName\n  }\n\n  const geneToNodeMap = {}\n  let nodeList\n  let nodeAttributes\n  if (props.network.originalCX != null) {\n    for (let i = 0; i < props.network.originalCX.length; i++) {\n      if (props.network.originalCX[i].nodes != null) {\n        nodeList = props.network.originalCX[i].nodes\n        if (nodeAttributes != undefined) {\n          break\n        }\n      }\n      if (props.network.originalCX[i].nodeAttributes != null) {\n        nodeAttributes = props.network.originalCX[i].nodeAttributes\n        if (nodeList != undefined) {\n          break\n        }\n      }\n    }\n\n    for (let i = 0; i < nodeAttributes.length; i++) {\n      const currentAttribute = nodeAttributes[i]\n      if (currentAttribute.n === 'member') {\n        const nodeName = nodeList.filter(\n          node => node['@id'] === currentAttribute.po\n        )[0].n\n        const geneNames = currentAttribute.v\n        for (let j = 0; j < geneNames.length; j++) {\n          geneToNodeMap[stripGene(currentAttribute.v[j])] = nodeName\n        }\n      }\n    }\n  }\n  return (\n    <div className=\"input-container\">\n      <div className=\"input-wrapper\">\n        <div className={'gene-list-title'}>\n          Query Genes{' '}\n          {props.search.results\n            ? '(' + props.search.results.genes.size + ')'\n            : null}\n        </div>\n        <GeneList geneToNodeMap={geneToNodeMap} {...props} />\n      </div>\n    </div>\n  )\n}\n\nexport default InputPanel\n","import React from 'react'\nimport Tab from '@material-ui/core/Tab'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst HoverTab = props => {\n  //const { backgroundColor, ...other } = props\n\n  const Hover = withStyles(theme => ({\n    root: {\n      '&:hover': {\n        backgroundColor: props.backgroundcolor,\n        opacity: 1\n      }\n    }\n  }))(props => <Tab {...props} />)\n  return <Hover {...props} />\n}\n\nexport default HoverTab\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"h3\">{props.message}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, { useState } from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    props.setOpen(false)\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState } from 'react'\nimport { Typography } from '@material-ui/core'\nimport cytoLogo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core/styles'\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport './style.css'\n\nconst styles = theme => ({\n  logo: {},\n  button: {\n    height: '50%',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    position: 'relative',\n    top: '15%'\n  },\n  outer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inner: {\n    position: 'relative',\n    marginTop: '15%',\n    width: '100%'\n  }\n})\n\nconst Warning = props => {\n  const { classes } = props\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  if (\n    props.network.uuid &&\n    props.network.uuid.length > 0 &&\n    props.cyrest.available\n  ) {\n    //Snackbar\n    const isLoadingNetwork = props.cyrest.isLoadingNetwork\n    const lastResponse = props.cyrest.lastResponse\n\n    let cycleId = 0\n    console.log('cycleId: ' + cycleId)\n    console.log('state: ' + state)\n\n    if (state === 'dormant' && isLoadingNetwork) {\n      setMessage('Opening network in Cytoscape Desktop . . .')\n      setState('openLoading')\n      if (!open) {\n        setOpen(true)\n      }\n    }\n    if (\n      (state === 'openLoading' || state === 'closeLoading') &&\n      lastResponse != null\n    ) {\n      setState('openResult')\n      if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n        setMessage('Network opened in Cytoscape Desktop!')\n      } else {\n        setMessage('Network failed to open in Cytoscape Desktop')\n      }\n      if (!open) {\n        setOpen(true)\n      }\n    }\n    if (state === 'openResult' && !open) {\n      setOpen(true)\n    }\n    if (state === 'openResult' && open) {\n      const currentId = cycleId\n      setTimeout(() => {\n        if (state === 'openResult' && currentId === cycleId) {\n          setState('dormant')\n          cycleId++\n          setOpen(false)\n        }\n      }, 6000)\n    }\n\n    const handleClose = (event, reason) => {\n      console.log('click')\n      if (state === 'openLoading') {\n        console.log('openLoading to closeLoading')\n        setState('closeLoading')\n      } else if (state === 'openResult') {\n        console.log('openResult to dormant')\n        setState('dormant')\n        cycleId++\n      }\n      setOpen(false)\n      console.log('open: ' + open)\n    }\n\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton\n            className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Network is too big for interactive view. <br />\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={'right'}\n          vertical={'bottom'}\n          handleClose={handleClose}\n        />\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">\n            Network is too big for interactive view. <br />\n            Please open Cytoscape Desktop to view.\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Warning)\n","export const PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6,\n  animate: false,\n  positions: function(node) {\n    const x = node[0]._private.position.x * 0\n    const y = node[0]._private.position.y * 0\n    console.log('HEY')\n    return {\n      x: x, //node[0]._private.position.x,\n      y: y //node[0]._private.position.y\n    }\n  }\n}\n\nexport const CONCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100,\n  animate: false\n}\n\nexport const COSE_LAYOUT = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  },\n  animate: false,\n  fit: false\n}\n","import React, { useEffect, useMemo, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport Cytoscape from 'cytoscape'\nimport CyCanvas from 'cytoscape-canvas'\nimport { CxToCyCanvas } from 'cyannotation-cx2js'\nimport Warning from './Warning'\nimport { CONCENTRIC_LAYOUT, COSE_LAYOUT } from './LayoutSettings'\nimport { isEqual, cloneDeep } from 'lodash'\n\nimport './style.css'\n\nexport const MAX_NETWORK_SIZE = 5000\n\n// For supporting visual annotation\nCytoscape.use(CyCanvas)\n\n// This is the global instance of Cytoscape.js\nlet cyInstance = null\n\n// For annotation rendering\nconst annotationRenderer = new CxToCyCanvas(CxToJs)\nconst utils = new CyNetworkUtils()\n\n// This is the network attributes storing graphical annotations.\nconst ANNOTATION_TAG = '__Annotations'\n\n// Default network background color\nconst DEF_BG_COLOR = '#FFFFFF'\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\n\nconst CytoscapeViewer = props => {\n  const { highlights, fit } = props.uiState\n  const { originalCX } = props.network\n  const cyjs = props.network.network\n  const [originalElements, setOriginalElements] = useState(\n    cyjs ? cloneDeep(cyjs.elements) : null\n  )\n\n  const PRESET_LAYOUT = {\n    name: 'preset',\n    padding: 6,\n    animate: false,\n    positions: function(node) {\n      const id = node[0]._private.data.id\n      const analog = originalElements.filter(elem => {\n        return elem.data.id.toString() === id.toString()\n      })\n      const position = analog[0].position\n      return position\n    }\n  }\n  const [layout, setLayout] = useState(PRESET_LAYOUT)\n  let propLayouts\n  let propLayout\n\n  // Use default color if this property is not available.\n  let backgroundColor = props.network.backgroundColor\n  if (backgroundColor === null || backgroundColor === undefined) {\n    backgroundColor = DEF_BG_COLOR\n  }\n  /*\n  const niceCX = useMemo(() => {\n    if (originalCX && layout.name === 'preset') {\n      const networkAttr = originalCX.filter(\n        entry => entry.networkAttributes !== undefined\n      )\n      if (networkAttr !== undefined) {\n        const firstEntry = networkAttr[0]\n        if (\n          firstEntry === undefined ||\n          firstEntry.networkAttributes === undefined\n        ) {\n          return\n        }\n        const netAttrArray = firstEntry.networkAttributes\n        const annotationEntry = netAttrArray.filter(\n          attr => attr.n === ANNOTATION_TAG\n        )\n        if (annotationEntry.length !== 0 && cyInstance) {\n          const nice = utils.rawCXtoNiceCX(originalCX)\n          console.log(\n            '* Registering annotation renderer for this niceCX:',\n            annotationEntry\n          )\n          new Promise(function(resolve, reject) {\n            annotationRenderer.drawAnnotationsFromNiceCX(cyInstance, nice)\n            annotationRenderer.drawBackground(cyInstance, backgroundColor)\n            resolve()\n          }).then(() => {\n            props.networkActions.setAnnotations(true)\n          })\n          return nice\n        }\n      }\n    }\n    return null\n  }, [originalCX, cyInstance])\n*/\n  const renderAnnotations = () => {\n    if (layout.name === 'preset' && originalCX) {\n      const networkAttr = originalCX.filter(\n        entry => entry.networkAttributes !== undefined\n      )\n      if (networkAttr !== undefined) {\n        const firstEntry = networkAttr[0]\n        if (\n          firstEntry !== undefined &&\n          firstEntry.networkAttributes != undefined\n        ) {\n          const netAttrArray = firstEntry.networkAttributes\n          const annotationEntry = netAttrArray.filter(\n            attr => attr.n === ANNOTATION_TAG\n          )\n          if (annotationEntry.length !== 0 && cyInstance) {\n            const nice = utils.rawCXtoNiceCX(originalCX)\n            console.log(\n              '* Registering annotation renderer for this niceCX:',\n              annotationEntry\n            )\n            annotationRenderer.drawAnnotationsFromNiceCX(cyInstance, nice)\n            annotationRenderer.drawBackground(cyInstance, backgroundColor)\n          }\n        }\n      }\n    }\n    return\n  }\n\n  /*\n    Node/Edge Selections\n   */\n\n  useEffect(() => {\n    // Event handler can be set only when Cytoscape.js instance is available.\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    // Background tapped: Remove selection\n    // (This is the standard Cytosape UX)\n    cyInstance.on('tap', function(event) {\n      try {\n        if (event.target === cyInstance) {\n          props.networkActions.unselectEdges()\n          props.networkActions.unselectNodes()\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    const selectEdge = () => {\n      setTimeout(() => {\n        const edges = []\n        const selectedEdges = cyInstance.$('edge:selected')\n        selectedEdges.forEach(element => {\n          edges.push(element.data())\n        })\n        if (edges.length === 0) {\n          props.networkActions.unselectEdges()\n        } else {\n          props.networkActions.selectEdges(edges)\n        }\n      }, 1)\n    }\n\n    const selectNode = () => {\n      setTimeout(() => {\n        const nodes = []\n        const selectedNodes = cyInstance.$('node:selected')\n        selectedNodes.forEach(element => {\n          if (element.data().name !== '') {\n            nodes.push(element.data())\n          }\n        })\n        if (nodes.length === 0) {\n          props.networkActions.unselectNodes()\n        } else {\n          props.networkActions.selectNodes(nodes)\n        }\n      }, 1)\n    }\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }\n      selectNode()\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }\n      selectEdge()\n    })\n\n    cyInstance.on('boxend', function(event) {\n      selectEdge()\n      selectNode()\n    })\n\n    // Reset the UI state (highlight)\n    cyInstance.elements().addClass('faded')\n    const query = cyInstance.filter('node[querynode = \"true\"]')\n    query.addClass('highlight')\n\n    //Layout\n\n    if (cyjs != null) {\n      const isLayoutAvailable = cyjs.isLayout\n      if (isLayoutAvailable) {\n        propLayouts = ['Preset', 'Cose', 'Concentric']\n        propLayout = 'Preset'\n        setLayout(PRESET_LAYOUT)\n      } else {\n        propLayouts = ['Cose', 'Concentric']\n        if (cyjs.elements.length < 500) {\n          propLayout = 'Cose'\n          setLayout(COSE_LAYOUT)\n        } else {\n          propLayout = 'Concentric'\n          setLayout(CONCENTRIC_LAYOUT)\n        }\n      }\n    }\n\n    new Promise(function(resolve, reject) {\n      renderAnnotations()\n      resolve()\n    }).then(() => {\n      props.uiStateActions.update({\n        highlights: true,\n        layouts: propLayouts,\n        layout: propLayout\n      })\n    })\n    /*\n    props.uiStateActions.update({\n      //highlights: true,\n      layouts: propLayouts,\n      layout: propLayout\n    })\n*/\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  //After render?\n  useEffect(() => {\n    /*\n    new Promise(function(resolve, reject) {\n      renderAnnotations()\n      resolve()\n    }).then(() => {\n      props.uiStateActions.update({\n        highlights: true,\n        layouts: propLayouts,\n        layout: propLayout\n      })\n    })*/\n  })\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n\n    if (targets.length === 0) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    if (fit) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n      props.uiStateActions.fitNetworkView(false)\n    }\n  }, [fit])\n\n  useEffect(() => {\n    switch (props.uiState.layout) {\n      case 'Preset':\n        setLayout(PRESET_LAYOUT)\n        break\n      case 'Cose':\n        setLayout(COSE_LAYOUT)\n        break\n      case 'Concentric':\n        setLayout(CONCENTRIC_LAYOUT)\n        break\n    }\n  }, [props.uiState.layout])\n\n  // Check network size and show warning if it's too big for this renderer\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning {...props} />\n  }\n\n  // Render actual network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  // Network background should be set via CSS.\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: 'rgba(0,0,0,0)'\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (layout === COSE_LAYOUT || layout === CONCENTRIC_LAYOUT) {\n      layout.stop = () => {\n        setTimeout(() => {\n          cyInstance.animate(\n            {\n              fit: {\n                eles: cyInstance.elements(),\n                padding: 6\n              }\n            },\n            {\n              duration: 0\n            }\n          )\n        }, 0)\n      }\n    }\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => {\n        cyInstance = cy\n      }}\n    />\n  )\n}\n/*\nconst MemoCytoscapeViewer = React.memo(\n  CytoscapeViewer,\n  (oldProps, newProps) => {\n    return (\n      oldProps.uiState.fit === newProps.uiState.fit &&\n      oldProps.uiState.layout === newProps.uiState.layout &&\n      oldProps.uiState.highlights === newProps.uiState.highlights &&\n      isEqual(oldProps.search.selectedGenes, newProps.search.selectedGenes)\n    )\n  }\n)\n*/\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\" style={{ backgroundColor: props.color }}>\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport MemoCytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\nimport Warning from '../CytoscapeViewer/Warning'\n\nexport const MAX_NETWORK_SIZE = 5000\n\nconst NetworkViewer = props => {\n  if (props.network.isFetching) {\n    return (\n      <div className=\"network-view\">\n        <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n      </div>\n    )\n  } else if (props.search.actualResults.length === 0) {\n    return <div className=\"network-view\" />\n  } else {\n    return (\n      <div className=\"network-view\">\n        {props.network.isFetching ? (\n          <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n        ) : props.network.nodeCount + props.network.edgeCount <=\n          MAX_NETWORK_SIZE ? (\n          <MemoCytoscapeViewer resized={props.resized} {...props} />\n        ) : (\n          <Warning {...props} />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default NetworkViewer\n","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","export const camelCaseToTitleCase = camelCaseString => {\n  if (\n    camelCaseString.slice(0, 4) === 'http' ||\n    camelCaseString.slice(0, 5) === 'Prov:'\n  ) {\n    return camelCaseString\n  }\n  let result = camelCaseString\n    .replace(/([a-z])([A-Z][a-z])/g, '$1 $2')\n    .replace(/([A-Z][a-z])([A-Z])/g, '$1 $2')\n    .replace(/([a-z])([A-Z]+[a-z])/g, '$1 $2')\n    .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, '$1 $2')\n    .replace(/([a-z]+)([A-Z]+)/g, '$1 $2')\n    .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, '$1 $2')\n    .replace(/([0-9])([A-Z][a-z]+)/g, '$1 $2')\n    .replace(/([0-9]{2,})([A-Z]{2,})/g, '$1 $2')\n    .trim()\n  result = result.charAt(0).toUpperCase() + result.slice(1)\n  result = result\n    .replace('Wiki Pathways', 'WikiPathways')\n    .replace('Wikipathways', 'WikiPathways')\n    .replace('Sbo ', 'SBO ')\n    .replace('Ncipid', 'NCI PID')\n    .replace('Cptac', 'CPTAC')\n    .replace('Hpmi', 'HPMI')\n    .replace('Ccmi', 'CCMI')\n    .replace('Tcga', 'TCGA')\n    .replace('Querynode', 'Query Node')\n  return result\n}\n","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}\n","import React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport List from '@material-ui/core/List'\n\nexport default function ExpandPanel(props) {\n  const [open, setOpen] = React.useState(props.defaultExpanded)\n  let style\n\n  function handleClick() {\n    setOpen(!open)\n  }\n\n  if (props.divider) {\n    style = {\n      borderTop: '1px solid #EFEFEF'\n    }\n  } else {\n    style = {}\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={handleClick} key={Math.random()} style={style}>\n        <ListItemText primary={props.summary} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem>\n            <ListItemText primary={props.details} />\n          </ListItem>\n        </List>\n      </Collapse>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport Split from 'react-split'\n\nimport { makeStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { stripScripts } from './strip-scripts-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport ExpandPanel from './ExpandPanel'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '1em',\n    paddingTop: '0.75em'\n  },\n  lessPadding: {\n    paddingTop: '2.49px'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  }\n}))\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.network.originalCX\n  const context = props.context\n  const classes = useStyles()\n\n  //Find network props\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = [\n    'Name',\n    'Description',\n    'Methods',\n    'Reference',\n    '@context'\n  ]\n  const properties = ['Organism', 'Cell', 'Disease']\n  const contributors = ['Author', 'Reviewers', 'Rights Holder', 'Rights']\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const indraGO = ['GO Hierarchy', 'GO ID']\n  const networkInformation = ['Version', 'Network Type', 'Labels']\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    indraGO,\n    networkInformation\n  ]\n\n  //Filter properties\n  const attributes = []\n  let content\n  let title\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      if (\n        title === 'Description' &&\n        (props.uiState.selectedSource === 'interactome-ppi' ||\n          props.uiState.selectedSource === 'interactome-association')\n      ) {\n        const newTitle = 'Description of parent network'\n        leftDisplayItems.splice(1, 0, newTitle)\n        attributes.push({\n          title: newTitle,\n          content: content,\n          displayed: false\n        })\n      } else if (title === 'Organism') {\n        const latinName = 'Homo sapiens'\n        const latinIndex = content\n          .toLowerCase()\n          .indexOf(latinName.toLowerCase())\n        if (latinIndex != -1) {\n          content =\n            content.substring(0, latinIndex) +\n            '<em>' +\n            latinName +\n            '</em>' +\n            content.substring(latinIndex + latinName.length)\n        }\n        attributes.push({\n          title: 'Organism',\n          content: content,\n          displayed: false\n        })\n      } else if (title === 'GO hierarchy') {\n        attributes.push({\n          title: 'GO Hierarchy',\n          content: content,\n          displayed: false\n        })\n      } else if (title === 'GO ID') {\n        const id = content.split(':')[1]\n        if (id != undefined) {\n          attributes.push({\n            title: 'GO ID',\n            content:\n              '<a href=\"http://identifiers.org/GO:' +\n              id +\n              '\">' +\n              content +\n              '</a>',\n            displayed: false\n          })\n        } else {\n          attributes.push({\n            title: 'GO ID',\n            content: content,\n            displayed: false\n          })\n        }\n      } else {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    } else if (title === 'Name') {\n      attributes.push({\n        title: title,\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null) {\n        primaryString +=\n          currentEntry.title + ': ' + currentEntry.content + '<br>'\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch (list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case indraGO:\n        secondaryString = 'Gene Ontology'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n    }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString !== '') {\n      rightDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        const summary = (\n          <Typography component=\"span\" variant=\"body2\">\n            Click to view the namespaces associated with this network\n          </Typography>\n        )\n        const details = primaryString\n        leftDisplay.push(\n          <React.Fragment key={index}>\n            <div className={classes.padding}>\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                color=\"textSecondary\"\n              >\n                @context\n              </Typography>\n            </div>\n            <ExpandPanel\n              summary={summary}\n              details={details}\n              defaultExpanded={false}\n              keyId={index++}\n              divider={false}\n            />\n          </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++} className={classes.noPadding}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"caption\"\n                    color=\"textSecondary\"\n                  >\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                >\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n    <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>{leftDisplay}</List>\n      </div>\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>{rightDisplay}</List>\n      </div>\n    </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = modifiedText.charAt(0).toUpperCase() + modifiedText.slice(1)\n  modifiedText = parse(modifiedText)\n  return <Linkify key={Math.random().toString()}>{modifiedText}</Linkify>\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  return (\n    <table>\n      <tbody>\n        {elements.map(item => {\n          const splitResults = item.split('\"')\n          return (\n            <tr key={Math.random().toString()}>\n              <td valign=\"top\">\n                <Typography variant=\"body2\">{splitResults[1]}</Typography>\n              </td>\n              <td valign=\"top\">\n                <Typography variant=\"body2\">{splitResults[3]}</Typography>\n              </td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nexport default NetworkProperties\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol\n    const upperListItem = this.getListItem(geneList.get(symbol), classes)\n    if (upperListItem == null) {\n      return this.getListItem(geneList.get(symbol.toLowerCase()), classes)\n    }\n    return upperListItem\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    const description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n        disableGutters={true}\n        style={{ padding: '0' }}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={\n            <table>\n              <tbody>\n                <tr style={{ marginLeft: '-1' }}>\n                  <td style={{ padding: '0' }}>\n                    <div>\n                      <Typography component=\"span\" variant=\"body2\">\n                        {geneEntry.symbol}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography\n                        component=\"span\"\n                        className={classes.inline}\n                        variant=\"caption\"\n                        color=\"textSecondary\"\n                      >\n                        {camelCaseToTitleCase(geneEntry.name)}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"body2\" color=\"textPrimary\">\n                        {description}\n                      </Typography>\n                    </div>\n                  </td>\n                  <td>\n                    <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                      <IconButton\n                        aria-label=\"Link to GeneCards\"\n                        href={GENE_CARDS_URL + geneEntry.symbol}\n                        target=\"_blank\"\n                      >\n                        <LinkIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          }\n        />\n      </ListItem>\n    )\n  }\n}\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/styles'\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\nimport GeneAnnotationList from './GeneAnnotationList'\nimport ExpandPanel from './ExpandPanel'\nimport { isEqual } from 'lodash'\nimport CheckIcon from '@material-ui/icons/Check'\nimport Avatar from '@material-ui/core/Avatar'\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  },\n  matched: {\n    marginLeft: '0.5em',\n    backgroundColor: '#C51162',\n    height: '1em',\n    width: '1em'\n  },\n  icon: {\n    height: '0.5em',\n    weidth: '0.5em'\n  }\n}))\n\nlet index = 0\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n\n  let nodes\n  if (props.network.selectedNodes.length === 0) {\n    nodes = props.network.network.elements\n      .filter(elem => {\n        return elem.data.id[0] !== 'e'\n      })\n      .map(node => {\n        return node.data\n      })\n      .filter(nodeData => {\n        return nodeData.name != null && nodeData.name !== ''\n      })\n  } else {\n    nodes = props.network.selectedNodes\n  }\n\n  const context = props.context\n  const aliasList = props.aliasList\n  const memberList = props.memberList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Name',\n    'Type',\n    'Location',\n    'ID',\n    'HGNC',\n    'Ensembl',\n    'Alias',\n    'Members'\n  ]\n\n  const nodeProperties = [\n    'Height',\n    'Width',\n    'Shape',\n    'Is GPML Shape',\n    'Color',\n    'Fill Color',\n    'Transparent',\n    'Border Thickness',\n    'Border Style',\n    'Label Size',\n    'Label Font',\n    'Node Id',\n    'Query Node'\n  ]\n\n  const displayItems = [entityProperties, nodeProperties]\n\n  nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  nodes.forEach(node => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let geneAnnotation = null\n    let inset = false\n    let querynode = false\n    const aliases = new Set(aliasList[node.name])\n    const members = new Set(memberList[node.name])\n\n    //Add represents\n    if (node.name in props.represents) {\n      const [prefix, id] = props.represents[node.name].split(':')\n      if (id != undefined) {\n        if (prefix.toUpperCase() in context) {\n          attributes.push({\n            title: 'ID',\n            content:\n              '<a href=\"' +\n              context[prefix.toUpperCase()] +\n              id +\n              '\">' +\n              props.represents[node.name] +\n              '</a>',\n            displayed: false\n          })\n        } else {\n          attributes.push({\n            title: 'ID',\n            content:\n              '<a href=\"http://identifiers.org/' +\n              prefix +\n              '/' +\n              id +\n              '\">' +\n              props.represents[node.name] +\n              '</a>',\n            displayed: false\n          })\n        }\n      }\n    } else if (props.represents[node.name] != undefined) {\n      attributes.push({\n        title: 'ID',\n        content: props.represents[node.name],\n        displayed: false\n      })\n    }\n\n    for (const key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (title === 'querynode') {\n        querynode = true\n      }\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        if (title === 'aliases' || title === 'alias') {\n          aliases.add(content)\n        } else if (title === 'member') {\n          members.add(content)\n        } else if (title === 'id') {\n          attributes.push({\n            title: 'Node Id',\n            content: content,\n            displayed: false\n          })\n        } else if (title.toUpperCase() in context) {\n          attributes.push({\n            title: camelCaseToTitleCase(title),\n            content:\n              '<a href=\"' +\n              context[title.toUpperCase()] +\n              '/' +\n              content +\n              '\">' +\n              content +\n              '</a>',\n            displayed: false\n          })\n        } else if (title !== 'query') {\n          const [prefix, id] = content.split(':')\n          if (prefix.toUpperCase() in context && id != undefined) {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content:\n                '<a href=\"' +\n                context[prefix.toUpperCase()] +\n                id +\n                '\">' +\n                content +\n                '</a>',\n              displayed: false\n            })\n          } else if (prefix === 'hgnc.symbol') {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content:\n                '<a href=\"http://identifiers.org/hgnc/' +\n                id +\n                '\">' +\n                content +\n                '</a>',\n              displayed: false\n            })\n          } else {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content: content,\n              displayed: false\n            })\n          }\n        }\n      }\n    }\n\n    //Handle aliases\n    let aliasLinks = ''\n    aliases.forEach(alias => {\n      const [prefix, id] = alias.split(':')\n      if (prefix.toUpperCase() in context) {\n        aliasLinks +=\n          '<a href=\"' +\n          context[prefix.toUpperCase()] +\n          id +\n          '\">\\t' +\n          alias +\n          '</a><br/>'\n      } else {\n        aliasLinks +=\n          '<a href=\"http://identifiers.org/' +\n          prefix +\n          '/' +\n          id +\n          '\">\\t' +\n          alias +\n          '</a><br/>'\n      }\n    })\n    if (aliases.size > 1) {\n      attributes.push({\n        title: 'Alias',\n        content: '<div style=\"padding-left:1em;\">' + aliasLinks + '</div>',\n        displayed: false\n      })\n    } else if (aliases.size === 1) {\n      attributes.push({\n        title: 'Alias',\n        content: aliasLinks,\n        displayed: false\n      })\n    }\n\n    //Handle members\n    let memberLinks = ''\n    members.forEach(member => {\n      const [prefix, id] = member.split(':')\n      if (prefix.toUpperCase() in context) {\n        memberLinks +=\n          '<a href=\"' +\n          context[prefix.toUpperCase()] +\n          id +\n          '\">\\t' +\n          member +\n          '</a><br/>'\n      } else {\n        memberLinks +=\n          '<a href=\"http://identifiers.org/' +\n          prefix +\n          '/' +\n          id +\n          '\">\\t' +\n          member +\n          '</a><br/>'\n      }\n    })\n    if (members.size > 1) {\n      attributes.push({\n        title: 'Members',\n        content: '<div style=\"padding-left:1em;\">' + memberLinks + '</div>',\n        displayed: false\n      })\n    } else if (members.size === 1) {\n      attributes.push({\n        title: 'Members',\n        content: memberLinks,\n        displayed: false\n      })\n    }\n\n    //Add gene annotation\n    if (\n      props.search.results != null &&\n      (props.search.results.genes.get(node.name) != null ||\n        props.search.results.genes.get(node.name.toLowerCase()) != null)\n    ) {\n      inset = true\n      geneAnnotation = (\n        <List className={classes.noPadding}>\n          <GeneAnnotationList\n            {...props}\n            search_results={props.search.results}\n            geneSymbol={node.name}\n          />\n        </List>\n      )\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem\n                key={index++}\n                className={classes.noPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\" component=\"div\">\n                          {primaryString}\n                        </Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case nodeProperties:\n            secondaryString = 'Node Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.noPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString !== '') {\n      displayCol1.push(\n        <ListItem\n          key={index++}\n          className={classes.noPadding}\n          disableGutters={true}\n        >\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    const summary = (\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <Typography variant=\"body2\">{node.name}</Typography>\n            </td>\n            {querynode ? (\n              <td>\n                <Avatar className={classes.matched}>\n                  <CheckIcon className={classes.icon} />\n                </Avatar>\n              </td>\n            ) : null}\n          </tr>\n        </tbody>\n      </table>\n    )\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td colSpan=\"2\" valign=\"top\">\n              {geneAnnotation}\n            </td>\n          </tr>\n          <tr>\n            <td valign={'top'}>{displayCol1}</td>\n            <td valign={'top'}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={node.id + index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            No nodes to display\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return <Linkify key={'link' + index++}>{modifiedText}</Linkify>\n}\n\n//Necessary because otherwise open list items will collapse every time \"SET_AVAILABLE\" happens\nconst MemoNodeProperties = React.memo(NodeProperties, (oldProps, newProps) => {\n  return isEqual(oldProps.network.selectedNodes, newProps.network.selectedNodes)\n})\n\nexport default MemoNodeProperties\n","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport { isEqual } from 'lodash'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/styles'\nimport ExpandPanel from './ExpandPanel'\nimport CheckIcon from '@material-ui/icons/Check'\nimport Avatar from '@material-ui/core/Avatar'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  },\n  matched: {\n    backgroundColor: '#C51162',\n    height: '1em',\n    width: '1em'\n  },\n  icon: {\n    height: '0.5em',\n    weidth: '0.5em'\n  }\n}))\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  let edges\n  if (props.network.selectedEdges.length === 0) {\n    edges = props.network.network.elements\n      .filter(elem => {\n        return elem.data.id[0] === 'e'\n      })\n      .map(elem => {\n        return elem.data\n      })\n  } else {\n    edges = props.network.selectedEdges\n  }\n\n  const nodes = props.nodeList\n  const context = props.context\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Source',\n    'Target',\n    'Type',\n    'SBO Type',\n    'Interaction',\n    'Throughput',\n    'Location',\n    'Citation'\n  ]\n\n  const edgeProperties = [\n    'Start Arrow',\n    'End Arrow',\n    'Connector Type',\n    'Line Thickness',\n    'Line Style',\n    'Color',\n    'Edge Id'\n  ]\n\n  const displayItems = [entityProperties, edgeProperties]\n\n  edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    const aSource = findNode(a.source, nodes)\n    const aTarget = findNode(a.target, nodes)\n    const bSource = findNode(b.source, nodes)\n    const bTarget = findNode(b.target, nodes)\n    if (aSource !== '') {\n      aScore++\n    }\n    if (aTarget !== '') {\n      aScore++\n    }\n    if (bSource !== '') {\n      bScore++\n    }\n    if (bTarget !== '') {\n      bScore++\n    }\n    if (bScore - aScore !== 0) {\n      return bScore - aScore\n    } else if (aSource === '') {\n      return 1\n    } else if (bSource === '') {\n      return -1\n    }\n\n    if (aSource.toUpperCase() > bSource.toUpperCase()) {\n      return 1\n    } else if (aSource.toUpperCase() < bSource.toUpperCase()) {\n      return -1\n    } else if (aTarget.toUpperCase() > bTarget.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  edges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let source\n    let target\n    for (const key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        if (title === 'source') {\n          source = findNode(content, nodes)\n          attributes.push({\n            title: 'Source',\n            content: source,\n            displayed: false\n          })\n        } else if (title === 'target') {\n          target = findNode(content, nodes)\n          attributes.push({\n            title: 'Target',\n            content: target,\n            displayed: false\n          })\n        } else if (title === 'id') {\n          attributes.push({\n            title: 'Edge Id',\n            content,\n            content,\n            displayed: false\n          })\n        } else if (title === 'sboType') {\n          const id = content.split(':')[1]\n          attributes.push({\n            title: 'SBO Type',\n            content:\n              '<a href=\"' +\n              'http://identifiers.org/SBO:' +\n              id +\n              '\">' +\n              content +\n              '</a>'\n          })\n        } else {\n          const [prefix, id] = content.split(':')\n          if (prefix in context && id != undefined) {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content:\n                '<a href=\"' + context[prefix] + id + '\">' + content + '</a>',\n              displayed: false\n            })\n          } else {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content: content,\n              displayed: false\n            })\n          }\n        }\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={Math.random()} className={classes.noPadding}>\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case edgeProperties:\n            secondaryString = 'Edge Properties'\n            displayCol2.push(\n              <ListItem\n                key={Math.random()}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString !== '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    //Create summary\n    let sourceSymbol = source\n    let targetSymbol = target\n    if (props.search.queryList.includes(source.toUpperCase())) {\n      sourceSymbol = (\n        <React.Fragment>\n          <td>\n            <Typography variant=\"body2\">{source}</Typography>\n          </td>\n          <td>\n            <Avatar className={classes.matched}>\n              <CheckIcon className={classes.icon} />\n            </Avatar>\n          </td>\n        </React.Fragment>\n      )\n    }\n\n    if (props.search.queryList.includes(target.toUpperCase())) {\n      targetSymbol = (\n        <React.Fragment>\n          <td>\n            <Typography variant=\"body2\">{target}</Typography>\n          </td>\n          <td>\n            <Avatar className={classes.matched}>\n              <CheckIcon className={classes.icon} />\n            </Avatar>\n          </td>\n        </React.Fragment>\n      )\n    }\n\n    const summary = (\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <Typography variant=\"body2\">{source}</Typography>\n            </td>\n            {props.search.queryList.includes(source.toUpperCase()) ? (\n              <td>\n                <Avatar className={classes.matched}>\n                  <CheckIcon className={classes.icon} />\n                </Avatar>\n              </td>\n            ) : null}\n            <td>\n              <Typography variant=\"body2\">{' ➝ '}</Typography>\n            </td>\n            <td>\n              <Typography variant=\"body2\">{target}</Typography>\n            </td>\n            {props.search.queryList.includes(target.toUpperCase()) ? (\n              <td>\n                <Avatar className={classes.matched}>\n                  <CheckIcon className={classes.icon} />\n                </Avatar>\n              </td>\n            ) : null}\n          </tr>\n        </tbody>\n      </table>\n    )\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td valign={'top'}>{displayCol1}</td>\n            <td valign={'top'}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            No edges to display\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return <Linkify key={'link:' + index++}>{modifiedText}</Linkify>\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === '') {\n    return nodeId\n  }\n  const returnNode = nodeArray.filter(\n    item => item['@id'].toString() === nodeId.toString()\n  )[0]\n\n  if (returnNode != null) {\n    return returnNode.n\n  } else {\n    return ''\n  }\n}\n\n//Necessary because otherwise open list items will collapse every time \"SET_AVAILABLE\" happens\nconst MemoEdgeProperties = React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(\n    prevProps.network.selectedEdges,\n    newProps.network.selectedEdges\n  )\n})\n\nexport default MemoEdgeProperties\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport HoverTab from '../HoverTab'\nimport { makeStyles } from '@material-ui/styles'\n\nimport { findAttributes } from './attribute-util'\n\nimport NetworkProperties from './NetworkProperties'\nimport MemoNodeProperties from './NodeProperties'\nimport MemoEdgeProperties from './EdgeProperties'\n\nimport { mapKeys } from 'lodash'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {},\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  root: {\n    minHeight: 0\n  }\n}))\n\nconst backgroundcolor = 'rgb(220, 220, 220)'\n\nconst TabContent = props => {\n  const { value } = props\n\n  //Find @context\n  let context = {}\n  const networkAttr = findAttributes(\n    props.network.originalCX,\n    'networkAttributes'\n  )\n  if (networkAttr != null) {\n    for (let i = 0; i < networkAttr.length; i++) {\n      if (networkAttr[i].n === '@context') {\n        context = JSON.parse(networkAttr[i].v)\n      }\n    }\n  }\n  //Uppercase all keys in context\n  context = mapKeys(context, function(v, k) {\n    return k.toUpperCase()\n  })\n\n  //Find nodelist and nodeAttributes\n  let nodeList\n  let nodeAttributes\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes\n      if (nodeAttributes != undefined) {\n        break\n      }\n    }\n    if (props.network.originalCX[i].nodeAttributes != null) {\n      nodeAttributes = props.network.originalCX[i].nodeAttributes\n      if (nodeList != undefined) {\n        break\n      }\n    }\n  }\n\n  const represents = {}\n  const aliasList = {}\n  const memberList = {}\n  if (nodeList != null) {\n    //Find represents\n    for (let i = 0; i < nodeList.length; i++) {\n      if (nodeList[i].r != null) {\n        represents[nodeList[i].n] = nodeList[i].r\n      }\n    }\n    if (nodeAttributes != null) {\n      for (let i = 0; i < nodeAttributes.length; i++) {\n        //Find aliases\n        if (\n          nodeAttributes[i].n === 'alias' &&\n          nodeAttributes[i].d === 'list_of_string'\n        ) {\n          const geneName = nodeList.filter(\n            node => node['@id'] === nodeAttributes[i].po\n          )[0].n\n          if (geneName != null) {\n            if (aliasList[geneName] == null) {\n              aliasList[geneName] = nodeAttributes[i].v\n            } else {\n              aliasList[geneName] = aliasList[geneName].concat(\n                nodeAttributes[i].v\n              )\n            }\n          }\n        } else if (\n          nodeAttributes[i].n === 'member' &&\n          nodeAttributes[i].d === 'list_of_string'\n        ) {\n          const geneName = nodeList.filter(\n            node => node['@id'] === nodeAttributes[i].po\n          )[0].n\n          if (geneName != null) {\n            if (memberList[geneName] == null) {\n              memberList[geneName] = nodeAttributes[i].v\n            } else {\n              memberList[geneName] = memberList[geneName].concat(\n                nodeAttributes[i].v\n              )\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (value === 0) {\n    return <NetworkProperties context={context} {...props} />\n  } else if (value === 1) {\n    return (\n      <MemoNodeProperties\n        context={context}\n        represents={represents}\n        aliasList={aliasList}\n        memberList={memberList}\n        {...props}\n      />\n    )\n  } else {\n    return (\n      <MemoEdgeProperties context={context} nodeList={nodeList} {...props} />\n    )\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\nconst TableBrowserPanel = props => {\n  //const network = props.network\n  const classes = useStyles()\n  const value = props.network.tableDisplayTab\n  const originalCX = props.network.originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue)\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs value={value} onChange={handleChange} className={classes.root}>\n        <HoverTab\n          className={classes.root}\n          key={'network-tab'}\n          label={'Network'}\n          backgroundcolor={backgroundcolor}\n        />\n        <HoverTab\n          className={classes.root}\n          key={'nodes-tab'}\n          label={'Nodes'}\n          backgroundcolor={backgroundcolor}\n        />\n        <HoverTab\n          className={classes.root}\n          key={'edges-tab'}\n          label={'Edges'}\n          backgroundcolor={backgroundcolor}\n        />\n      </Tabs>\n      <TabContent value={value} {...props} />\n    </div>\n  )\n}\n\nexport default TableBrowserPanel\n","import React from 'react'\n\nimport MemoTableBrowserPanel from './TableBrowserPanel'\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  if (\n    props.network.originalCX === null ||\n    props.search.actualResults.length === 0\n  ) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  return (\n    <div className={'table-browser'}>\n      <MemoTableBrowserPanel {...props} />\n    </div>\n  )\n}\n\nconst MemoTableBrowser = TableBrowser /*React.memo(TableBrowser, (prevProps, newProps) => {\n  return isEqual(prevProps.network.isFetching, newProps.network.isFetching)\n})*/\n\nexport default MemoTableBrowser\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\n//export const SERVICE_SERVER_URL = 'http://localhost:8080/v1/'\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  // This is for avoiding too many unnecessary state updates.\n  const currentConnectionState = false\n\n  while (true) {\n    try {\n      yield call(cyrest.status, 1234)\n\n      if (currentConnectionState !== true) {\n        yield put({ type: SET_AVAILABLE, payload: true })\n      }\n    } catch (e) {\n      if (currentConnectionState === true) {\n        yield put({ type: SET_AVAILABLE, payload: false })\n      }\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n//import {fade} from \"./color-manipulator-util\"\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { _fetchCyRESTAvailable } from '../../../sagas/cyRestStatusSaga'\n\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: '0.5em',\n    borderColor: '#EA9123',\n    '&:active': {\n      borderColor: '#EA9123'\n    },\n    '&:hover': {\n      backgroundColor: fade('#EA9123', 0.08)\n    }\n  }\n})(Button)\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling()\n    return () => {\n      props.cyrestActions.stopCyRestPolling()\n    }\n  }, [])\n\n  const { classes } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) ||\n    !props.cyrest.available\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork\n  const lastResponse = props.cyrest.lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n  //console.log(\"cycleId: \" + cycleId);\n  //console.log(\"state: \" + state);\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || state === 'closeLoading') &&\n    lastResponse != null\n  ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    const currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    console.log('click')\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={'right'}\n        vertical={'bottom'}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core'\n\nimport logo from '../../../assets/images/zoom-logo.svg'\nimport disabledLogo from '../../../assets/images/zoom-logo-mono.svg'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '1.75em'\n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    borderColor: '#212121',\n    color: '#212121',\n    '&:active': {\n      borderColor: '#212121',\n      color: '#212121'\n    }\n  }\n})(Button)\n\nconst ResetZoomButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const handleClick = () => {\n    props.uiStateActions.fitNetworkView(true)\n  }\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(ResetZoomButton)\n","import React from 'react'\n\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: 'center',\n    lignHeight: '50%',\n    position: 'relative',\n    top: '1px'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  let highlight = props.uiState.highlights\n\n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight\n      props.uiStateActions.setHighlights(highlight)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? 'secondary' : 'default'}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? 'secondary' : 'disabled'}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(Highlighter)\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n    '&:hover': {\n      backgroundColor: fade('#4DA1DE', 0.08)\n    }\n  }\n})(Button)\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img\n            alt=\"NDEx logo\"\n            src={disabled ? logoDisabled : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInNDExButton)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    console.log(ndexSave)\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default withStyles(styles)(NDExSave)\n","const config = {\n  NDEX_USER_VALIDATION: 'http://ndexbio.org/v2/user?valid=true',\n  // testing\n  // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n  // public\n  googleClientId:\n    '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com'\n}\n\nexport default config\n","import React from 'react'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { ...props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default NDExSignInModal\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: '4.3em',\n      borderColor: '#212121',\n      color: '#212121',\n      '&:active': {\n        borderColor: '#212121',\n        color: '#212121'\n      }\n    }\n  })(Button)\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.url)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = url => {\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default withStyles(styles)(OpenOriginalNetworkButton)\n","import React, { useEffect } from 'react'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\n\nconst formControl = {\n  height: '3em',\n  paddingTop: '0.8em',\n  marginLeft: '0.3em'\n}\n\nconst styles = theme => ({\n  input: {\n    padding: '8px 26px 8px 12px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    borderRadius: 4,\n    '&:focus': {\n      backgroundColor: 'rgba(0, 0, 0, 0)',\n      borderRadius: 4\n    },\n    '&:hover': {\n      backgroundColor: fade('rgb(65, 84, 178)', 0.08)\n    }\n  },\n  root: {\n    borderColor: '#ced4da',\n    '& $notchedOutline': {\n      borderColor: 'rgb(65, 84, 178)'\n    },\n    '&:hover $notchedOutline': {\n      borderColor: 'rgb(65, 84, 178)'\n    },\n    '&$focused $notchedOutline': {\n      borderColor: 'rgb(65, 84, 178)',\n      borderWidth: '1px'\n    }\n  },\n  focused: {},\n  notchedOutline: {}\n})\n\nconst LayoutSelector = props => {\n  const { classes } = props\n  const menuItems = props.uiState.layouts\n  const inputLabel = React.useRef(null)\n  const [labelWidth, setLabelWidth] = React.useState(0)\n\n  useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth)\n  }, [])\n\n  return (\n    <div style={formControl}>\n      <FormControl variant=\"outlined\">\n        <InputLabel ref={inputLabel} htmlFor=\"outlined\">\n          <font color=\"#4154b2\">Layout</font>\n        </InputLabel>\n        <Select\n          value={props.value}\n          onChange={props.handleChange}\n          input={\n            <OutlinedInput\n              labelWidth={labelWidth}\n              name=\"layout\"\n              id=\"outlined-layout\"\n              classes={classes}\n            />\n          }\n        >\n          {menuItems.map(item => (\n            <MenuItem value={item} key={item}>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {item}\n              </Typography>\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(LayoutSelector)\n","import './style.css'\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Tooltip } from '@material-ui/core'\n\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport ResetZoomButton from './ResetZoomButton'\nimport Highlighter from './Highlighter'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\nimport LayoutSelector from './LayoutSelector'\nimport { camelCaseToTitleCase } from '../TableBrowser/camel-case-util'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    paddingTop: '0',\n    paddingBottom: '0',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(9),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(10),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props\n\n  let [prefix, name] = ['', '']\n\n  if (props.search.actualResults.length !== 0) {\n    ;[prefix, name] = props.network.networkName.replace(':', '&').split('&')\n  }\n\n  const [value, setValue] = useState(props.uiState.layout)\n\n  const handleChange = event => {\n    setValue(event.target.value)\n    props.uiStateActions.setLayout(event.target.value)\n  }\n\n  useEffect(() => {\n    setValue(props.uiState.layout)\n  }, [props.uiState.layout])\n\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip\n        title={\n          name\n            ? camelCaseToTitleCase(prefix) + ':' + name\n            : props.network.networkName\n        }\n      >\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {name\n            ? camelCaseToTitleCase(prefix) + ':' + name\n            : props.network.networkName}\n        </Typography>\n      </Tooltip>\n\n      <div className={classes.grow} />\n\n      <LayoutSelector value={value} handleChange={handleChange} {...other} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...other} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport MemoTableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer resized={resized} {...props} />\n        <MemoTableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\n\nimport InfoIcon from '@material-ui/icons/Info'\nimport IconButton from '@material-ui/core/IconButton'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Paper from '@material-ui/core/Paper'\nimport Draggable from 'react-draggable'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst infoStyle = {\n  position: 'relative',\n  left: '0.5em',\n  top: '6px',\n  height: '0.5em',\n  width: '0.5em'\n}\n\nconst iconStyle = {\n  height: '0.7em',\n  width: '0.7em',\n  position: 'relative',\n  bottom: '2px'\n}\n\nconst PaperComponent = props => {\n  return (\n    <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  )\n}\n\nconst InfoModal = props => {\n  const [open, setOpen] = useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <IconButton aria-haspopup=\"true\" onClick={handleOpen} style={infoStyle}>\n        <InfoIcon style={iconStyle} />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n          <Typography component=\"span\" variant=\"h6\">\n            Sorting\n          </Typography>\n        </DialogTitle>\n        <DialogContent dividers={true}>\n          <DialogContentText component=\"span\">\n            <Typography component=\"div\" variant=\"h6\" color=\"textPrimary\">\n              Overlap:\n            </Typography>\n            <Typography component=\"div\" variant=\"body2\">\n              This refers to the number of genes that are in both the query set\n              and the network. When sorting by overlap, networks with a high\n              number of overlapping genes are at the top of the list, and\n              networks with a low number of overlapping genes are at the bottom\n              of the list.{' '}\n              <Typography\n                component=\"span\"\n                variant=\"inherit\"\n                color=\"textPrimary\"\n              >\n                <strong>Sorting is stable</strong>\n              </Typography>\n              , so sorting by <em>p</em>-value and then by overlap will result\n              in a list where networks are sorted by overlap, and networks that\n              are tied for overlap are sorted by <em>p</em>-value.\n            </Typography>\n            <br />\n            <Typography component=\"div\" variant=\"h6\" color=\"textPrimary\">\n              <em>P</em>-Value:\n            </Typography>\n            <Typography component=\"div\" variant=\"body2\">\n              This refers to the probability that the query set and the network\n              overlap, to the extent that they do or to a greater extent, by\n              chance. Here, it is calculated using the complementary cumulative\n              distribution function of a{' '}\n              <a\n                href=\"https://en.wikipedia.org/wiki/Hypergeometric_distribution\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                hypergeometric distribution\n              </a>\n              , where:\n              <ul>\n                <li>\n                  The population size (<em>N</em>) is equal to the number of\n                  genes in the entire database;\n                </li>\n                <li>\n                  The number of success states in the population (<em>K</em>) is\n                  equal to the number of genes in the network;\n                </li>\n                <li>\n                  The sample size (<em>n</em>) is equal to the size of the\n                  network; and\n                </li>\n                <li>\n                  The number of observed successes (<em>k</em>) is equal to the\n                  number of genes that are in both the query set and the\n                  network.\n                </li>\n              </ul>\n              Then the <em>p</em>-values are adjusted to compensate for the high\n              false discovery rate that is an effect of querying a large\n              database of networks. This is done using the{' '}\n              <a\n                href=\"http://www.jstor.org/stable/2346101\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Benjamini-Hochberg method\n              </a>\n              , where each <em>p</em>-value is multiplied by the number of\n              networks queried, and then divided by its rank relative to other{' '}\n              <em>p</em>-values (where low <em>p</em>-values have a low rank and\n              vice versa). When sorting by <em>p</em>-value, networks with a low{' '}\n              <em>p</em>-value are at the top of the list, and networks with a\n              high <em>p</em>-value are at the bottom of the list.{' '}\n              <a\n                href=\"https://github.com/ndexbio/ndex-enrichment-rest/wiki/How-Pvalue-is-calculated\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                For implementation details, click here\n              </a>\n              .\n            </Typography>\n            <br />\n            <Typography component=\"div\" variant=\"h6\" color=\"textPrimary\">\n              Similarity:\n            </Typography>\n            <Typography component=\"div\" variant=\"body2\">\n              This is a way of scoring the similarity between the query set and\n              the genes in the network, while taking into account that some\n              genes are much more universal than other genes, and will appear in\n              many more networks without adding much information. This is based\n              on cosine similarity, using values derived from the{' '}\n              <a\n                href=\"https://ethen8181.github.io/machine-learning/clustering_old/tf_idf/tf_idf.html\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Term Frequency-Inverse Document Frequency\n              </a>{' '}\n              of each gene in the query set and the network. Rare genes that are\n              shared between the query set and network will contribute more to\n              the similarity score than common genes, resulting in a higher\n              similarity score. When sorting by similarity, networks that have\n              high similarity are at the top of the list, and networks that have\n              low similarity are at the bottom of the list.{' '}\n            </Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  )\n}\n\nexport default InfoModal\n","import React, { useState } from 'react'\n\nimport InfoModal from './InfoModal'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputBase from '@material-ui/core/InputBase'\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0'\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    }\n  }\n}))(InputBase)\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n  display: 'inline-block',\n  width: '100%'\n}\n\nconst textStyle = {\n  position: 'relative',\n  top: '8px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortBy, setSortBy] = useState(props.uiState.sortBy)\n  const menuItems = props.uiState.sortOptions\n\n  const handleChange = event => {\n    props.uiStateActions.setSortBy(event.target.value)\n    setSortBy(event.target.value)\n  }\n\n  if (props.uiState.selectedSource === 'enrichment') {\n    return (\n      <React.Fragment>\n        <div style={divStyle}>\n          <Typography\n            variant=\"body2\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={textStyle}\n          >\n            Sort by\n          </Typography>\n          <FormControl style={formStyle}>\n            <Select\n              value={sortBy}\n              onChange={handleChange}\n              displayEmpty\n              name=\"Sort by\"\n              style={selectStyle}\n              input={<BootstrapInput name=\"sort\" id=\"sort-customized-select\" />}\n            >\n              {menuItems.map(item => (\n                <MenuItem value={item} key={item}>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    {item}\n                  </Typography>\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <InfoModal />\n        </div>\n      </React.Fragment>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default SortPanel\n","import React, { useEffect } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport Typography from '@material-ui/core/Typography'\n\nimport SortPanel from './SortPanel'\n\nimport './style.css'\n\nimport { cloneDeep } from 'lodash'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    position: 'relative',\n    top: '25%',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  }\n})\n\nconst findSort = sortBy => {\n  if (sortBy === 'p-Value') {\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1\n      } else {\n        if (a.rank > b.rank) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else if (sortBy === 'Similarity') {\n    return (a, b) => {\n      if (a.details.similarity < b.details.similarity) {\n        return 1\n      } else if (a.details.similarity > b.details.similarity) {\n        return -1\n      } else {\n        if (a.rank > b.rank) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else {\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1\n      } else {\n        if (a.rank > b.rank) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  }\n}\n\nconst NetworkList = props => {\n  let hits = props.hits\n\n  const openFirst = first => {\n    if (first != null) {\n      props.handleFetch(\n        first.networkUUID,\n        first.description,\n        first.nodes,\n        first.edges,\n        first.hitGenes\n      )\n      props.networkActions.setNetworkUrl(first.url)\n    }\n  }\n\n  //Adjust p-values\n  useEffect(() => {\n    if (props.uiState.selectedSource === 'enrichment') {\n      hits.sort(findSort('p-Value'))\n      const networkCount = hits[0].details.totalNetworkCount\n      for (let i = 0; i < hits.length; i++) {\n        hits[i].details.PValue =\n          (hits[i].details.PValue * networkCount) / (i + 1)\n      }\n    }\n  }, [hits])\n\n  //Sort hits\n  useEffect(() => {\n    const firstHit = cloneDeep(hits[0])\n    if (props.uiState.selectedSource === 'enrichment') {\n      const sortFunction = findSort(props.uiState.sortBy)\n\n      //Allow stable sorting\n      for (let i = 0; i < hits.length; i++) {\n        hits[i].rank = i\n      }\n\n      hits = hits.sort(sortFunction)\n    }\n    //Check if you need to rerender first hit\n    let opened = false\n    if (props.search.actualResults.length === 0) {\n      opened = true\n      props.searchActions.setActualResults(hits)\n      openFirst(hits[0])\n      props.networkActions.changeListIndex(1)\n    } else {\n      props.searchActions.setActualResults(hits)\n    }\n\n    if (\n      !opened &&\n      (props.network.listIndex !== 1 ||\n        firstHit.description !== hits[0].description)\n    ) {\n      openFirst(hits[0])\n      props.networkActions.changeListIndex(1)\n    }\n  }, [props.uiState.sortBy, props.uiState.selectedSource])\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  let index = 1\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index)\n  }\n\n  const selectedIndex = props.network.listIndex\n\n  let enrichmentStyle\n  if (props.uiState.selectedSource === 'enrichment') {\n    enrichmentStyle = {\n      height: 'calc(100% - 49px)'\n    }\n  } else {\n    enrichmentStyle = {}\n  }\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\" style={enrichmentStyle}>\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry =>\n              props.renderNetworkListItem(\n                props.search.queryList.length,\n                entry,\n                props.classes,\n                handleListItemClick,\n                selectedIndex,\n                index++\n              )\n            )}\n          </MenuList>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography\n            variant={'subtitle1'}\n            color={'textSecondary'}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\n\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport { camelCaseToTitleCase } from '../TableBrowser/camel-case-util'\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport { ListItem } from '@material-ui/core'\n\nconst titleStyle = {\n  lineHeight: '22px',\n  wordBreak: 'break-word'\n}\n\nconst subtitleStyle = {\n  height: '22px',\n  lineHeight: '22px',\n  wordBreak: 'break-word'\n}\n\nconst infoStyle = {\n  display: 'block',\n  height: '22px',\n  margin: '0',\n  padding: '0'\n}\n\nconst edgeStyle = {\n  display: 'block',\n  height: '22px',\n  margin: '0',\n  padding: '0',\n  position: 'relative',\n  top: '22px'\n}\n\nconst tableStyle = {\n  tableLayout: 'fixed',\n  wordBreak: 'breakWord',\n  borderCollapse: 'collapse',\n  borderSpacing: '0'\n}\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n    const geneList = props.search.queryList\n    const sourceUUID = props.sourceUUID\n    const id = props.search.results.jobId\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes()\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (\n    querySize,\n    networkEntry,\n    classes,\n    handleListItemClick,\n    selectedIndex,\n    index\n  ) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      details,\n      url\n    } = networkEntry\n    const genes = (\n      <span style={infoStyle}>\n        <Typography\n          display=\"inline\"\n          color={\n            props.uiState.selectedSource === 'enrichment' &&\n            props.uiState.sortBy !== 'Overlap'\n              ? 'textSecondary'\n              : 'textPrimary'\n          }\n        >\n          <strong>{hitGenes.length}</strong>{' '}\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          display=\"inline\"\n          color={\n            props.uiState.selectedSource === 'enrichment' &&\n            props.uiState.sortBy === 'Overlap'\n              ? 'textPrimary'\n              : 'textSecondary'\n          }\n        >\n          genes\n        </Typography>\n      </span>\n    )\n\n    const icon = (\n      <ListItemIcon style={{ width: '20px' }}>\n        <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n      </ListItemIcon>\n    )\n\n    const newline = <Typography>{'\\n'}</Typography>\n\n    if (props.uiState.selectedSource === 'enrichment') {\n      let pVal = details.PValue\n      if (pVal != null) {\n        const networkCount = details.totalNetworkCount\n        const threshold = Math.pow(\n          10,\n          Math.ceil(Math.log(1e-16 * networkCount) / Math.LN10)\n        )\n        if (pVal < threshold) {\n          pVal = '< ' + threshold\n        } else if (pVal > 1) {\n          pVal = '~ 1'\n        } else {\n          pVal = pVal.toExponential(2)\n        }\n      }\n\n      const pv = (\n        <span style={infoStyle}>\n          <Typography\n            display=\"inline\"\n            color={\n              props.uiState.sortBy === 'p-Value'\n                ? 'textPrimary'\n                : 'textSecondary'\n            }\n          >\n            <strong>{pVal} </strong>\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color={\n              props.uiState.sortBy === 'p-Value'\n                ? 'textPrimary'\n                : 'textSecondary'\n            }\n          >\n            pv\n          </Typography>\n        </span>\n      )\n\n      let similarity\n      let sim = details.similarity\n      if (sim !== undefined) {\n        if (isNaN(sim)) {\n          sim = 'NaN'\n        } else {\n          sim = sim.toFixed(2)\n        }\n        similarity = (\n          <span style={infoStyle}>\n            <Typography\n              display=\"inline\"\n              color={\n                props.uiState.sortBy === 'Similarity'\n                  ? 'textPrimary'\n                  : 'textSecondary'\n              }\n            >\n              <strong>{sim} </strong>\n            </Typography>\n            <Typography\n              variant=\"caption\"\n              display=\"inline\"\n              color={\n                props.uiState.sortBy === 'Similarity'\n                  ? 'textPrimary'\n                  : 'textSecondary'\n              }\n            >\n              similarity\n            </Typography>\n          </span>\n        )\n      } else {\n        similarity = null\n      }\n\n      const title = (\n        <Typography style={titleStyle}>\n          {description.split(':').slice(1)}\n        </Typography>\n      )\n\n      const subtitle = (\n        <span style={subtitleStyle}>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            <span>Nodes: {nodes}, </span>\n            <span>Edges: {edges}, </span>\n            <span>\n              Source: {camelCaseToTitleCase(description.split(':')[0])}\n            </span>\n          </Typography>\n        </span>\n      )\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            if (selectedIndex !== index) {\n              handleFetch(networkUUID, description, nodes, edges, hitGenes)\n              handleListItemClick(event, index)\n              props.networkActions.setNetworkUrl(url)\n            }\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={tableStyle}>\n            <tbody>\n              <tr padding=\"0\">\n                <td align=\"center\" valign=\"middle\" rowSpan=\"2\" padding=\"0\">\n                  {icon}\n                </td>\n                <td align=\"left\" valign=\"baseline\" width=\"100px\" padding=\"0\">\n                  {genes}\n                  {newline}\n                  {pv}\n                  {newline}\n                  {similarity}\n                </td>\n                <td align=\"left\" valign=\"baseline\" padding=\"0\">\n                  {title}\n                  {newline}\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      )\n    } else {\n      const node = (\n        <span style={infoStyle}>\n          <Typography display=\"inline\">\n            <strong>{nodes}</strong>{' '}\n          </Typography>\n          <Typography variant=\"caption\" display=\"inline\" color=\"textSecondary\">\n            {'nodes '}\n          </Typography>\n        </span>\n      )\n\n      const edge = (\n        <span style={edgeStyle}>\n          <Typography display=\"inline\">\n            <strong>{edges}</strong>{' '}\n          </Typography>\n          <Typography variant=\"caption\" display=\"inline\" color=\"textSecondary\">\n            {'edges'}\n          </Typography>\n        </span>\n      )\n\n      const title = (\n        <Typography color=\"textPrimary\" style={titleStyle}>\n          {description}\n        </Typography>\n      )\n\n      const subtitle = (\n        <span style={subtitleStyle}>\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            Parent: {details.parent_network_nodes} nodes,{' '}\n            {details.parent_network_edges} edges\n          </Typography>\n        </span>\n      )\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes)\n            handleListItemClick(event, index)\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={tableStyle}>\n            <tbody>\n              <tr padding=\"0\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" padding=\"0\">\n                  {icon}\n                </td>\n                <td align=\"left\" valign=\"baseline\" width=\"75px\">\n                  {genes}\n                  {newline}\n                  {node}\n                </td>\n                <td align=\"left\" valign=\"baseline\" padding=\"0\" width=\"80px\">\n                  {edge}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {title}\n                  {newline}\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      )\n    }\n  }\n\n  return (\n    <Split sizes={[40, 60]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList\n        renderNetworkListItem={renderNetworkListItem}\n        handleFetch={handleFetch}\n        hits={props.hits}\n        totalNetworks={props.totalNetworks}\n        {...props}\n      />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\n\nimport Ndex from './Ndex'\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const results = props.results\n\n  if (results === null || results === undefined) {\n    return (\n      <LoadingPanel\n        title={'Loading results'}\n        message={<div style={{ color: 'black' }}>Please wait...</div>}\n      />\n    )\n  } else {\n    return (\n      <Ndex\n        hits={results.results}\n        totalNetworks={results.numberOfNetworks}\n        sourceUUID={results.sourceUUID}\n        {...props}\n      />\n    )\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport HoverTab from './HoverTab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\n// Conversion table from tab ID to human-readable labels\nconst TAB_LABELS = {\n  enrichment: {\n    label: 'Pathway Enrichment'\n  },\n  'interactome-ppi': {\n    label: 'Protein Interactions'\n  },\n  'interactome-association': {\n    label: 'Gene Association'\n  }\n}\n\nconst backgroundcolor = 'rgb(235, 235, 235)'\n\nconst styles = theme => ({\n  tabs: {},\n  grow: {\n    flexGrow: 1\n  }\n})\n\nconst Results = props => {\n  const { classes, ...others } = props\n\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n    props.networkActions.changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log('* Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const { sources } = props.source\n  if (sources === null || sources === undefined || sources.length === 0) {\n    return <Empty />\n  }\n\n  const searchResults = props.search.searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange} className={classes.tabs}>\n          {sources.map(source => (\n            <HoverTab\n              key={source.uuid}\n              label={\n                TAB_LABELS[source.name] ? TAB_LABELS[source.name].label : null\n              }\n              backgroundcolor={backgroundcolor}\n            />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nexport const HGNC_REGEX = RegExp(\n  '(^[a-zA-Z][a-zA-Z0-9-]*$)|(^C[0-9]+orf[0-9]+$)'\n)\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      let newQueryList = state.queryGenes.split(' ')\n      newQueryList = newQueryList.filter(gene => {\n        return HGNC_REGEX.test(gene)\n      })\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: newQueryList\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nimport * as examples from '../TopPage/example-genes'\nimport { HGNC_REGEX } from '../../reducers/search'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '60vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef()\n\n  const [state, setState] = useState({\n    anchorEl: null,\n    query: props.search.queryGenes\n  })\n  const [open, setOpen] = useState(false)\n\n  const menuOpen = Boolean(state.anchorEl)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    let geneList = geneListString.split(/\\s*,\\s*|\\s+/)\n\n    geneList = geneList.filter(gene => {\n      return HGNC_REGEX.test(gene)\n    })\n\n    props.searchActions.clearAll()\n    props.uiStateActions.setSelectedSource('enrichment')\n    props.history.push('/')\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch()\n    }\n  }\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  return (\n    <div>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={'Genes are copied to clipboard!'}\n        autoHideDuration={4000}\n        horizontal={'left'}\n        vertical={'bottom'}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Query gene set examples\" placement=\"bottom\">\n          <div>\n            <IconButton\n              className={classes.iconButton}\n              aria-label=\"Menu\"\n              onClick={handleMenu}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              anchorEl={state.anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right'\n              }}\n              open={menuOpen}\n              onClose={handleClose}\n            >\n              {EXAMPLES.map((example, idx) => {\n                if (example.name !== 'Estrogen') {\n                  return (\n                    <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                      {example.name}\n                    </MenuItem>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </Menu>\n          </div>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={state.query}\n          onChange={handleChange('query')}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from '@material-ui/core/Button'\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono-dark.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo-mono-dark.svg'\nimport wpLogo from '../../assets/images/wp-logo-mono-dark.svg'\nimport idekerLogo from '../../assets/images/ideker-logo-mono-dark.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em'\n  },\n  homeLogo: {\n    height: '1em',\n    width: '1em',\n    marginRight: '0.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    paddingLeft: '1em',\n    paddingRight: '1em'\n  },\n  noWrap: {\n    display: 'inline-block',\n    whiteSpace: 'nowrap'\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '1em',\n  textTransform: 'none'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.uiStateActions.setSelectedSource('enrichment')\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <div className={classes.noWrap}>\n          <Toolbar disableGutters={!open}>\n            <Tooltip\n              title=\"Search by Pathway Enrichment / Protein-Protein Interactions / Gene Association\"\n              aria-label=\"NDEx_tooltip\"\n            >\n              <div>\n                <Button style={titleStyle} onClick={this.handleHomeButton}>\n                  <HomeIcon fontSize=\"default\" className={classes.homeLogo} />\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                    NDEx Integrated Query\n                  </Typography>\n                </Button>\n              </div>\n            </Tooltip>\n\n            {this.props.search.results === null ? (\n              <div />\n            ) : (\n              <div className={classes.textBox}>\n                <GeneTextBox {...others} />\n              </div>\n            )}\n\n            <div className={classes.grow} />\n\n            <div>\n              <Tooltip title=\"NDEx\" placement=\"bottom\">\n                <IconButton\n                  color=\"default\"\n                  aria-label=\"Home\"\n                  onClick={() => openLink(NDEX_URL)}\n                >\n                  <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip\n                title=\"Help\"\n                placement=\"bottom\"\n                style={{ marginRight: '1em' }}\n              >\n                <Typography color=\"textPrimary\" noWrap={true} display=\"inline\">\n                  <IconButton\n                    aria-haspopup=\"true\"\n                    onClick={() => openLink(HELP_URL)}\n                    color=\"inherit\"\n                  >\n                    <HelpIcon className={classes.logo} />\n                  </IconButton>\n                </Typography>\n              </Tooltip>\n              {/*}\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n          </Tooltip>*/}\n            </div>\n          </Toolbar>\n        </div>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\nconst IL_URL = 'http://idekerlab.ucsd.edu/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img\n                  src={link.src}\n                  height=\"24px\"\n                  width=\"24px\"\n                  alt=\"list item icon\"\n                />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 0.5em',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  const historyListener = (location, action) => {\n    if (action === 'POP' && location.pathname !== '/') {\n      console.log('Back button::', location, action)\n      props.searchActions.clearAll()\n      props.history.push('/')\n    }\n  }\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    const { queryList } = props.search\n\n    if (queryList.length === 0) {\n      console.log('* No query genes. Reload called:', props, queryList)\n      props.searchActions.clearAll()\n      props.history.push('/')\n      return\n    }\n\n    props.history.listen(historyListener)\n\n    return () => {}\n  }, [])\n\n  const isFetching = props.search.isFetching\n  const searchResults = props.search.searchResults\n\n  // Still searching and no result is available\n  if (isFetching && searchResults === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Typography from '@material-ui/core/Typography'\nimport { Tooltip, Button } from '@material-ui/core'\nimport searchLogo from '../../assets/images/search-logo.svg'\n\nimport * as examples from './example-genes'\nimport { HGNC_REGEX } from '../../reducers/search'\n\nconst EXAMPLES = examples.default.examples\nconst feedbackURL = 'https://home.ndexbio.org/contact-us/'\n\nconst styles = {\n  root: {\n    padding: '0.1em 0.25em',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n    let geneList = genes\n      .toString()\n      .replace(',', ' ')\n      .split(/\\s*,\\s*|\\s+/)\n\n    geneList = geneList.filter(gene => {\n      return HGNC_REGEX.test(gene)\n    })\n\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  return (\n    <div className={'search-text-panel'}>\n      <Paper className={'search-text-box'} elevation={1}>\n        <IconButton\n          color={'default'}\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleClear}\n        >\n          <DeleteIcon />\n        </IconButton>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Enter gene list (or click an example below)\"\n          onChange={handleChange('query')}\n          onKeyDown={handleKeyPress}\n          value={state.query}\n          autoFocus={true}\n        />\n        <IconButton\n          ref={searchButtonEl}\n          className={classes.iconButton}\n          aria-label=\"Search\"\n          onClick={handleSearch}\n        >\n          <img\n            alt=\"Search icon\"\n            src={searchLogo}\n            style={{ height: '1.25em' }}\n          />\n        </IconButton>\n      </Paper>\n\n      <div className={'query-example-panel'}>\n        <Typography align={'center'} variant={'subtitle2'}>\n          Query gene set examples:\n        </Typography>\n\n        <div className={'query-examples'}>\n          {EXAMPLES.map((example, index) => {\n            return (\n              <div key={example.name}>\n                <Tooltip\n                  title={\n                    <div style={{ textAlign: 'center' }}>\n                      {example.description}\n                    </div>\n                  }\n                  placement=\"bottom\"\n                >\n                  <Button\n                    className=\"example-text\"\n                    color=\"inherit\"\n                    onClick={() => handleExample(index)}\n                  >\n                    {example.name}\n                  </Button>\n                </Tooltip>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n\n      <Typography\n        variant=\"caption\"\n        color=\"textSecondary\"\n        align={'center'}\n        className={'search-text-caption'}\n      >\n        Try this pre-release version, send us\n        <a href={feedbackURL} target=\"_blank\" rel=\"noopener noreferrer\">\n          {' '}\n          feedback\n        </a>\n      </Typography>\n    </div>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\nimport LoadingPanel from '../LoadingPanel'\nimport Typography from '@material-ui/core/Typography'\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport queryString from 'query-string'\nimport './style.css'\n\nconst feedbackURL = 'https://home.ndexbio.org/contact-us/'\n\n// TODO: move this to a global property\nconst APP_VERSION = 'v0.2'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(/\\s|,/)\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n    props.sourceActions.findSourceStarted()\n\n    return () => {}\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={<div style={{ color: 'black' }}>Please wait...</div>}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className={'start-title'}>\n        <div className={'description-panel'}>\n          <Typography align={'center'} variant={'subtitle2'}>\n            One search finds pathways, queries protein interaction networks, and\n            discovers disease, drug, and tissue associations. Powered by NDEx\n            and integrated with Cytoscape\n          </Typography>\n        </div>\n\n        <div className={'title-panel'}>\n          <img\n            className=\"start-logo-main\"\n            src={ndex}\n            alt=\"logo\"\n            style={{ height: '8.75em', paddingRight: '1em' }}\n          />\n          <div className=\"flex\">\n            <div className={'app-title'}>NDEx Integrated Query</div>\n            <Typography\n              align=\"left\"\n              style={{ position: 'relative', left: '0.25em', top: '-0.1em' }}\n            >\n              {APP_VERSION + ' Pre-Release'}\n            </Typography>\n          </div>\n        </div>\n\n        <SearchTextBox {...props} />\n\n        <div className={'search-text-note'}>\n          <Typography variant=\"caption\" align=\"left\">\n            NDEx Integrated Query uses selected pathway and interactome networks\n            in NDEx to power gene set analysis. The networks come from many\n            different sources and new networks will be continuously added. Do\n            you have a pathway or an interaction network that you would like to\n            include in these queries? Click{' '}\n            <a href={feedbackURL} target=\"_blank\" rel=\"noopener noreferrer\">\n              here\n            </a>{' '}\n            to find out how.\n          </Typography>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setSortBy,\n  setSortOptions,\n  setLayout,\n  setLayouts,\n  fitNetworkView,\n  update,\n  setAnnotations\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: 'enrichment',\n  sortOptions: ['Overlap', 'p-Value', 'Similarity'],\n  sortBy: 'Similarity',\n  layout: 'Preset',\n  layouts: [],\n  fit: true,\n  annotations: false\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    },\n    [setSortOptions]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      }\n    },\n    [setSortBy]: (state, payload) => {\n      return {\n        ...state,\n        sortBy: payload.payload\n      }\n    },\n    [setLayout]: (state, payload) => {\n      return {\n        ...state,\n        layout: payload.payload\n      }\n    },\n    [setLayouts]: (state, payload) => {\n      return {\n        ...state,\n        layouts: payload.payload\n      }\n    },\n    [fitNetworkView]: (state, payload) => {\n      return {\n        ...state,\n        fit: !state.fit\n      }\n    },\n    [update]: (state, payload) => {\n      return {\n        ...state,\n        //fit: payload.payload.fit,\n        //highlights: payload.payload.highlights,\n        layouts: payload.payload.layouts,\n        layout: payload.payload.layout,\n        annotations: payload.payload.annotations\n          ? !state.annotations\n          : state.annotations\n      }\n    },\n    [setAnnotations]: (state, payload) => {\n      return {\n        ...state,\n        annotations: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/Ndex/NetworkViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  setNetworkUrl\n} from '../actions/network'\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  url: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: '',\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0,\n        layout: 'Preset',\n        layouts: []\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined,\n        layout: 'Default'\n      }\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      }\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: []\n      }\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      }\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: []\n      }\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      }\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      }\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        url: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  const color = '#FFFFFF'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nimport { SourceState } from './types'\n\nconst defaultState: SourceState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state: SourceState, action) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state: SourceState, action) => {\n      return {\n        ...state,\n        sources: action.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state: SourceState, action) => {\n      console.warn('Error:', action.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: action.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state: SourceState, action) => {\n      return {\n        ...state,\n        currentSource: action.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport { CyRestState } from './types'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState: CyRestState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst cyrest = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.info('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    }\n  },\n  defaultState\n)\n\nexport default cyrest\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","export type FilteredGenes = {\r\n  uniqueGeneMap: Map<string, Record<string, any>>\r\n  notFound: string[]\r\n}\r\n\r\nconst filterGenes = (resultList: any[]): FilteredGenes => {\r\n  const uniqueGeneMap = new Map<string, Record<string, any>>()\r\n  const notFound = new Array<string>()\r\n\r\n  let len: number = resultList.length\r\n\r\n  while (len--) {\r\n    const entry: Record<string, any> = resultList[len]\r\n    const query: string = entry.query\r\n\r\n    if (entry.notfound) {\r\n      notFound.push(query)\r\n    } else {\r\n      uniqueGeneMap.set(query, entry)\r\n    }\r\n  }\r\n\r\n  return {\r\n    uniqueGeneMap,\r\n    notFound\r\n  } as FilteredGenes\r\n}\r\n\r\nexport { filterGenes }\r\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport { getResult, checkStatus, getSource, postQuery } from '../api/search'\n\nimport { FilteredGenes, filterGenes } from './ndexSaga-util'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 500\n\n/**\n * Call IQ service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList: string[] = action.payload.geneList\n  let sourceNames: string[] = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (!sourceNames || sourceNames.length === 0) {\n    const sources = yield call(getSource)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList: any[] = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n\n  const geneListString: string = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts: string[] = resultLocation.split('/')\n    const jobId: string = parts[parts.length - 1]\n    const filtered: FilteredGenes = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId: string = action.payload.jobId\n\n  const resultList: any[] = []\n  const finishedSourceNames: Set<string> = new Set()\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const status: any[] = statusJson.sources\n      let idx: number = status.length\n\n      while (idx--) {\n        const src: Record<string, any> = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(getResult, jobId, sourceName)\n          const json: Record<string, any> = yield call([resultRes, 'json'])\n\n          if (!finishedSourceNames.has(sourceName)) {\n            // Need to add this new result.\n            resultList.push(json.sources[0])\n            finishedSourceNames.add(sourceName)\n          }\n          json.sources = resultList\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n\n      idx = status.length\n      let finishCount = 0\n      while (idx--) {\n        if (status[idx].progress === 100) {\n          finishCount++\n        }\n      }\n      if (finishCount === status.length) {\n        console.log('!! Search & fetch finished:', finishCount, resultList)\n        break\n      }\n\n      // Wait 1 sec. and try API call again.\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params: Record<string, any> = action.payload\n    const id: string = params.id\n    const sourceUUID: string = params.sourceUUID\n    const networkUUID: string = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nexport function* fetchSource(action) {\n  try {\n    const sources = yield call(getSource)\n    const json = yield call([sources, 'json'])\n    const orderedSources = json.results\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";"],"sourceRoot":""}