{"version":3,"sources":["assets/images/cytoscape-logo.svg","assets/images/ndex-logo-mono.svg","assets/images/cytoscape-logo-mono.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","api/cyrest.js","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/MessageSnackbar.jsx","components/AppShell/GeneTextBox.jsx","actions/network.js","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","handleClick","geneSymbol","props","searchActions","setSelectedGenes","getChip","value","isValid","classes","hitSets","color","found","has","symbol","react_default","a","createElement","Chip_default","className","chip","avatar","Avatar_default","Check_default","label","onClick","variant","key","withStyles","theme","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","sortBySymbol","b","matchedSorted","sort","unmatchedSorted","sorted","concat","Object","toConsumableArray","event","console","log","target","handleClear","map","InputPanel","components_GeneList","Empty","index_es","Warning","cyInstance","PRESET_LAYOUT","name","padding","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","useEffect","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","uiStateActions","setHighlights","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","width","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","filter","react_cytoscape_default","style","stylesheet","cy","LoadingPanel","Typography_default","title","message","CircularProgress_default","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","_this","setState","defineProperty","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","button","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toUpperCase","get","React","Component","marginLeft","marginTop","paddingLeft","getAttrMap","attrs","listAttrMap","forEach","attr","n","v","findAttributes","originalCX","attrType","len","NodeProperties","listAttr","nodeId","d","startsWith","po","toString","getListNodeAttr","join","TableBrowser_GeneAnnotationList","assign","EdgeProperties","formatValue","modifiedText","removeHtmlTags","text","replace","NetworkProperties","networkAttr","Math","random","useStyles","makeStyles","container","overflow","list","subtitle","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","minWidth","cyrestActions","startCyRestPolling","stopCyRestPolling","cyrest","handleImportNetwork","disabled","uuid","available","disableFocusListener","Button_default","alt","src","logoDisabled","logo","paddingRight","maxWidth","marginRight","_useState","useState","_useState2","slicedToArray","highlight","setHighlight","evt","WbIncandescent_default","ndexSaveActions","setNDExModalOpen","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","saveToNDEx","cx","token","handleClose","networkUrl","_this2","_this$props","ndexSave","profile","authorization","text-transform","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","type","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","item","xs","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","setProfile","preventDefault","credentialsSignOn","handleOnSuccess","resp","googleSignOn","setErrorMessage","_this$props4","others","objectWithoutProperties","open","ndexModal","onClose","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","paddingBottom","OpenInBrowser_default","fontSize","toolbar","grow","flexGrow","menuButton","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","transition","transitions","create","&:focus","buttons","border","openIcon","networkName","noWrap","Ndex_Highlighter","components_NDExSignInModal","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","Ndex_OpenOriginalNetworkButton","DEFAULT_RATIO","NetworkView","resized","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","onChange","objectSpread","option","MenuItem_default","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","query","MenuList_default","status","cyRESTPort","statusUrl","CYREST_BASE_URL","fetch","method","importNetwork","payload","importNetworkUrl","headers","Accept","Content-Type","body","Ndex","queryList","sourceUUID","jobId","updateHistory","networkUUID","searchResults","sourceName","selectedSource","history","Ndex_NetworkList","querySize","networkEntry","edges","imageURL","rank","pVal","PValue","descriptionText","descriptionText2","pValText","toExponential","val","networkFetchStarted","handleFetch","listTitle","Ndex_NetworkView","importNetworkStarted","sourceId","TabContent","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","newValue","setSelectedSource","Results_Empty","selectedSourceName","Tabs_default","networkClear","Tab_default","Results_TabContent","MessageSnackbar","reason","setOpen","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","input","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","setQuery","_useState3","_useState4","loadCSS","document","querySelector","handleSearch","sourceNames","geneListString","split","clearAll","searchStarted","AppShell_MessageSnackbar","Paper_default","elevation","getElementById","execCommand","Icon_default","classNames","icon","Delete_default","InputBase_default","onKeyDown","ref","Search_default","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","createAction","networkFetchSucceeded","networkFetchFailed","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","Menu_default","AppShell_GeneTextBox","aria-haspopup","Home_default","openLink","HELP_URL","Help_default","NDEX_URL","ndexLogo","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","index","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","cyrestport","URLSearchParams","location","setPort","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","_props$search","searchResult","components_AppShell","components_Results","components_InputPanel","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","clearQuery","searchSucceeded","searchFailed","setSearchResult","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","SET_SELECTED_SOURCE","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","SET_NDEX_MODAL_OPEN","SET_PROFILE","CREDENTIALS_SIGN_ON","GOOGLE_SIGN_ON","SAVE_TO_NDEX","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","searchButtonEl","anchorEl","Boolean","repaceDelimiters","currentTarget","core_Menu_default","transformOrigin","example","exampleIdx","CY_URL","UCSD_URL","Footer","cyLogo","ucsdLogo","StartPanel","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","_handleActions","singleResult","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","properties","upperQuery","gene","source_handleActions","isFetchingSource","cyrest_handleActions","lastResponse","port","isFetchingAvailable","isPollingAvailable","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","all","myGeneApi","filterGenes","put","uniqueGeneMap","t0","_marked2","sleep","ms","Promise","resolve","setTimeout","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","reducedSources","orderedSources","_context5","includes","firstEl","secondEl","indexOf","_marked5","Map","notfound","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","responseJson","aspect","numberVerification","longNumber","cyRestSaga_marked2","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","cyRestStatusSaga_marked","take","race","cyRestStatusSaga_marked2","cyRestStatusSaga_marked3","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","endsWith","ndexSaveSaga_marked2","user","pwd","auth","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","cyRestStatusSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.733dd974.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort(sortBySymbol)\n  const unmatchedSorted = unmatched.sort(sortBySymbol)\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>{found ? <CheckIcon /> : '-'}</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>Query Genes</div>\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined || targets.length === 0) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    } else {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 10\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport CheckIcon from '@material-ui/icons/Check'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\nimport { getListNodeAttr } from './attribute-util'\n\n\nconst NodeProperties = props => {\n  const { node, originalCX } = props\n  const listAttr = getListNodeAttr(originalCX, node.id)\n\n  const keys = Object.keys(node)\n\n  keys.forEach(key => {\n    if (listAttr[key] !== undefined) {\n      node[key] = listAttr[key].join(', ')\n    }\n  })\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { getListNetworkAttr, findAttributes } from './attribute-util'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={Math.random()}>\n          <ListItemText\n            inset\n            primary={formatValue(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst formatValue = entry => {\n  let modifiedText = entry.v\n\n  if(Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return removeHtmlTags(modifiedText.toString())\n}\n\nconst removeHtmlTags = text => {\n  const originalText = text\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} originalCX={originalCX} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React, { useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling()\n    return () => {\n      props.cyrestActions.stopCyRestPolling()\n    }\n  }, [])\n\n  const { classes, cyrest, handleImportNetwork } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) || !cyrest.available\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open this network in Cytoscape Desktop\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img\n            alt=\"Cytoscape logo\"\n            src={disabled ? logoDisabled : logo}\n            className={classes.buttonIcon}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)\n","import React, { useState } from 'react'\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    paddingRight: '0.2em'\n  },\n  button: {\n    height: '3em',\n    maxWidth: '13em',\n    minWidth: '13em',\n    marginRight: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n\n  const [highlight, setHighlight] = useState(true)\n\n  const handleChange = evt => {\n    setHighlight(!highlight)\n    props.uiStateActions.setHighlights(!highlight)\n  }\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"outlined\"\n      color={highlight ? 'secondary' : 'default'}\n      onClick={handleChange}\n    >\n      <HighlightIcon\n        className={classes.buttonIcon}\n        color={highlight ? 'secondary' : 'disabled'}\n      />\n      Highlight Genes\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(Highlighter)\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginRight: '0.5em'\n  }\n})\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInNDExButton)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default withStyles(styles)(NDExSave)\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nconst styles = theme => ({})\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const { ndexSave } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...others} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NDExSignInModal)\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://www.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes, network } = props\n\n  const disabled = !(network.uuid && network.uuid.length > 0)\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          color={'default'}\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default withStyles(styles)(OpenOriginalNetworkButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport Highlighter from './Highlighter'\nimport { Tooltip } from '@material-ui/core'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <NDExSignInModal {...others}>\n        <NDExSave {...others} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...others} />\n      <OpenInCytoscapeButton {...others} />\n      <OpenOriginalNetworkButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network, search } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const query = search.results.genes\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(query.size, entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport { ListItem } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Paper from '@material-ui/core/Paper'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    // console.log('Entry:', networkEntry)\n\n    const pVal = details.PValue\n    let descriptionText =\n      'N: ' +\n      nodes +\n      ', E: ' +\n      edges +\n      ',  Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let descriptionText2 = ''\n\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(5)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      descriptionText2 = 'P-value = ' + pValText\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography component=\"span\" variant=\"caption\">\n                {'Rank ' + (rank+1)}\n              </Typography>\n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant={'caption'}>\n                  {descriptionText}\n                </Typography>\n              </Tooltip>\n              <Typography component=\"span\" variant={'caption'}>\n                {descriptionText2}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\nimport Ndex from './Ndex'\n\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const { results } = props\n\n  if (results === null || results === undefined) {\n    return <LoadingPanel title={'Loading results'} message={'Please wait...'} />\n  } else {\n    const { sourceUUID } = results\n    return <Ndex hits={results.results} sourceUUID={sourceUUID} {...props} />\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, idx)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  const { classes, ...others } = props\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const { searchResults } = props.search\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    props.setOpen(false)\n  }\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.open}\n      autoHideDuration={4000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">Genes are copied to clipboard!</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/ /)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar open={open} setOpen={setOpen} />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo-mono.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport { networkClear } from \"../../actions/network\";\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  ndexLogo: {\n    height: '1em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n\n\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={this.handleHomeButton}\n            >\n              <HomeIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              color=\"default\"\n              aria-label=\"Home\"\n              onClick={() => openLink(NDEX_URL)}\n            >\n              <img alt=\"NDEx logo\" src={logo} className={classes.ndexLogo} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const { isFetching, searchResult } = props.search\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)\n","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: ''\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 5000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}