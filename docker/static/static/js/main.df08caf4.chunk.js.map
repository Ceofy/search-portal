{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/search-logo.svg","assets/images/ucsd-logo.svg","assets/images/ndex-logo-mono-dark.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/HoverTab.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/LayoutSettings.js","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/ExpandPanel.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_ORDER","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","FIT_NETWORK_VIEW","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","fitNetworkView","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","padding","borderRadius","height","borderWidth","backgroundColor","selectedButtonStyle","selectedChipStyle","margin","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","props","hitSets","color","found","has","symbol","react_default","a","createElement","Chip","avatar","Avatar","Check_default","variant","key","selected","style","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","selectedGenes","searchActions","className","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","matchedSorted","sort","reverse","unmatchedSorted","sorted","concat","Object","toConsumableArray","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","GeneList_ToggleButton","InputPanel","components_GeneList","HoverTab","theme","root","&:hover","opacity","Tab","Empty","Typography","message","MessageSnackbar","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","id","action","IconButton","aria-label","onClick","Close_default","logo","button","display","marginLeft","marginRight","position","top","outer","justifyContent","alignItems","inner","marginTop","width","classes","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","state","setState","_useState5","_useState6","setMessage","uuid","length","cyrest","available","isLoadingNetwork","lastResponse","cycleId","console","log","type","currentId","setTimeout","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","AppShell_MessageSnackbar","align","PRESET_LAYOUT","name","animate","CONCENTRIC_LAYOUT","minNodeSpacing","COSE_LAYOUT","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","fit","Cytoscape","use","CyCanvas","cyInstance","annotationRenderer","CxToCyCanvas","CxToJs","utils","CyNetworkUtils","CytoscapeViewer","highlights","uiState","_props$network","originalCX","useMemo","networkAttr","filter","entry","networkAttributes","firstEntry","annotationEntry","attr","n","nice","rawCXtoNiceCX","drawAnnotationsFromNiceCX","useEffect","on","networkActions","e","warn","selectEdge","edges","$","forEach","element","data","selectNode","nodes","removeClass","this","source","target","addClass","elements","targets","zoom","center","eles","duration","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","background","isLayoutAvailable","isLayout","layout","resize","stop","react_cytoscape_default","stylesheet","cy","LoadingPanel","CircularProgress","size","NetworkViewer","isFetching","components_LoadingPanel","actualResults","Results_CytoscapeViewer","assign","resized","findAttributes","attrType","len","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","toString","ExpandPanel","_React$useState","React","defaultExpanded","_React$useState2","divider","borderTop","Math","random","ListItemText","primary","summary","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","component","disablePadding","details","index","useStyles","makeStyles","container","overflow","boxSizing","paddingLeft","paddingTop","lessPadding","noPadding","paddingBottom","extractContent","modifiedText","v","Array","isArray","join","extractTitle","formatPrimary","startsWith","endsWith","parse","linkifyjs_react_default","formatContext","splitResults","split","item","NetworkProperties","content","leftDisplayItems","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","displayed","selectedSource","newTitle","splice","networkInfo","listIndex","rightDisplay","list","currentEntry","secondaryString","primaryString","leftDisplay","keyId","react_split_es","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","_this","defineProperty","getListItem","geneEntry","description","_id","disableGutters","ListItemAvatar","inline","href","Launch_default","search_results","geneSymbol","get","Component","linkIcon","nested","spacing","unit","wideList","table","tableLayout","NodeProperties","selectedNodes","context","setDefaultExpanded","entityProperties","nodeProperties","displayItems","sortedNodes","b","topDisplay","geneAnnotation","inset","TableBrowser_GeneAnnotationList","_content$split","_content$split2","prefix","displayCol1","displayCol2","colSpan","valign","findNode","nodeId","nodeArray","isNaN","returnNode","MemoEdgeProperties","selectedEdges","nodeList","edgeProperties","aScore","bScore","aSource","aTarget","bSource","bTarget","listPadding","subtitle","minHeight","TabContent","i","JSON","TableBrowser_NetworkProperties","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","DISABLED_STYLE","TableBrowserPanel","tableDisplayTab","Tabs","newValue","Results_HoverTab","TableBrowserPanel_TabContent","MemoTableBrowser","TableBrowser_TableBrowserPanel","BootstrapButton","borderColor","&:active","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","OpenInCytoscapeButton_BootstrapButton","logoDisabled","ResetZoomButton_BootstrapButton","disabledLogo","textAlign","lignHeight","highlight","evt","uiStateActions","WbIncandescent_default","OpenInNDExButton_BootstrapButton","ndexSaveActions","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","cx","token","networkUrl","_this2","_this$props","ndexSave","profile","authorization","DialogContentText","DialogActions","text-transform","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","error","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","preventDefault","handleOnSuccess","resp","esm_extends","Dialog","ndexModal","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","OpenInBrowser_default","fontSize","toolbar","paddingRight","grow","flexGrow","menuButton","breakpoints","up","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","&:focus","buttons","border","openIcon","other","objectWithoutProperties","_props$network$networ","networkName","_props$network$networ2","noWrap","Ndex_ResetZoomButton","Ndex_Highlighter","components_NDExSignInModal","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","Ndex_OpenOriginalNetworkButton","DEFAULT_RATIO","NetworkView","setResize","Ndex_NetworkToolbar","direction","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","BootstrapInput","label + &","input","textColor","InputBase","formStyle","left","marginBottom","divStyle","borderBottom","typeStyle","selectStyle","SortPanel","sortPValueOn","setSortPValueOn","Select","displayEmpty","MenuItem","networkAvatar","menuItem","menuText","secondary","plot","sortFunction","sortOrder","PValue","first","handleFetch","networkUUID","handleListItemClick","enrichmentStyle","selectedIndex","Ndex_SortPanel","MenuList","renderNetworkListItem","queryList","titleStyle","lineHeight","wordBreak","subtitleStyle","Ndex","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","Ndex_NetworkList","querySize","networkEntry","imageURL","icon","ListItemIcon","pVal","toExponential","pv","rowSpan","parent_network_nodes","parent_network_edges","Ndex_NetworkView","sourceId","Results_Ndex","TAB_LABELS","enrichment","interactome-ppi","interactome-association","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","others","setSelectedTabIndex","Results_Empty","selectedSourceName","Results_TabContent","flex","iconButton","geneTextRef","useRef","queryGenes","queryText","loadCSS","document","querySelector","handleSearch","sourceNames","elevation","getElementById","select","execCommand","Icon","classNames","Divider","Delete_default","onKeyDown","ref","Search_default","textTransform","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","Home_default","textBox","AppShell_GeneTextBox","openLink","HELP_URL","Help_default","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","whiteSpace","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","sourceEntry","version","status","text","Settings_default","LINKS","link","github","flexShrink","drawerHeader","objectSpread","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","onpopstate","onBackButtonEvent","searchResult","components_AppShell","components_Results","components_InputPanel","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","searchButtonEl","anchorEl","query","createMuiTheme","main","purple","Boolean","handleExample","exampleIdx","searchLogo","Link","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","flexDirection","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","_handleActions","payload","singleResult","uiState_handleActions","cx2js","vs","selector","css","background-color","background-opacity","border-width","fadedNode","fadedEdge","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","upperQuery","gene","source_handleActions","isFetchingSource","currentSource","cyrest_handleActions","port","isFetchingAvailable","isPollingAvailable","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","Content-Type","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","regenerator_default","wrap","_context","prev","takeLatest","_marked","sourceJson","geneListString","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","all","myGeneApi","filterGenes","put","uniqueGeneMap","notFound","t0","_marked2","sleep","ms","Promise","resolve","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","orderedSources","_context5","_marked5","Map","notfound","cyRESTPort","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","responseJson","aspect","numberVerification","longNumber","cyRestSaga_marked2","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","cyRestStatusSaga_marked","take","race","cyRestStatusSaga_marked2","cyRestStatusSaga_marked3","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","ndexSaveSaga_marked2","user","pwd","auth","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","cyRestStatusSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df08caf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-logo.19dae5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-dark.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const FIT_NETWORK_VIEW = 'FIT_NETWORK_VIEW'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MuiToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nconst buttonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"#FFFFFF\"\n};\n\nconst selectedButtonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"rgb(252, 235, 242)\"\n};\n\nconst selectedChipStyle = {\n  margin: \"0\",\n  borderRadius: \"20px\"\n};\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: \"transparent\"\n};\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: \"transparent\"\n  }\n})(MuiToggleButton);\n\nconst GeneList = props => {\n  const results = props.search.results;\n  const hits = props.network.hitGenes;\n  const hitSets = new Set(hits);\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search.selectedGenes[0]) {\n      props.searchActions.clearSelectedGenes();\n    } else {\n      props.searchActions.setSelectedGenes(newAlignment);\n    }\n  };\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />;\n  }\n\n  const geneList = results.genes;\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />;\n  }\n\n  const matched = [];\n  const unmatched = [];\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value);\n    } else {\n      unmatched.push(value);\n    }\n  }\n\n  const matchedSorted = matched.sort().reverse();\n  const unmatchedSorted = unmatched.sort().reverse();\n  const sorted = [...matchedSorted, ...unmatchedSorted];\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup\n              value={props.search.selectedGenes}\n              exclusive\n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton\n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) &&\n                  props.search.selectedGenes[0] === geneValue.symbol\n                    ? selectedButtonStyle\n                    : buttonStyle\n                }\n              >\n                {getChip(geneValue, true, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nconst getChip = (value, isValid, props, hitSets) => {\n  let color = \"default\";\n  let found = false;\n  if (hitSets.has(value.symbol)) {\n    color = \"secondary\";\n    found = true;\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        avatar={<Avatar>{found ? <CheckIcon /> : \"-\"}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    );\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={\"INVALID: \" + value}\n        key={value}\n        clickable={true}\n      />\n    );\n  }\n};\n\nexport default GeneList;\n","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>\n        Query Genes\n      </div>\n      <GeneList {...props}/>\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\n\r\nconst HoverTab = withStyles(theme => ({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(235,235,235)',\r\n      opacity: 1,\r\n      color: '#222222'\r\n    }\r\n  }\r\n}))(props => <Tab {...props} />)\r\n\r\n\r\nexport default HoverTab","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"h3\">{props.message}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst MessageSnackbar = props => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        \"aria-describedby\": \"message-id\"\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  );\n};\n\nexport default MessageSnackbar;\n","import React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport cytoLogo from \"../../../assets/images/cytoscape-logo.svg\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport \"./style.css\";\n\nconst styles = theme => ({\n  logo: {},\n  button: {\n    height: \"50%\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    position: \"relative\",\n    top: \"15%\"\n  },\n  outer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inner: {\n    position: \"relative\",\n    marginTop: \"15%\",\n    width: \"100%\"\n  }\n});\n\nconst Warning = props => {\n  const { classes } = props;\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState(\"dormant\");\n  const [message, setMessage] = useState(null);\n\n  const handleClick = () => {\n    props.handleImportNetwork();\n  };\n\n  if (\n    props.network.uuid &&\n    props.network.uuid.length > 0 &&\n    props.cyrest.available\n  ) {\n    //Snackbar\n    const isLoadingNetwork = props.cyrest.isLoadingNetwork;\n    const lastResponse = props.cyrest.lastResponse;\n\n    let cycleId = 0;\n    console.log(\"cycleId: \" + cycleId);\n    console.log(\"state: \" + state);\n\n    if (state === \"dormant\" && isLoadingNetwork) {\n      setMessage(\"Opening network in Cytoscape Desktop . . .\");\n      setState(\"openLoading\");\n      if (!open) {\n        setOpen(true);\n      }\n    }\n    if (\n      (state === \"openLoading\" || state === \"closeLoading\") &&\n      lastResponse != null\n    ) {\n      setState(\"openResult\");\n      if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n        setMessage(\"Network opened in Cytoscape Desktop!\");\n      } else {\n        setMessage(\"Network failed to open in Cytoscape Desktop\");\n      }\n      if (!open) {\n        setOpen(true);\n      }\n    }\n    if (state === \"openResult\" && !open) {\n      setOpen(true);\n    }\n    if (state === \"openResult\" && open) {\n      let currentId = cycleId;\n      setTimeout(() => {\n        if (state === \"openResult\" && currentId === cycleId) {\n          setState(\"dormant\");\n          cycleId++;\n          setOpen(false);\n        }\n      }, 6000);\n    }\n\n    const handleClose = (event, reason) => {\n      console.log(\"click\");\n      if (state === \"openLoading\") {\n        console.log(\"openLoading to closeLoading\");\n        setState(\"closeLoading\");\n      } else if (state === \"openResult\") {\n        console.log(\"openResult to dormant\");\n        setState(\"dormant\");\n        cycleId++;\n      }\n      setOpen(false);\n      console.log(\"open: \" + open);\n    };\n\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton\n            className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Network is too big for interactive view. <br />\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={\"right\"}\n          vertical={\"bottom\"}\n          handleClose={handleClose}\n        />\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">\n            Network is too big for interactive view. <br />\n            Please open Cytoscape Desktop to view.\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(Warning);\n","export const PRESET_LAYOUT = {\r\n  name: 'preset',\r\n  padding: 6,\r\n  animate: false\r\n}\r\n\r\nexport const CONCENTRIC_LAYOUT = {\r\n  name: 'concentric',\r\n  padding: 6,\r\n  minNodeSpacing: 100,\r\n  animate: false\r\n}\r\n\r\nexport const COSE_LAYOUT = {\r\n  name: 'cose',\r\n  padding: 6,\r\n  nodeRepulsion: function(node) {\r\n    return 10080000\r\n  },\r\n  nodeOverlap: 400000,\r\n  idealEdgeLength: function(edge) {\r\n    return 10\r\n  },\r\n  animate: false,\r\n  fit: false\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport CytoscapeComponent from 'react-cytoscapejs'\r\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\r\nimport Cytoscape from 'cytoscape'\r\nimport CyCanvas from 'cytoscape-canvas'\r\nimport { CxToCyCanvas } from 'cyannotation-cx2js'\r\nimport Warning from './Warning'\r\nimport { CONCENTRIC_LAYOUT, COSE_LAYOUT, PRESET_LAYOUT } from './LayoutSettings'\r\n\r\nimport './style.css'\r\n\r\nexport const MAX_NETWORK_SIZE = 5000\r\n\r\n// For supporting visual annotation\r\nCytoscape.use(CyCanvas)\r\n\r\n// This is the global instance of Cytoscape.js\r\nlet cyInstance = null\r\n\r\n// For annotation rendering\r\nconst annotationRenderer = new CxToCyCanvas(CxToJs)\r\nconst utils = new CyNetworkUtils()\r\n\r\n// This is the network attributes storing graphical annotations.\r\nconst ANNOTATION_TAG = '__Annotations'\r\n\r\n// Default network background color\r\nconst DEF_BG_COLOR = '#FFFFFF'\r\n\r\n/**\r\n *\r\n * Simple wrapper for cytoscape.js react component\r\n *\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst CytoscapeViewer = props => {\r\n  const { highlights } = props.uiState\r\n  const { fit, originalCX } = props.network\r\n\r\n  // Use default color if this property is not available.\r\n  let backgroundColor = props.network.backgroundColor\r\n  if (backgroundColor === null || backgroundColor === undefined) {\r\n    backgroundColor = DEF_BG_COLOR\r\n  }\r\n\r\n  let niceCX = useMemo(() => {\r\n    const networkAttr = originalCX.filter(\r\n      entry => entry.networkAttributes !== undefined\r\n    )\r\n\r\n    if (networkAttr !== undefined) {\r\n      const firstEntry = networkAttr[0]\r\n      if (\r\n        firstEntry === undefined ||\r\n        firstEntry.networkAttributes === undefined\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const netAttrArray = firstEntry.networkAttributes\r\n      const annotationEntry = netAttrArray.filter(\r\n        attr => attr.n === ANNOTATION_TAG\r\n      )\r\n      if (annotationEntry.length !== 0) {\r\n        const nice = utils.rawCXtoNiceCX(originalCX)\r\n        console.log(\r\n          '* Registering annotation renderer for this niceCX:',\r\n          annotationEntry\r\n        )\r\n        annotationRenderer.drawAnnotationsFromNiceCX(cyInstance, nice)\r\n        return nice\r\n      }\r\n    }\r\n\r\n    return null\r\n  }, originalCX)\r\n\r\n  /*\r\n    Node/Edge Selections\r\n   */\r\n  useEffect(() => {\r\n    // Event handler can be set only when Cytoscape.js instance is available.\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n\r\n    // Background tapped: Remove selection\r\n    // (This is the standard Cytosape UX)\r\n    cyInstance.on('tap', function() {\r\n      try {\r\n        props.networkActions.unselectEdges()\r\n        props.networkActions.unselectNodes()\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n    })\r\n\r\n    const selectEdge = () => {\r\n      setTimeout(() => {\r\n        const edges = []\r\n        const selectedEdges = cyInstance.$('edge:selected')\r\n        selectedEdges.forEach(element => {\r\n          edges.push(element.data())\r\n        })\r\n        if (edges.length === 0) {\r\n          props.networkActions.unselectEdges()\r\n        } else {\r\n          props.networkActions.selectEdges(edges)\r\n        }\r\n      }, 1)\r\n    }\r\n\r\n    const selectNode = () => {\r\n      setTimeout(() => {\r\n        const nodes = []\r\n        const selectedNodes = cyInstance.$('node:selected')\r\n        selectedNodes.forEach(element => {\r\n          if (element.data().name !== '') {\r\n            nodes.push(element.data())\r\n          }\r\n        })\r\n        if (nodes.length === 0) {\r\n          props.networkActions.unselectNodes()\r\n        } else {\r\n          props.networkActions.selectNodes(nodes)\r\n        }\r\n      }, 1)\r\n    }\r\n\r\n    cyInstance.on('tap', 'node', function() {\r\n      try {\r\n        cyInstance.nodes().removeClass('connected')\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n      selectNode()\r\n    })\r\n\r\n    cyInstance.on('tap', 'edge', function() {\r\n      try {\r\n        cyInstance.nodes().removeClass('connected')\r\n        const selected = this.data()\r\n        const { source, target } = selected\r\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n      selectEdge()\r\n    })\r\n\r\n    cyInstance.on('boxend', function(event) {\r\n      selectEdge()\r\n      selectNode()\r\n    })\r\n\r\n    // Reset the UI state (highlight)\r\n    if (highlights) {\r\n      cyInstance.elements().addClass('faded')\r\n      const query = cyInstance.filter('node[querynode = \"true\"]')\r\n      query.addClass('highlight')\r\n    } else {\r\n      cyInstance\r\n        .elements()\r\n        .removeClass('faded')\r\n        .removeClass('highlight')\r\n    }\r\n\r\n    return () => {\r\n      console.log('Network viewer unmounted')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n\r\n    const targets = props.search.selectedGenes\r\n    if (targets === null || targets === undefined) {\r\n      return\r\n    }\r\n\r\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\r\n\r\n    if (selected.length !== 0) {\r\n      cyInstance.animate(\r\n        {\r\n          zoom: 2,\r\n          center: {\r\n            eles: selected[0]\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n    }\r\n\r\n    if (targets.length === 0) {\r\n      cyInstance.animate(\r\n        {\r\n          fit: {\r\n            eles: cyInstance.elements(),\r\n            padding: 6\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n    }\r\n  }, [props.search.selectedGenes])\r\n\r\n  useEffect(() => {\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n    if (fit) {\r\n      cyInstance.animate(\r\n        {\r\n          fit: {\r\n            eles: cyInstance.elements(),\r\n            padding: 6\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n      props.networkActions.fitNetworkView(false)\r\n    }\r\n  }, [fit])\r\n\r\n  // Check network size and show warning if it's too big for this renderer\r\n  const numObjects = props.network.nodeCount + props.network.edgeCount\r\n  if (numObjects > MAX_NETWORK_SIZE) {\r\n    return <Warning {...props} />\r\n  }\r\n\r\n  // Render actual network\r\n  const cyjs = props.network.network\r\n  if (cyjs === null || cyjs === undefined) {\r\n    return null\r\n  }\r\n\r\n  // Network background should be set via CSS.\r\n  const networkAreaStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: backgroundColor\r\n  }\r\n\r\n  const isLayoutAvailable = cyjs.isLayout\r\n\r\n  let layout = PRESET_LAYOUT\r\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\r\n    layout = COSE_LAYOUT\r\n  } else if (!isLayoutAvailable) {\r\n    layout = CONCENTRIC_LAYOUT\r\n  }\r\n\r\n  if (cyInstance !== null) {\r\n    cyInstance.resize()\r\n\r\n    if (layout === COSE_LAYOUT) {\r\n      layout.stop = () => {\r\n        setTimeout(() => {\r\n          cyInstance.fit()\r\n        }, 200)\r\n      }\r\n    }\r\n\r\n    if (highlights) {\r\n      cyInstance.elements().addClass('faded')\r\n      const query = cyInstance.filter('node[querynode = \"true\"]')\r\n      query.addClass('highlight')\r\n    } else {\r\n      cyInstance\r\n        .elements()\r\n        .removeClass('faded')\r\n        .removeClass('highlight')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CytoscapeComponent\r\n      elements={cyjs.elements}\r\n      layout={layout}\r\n      style={networkAreaStyle}\r\n      stylesheet={cyjs.style}\r\n      cy={cy => {\r\n        cyInstance = cy\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CytoscapeViewer\r\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\" style={{backgroundColor: props.color}}>\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from \"react\";\nimport \"./style.css\";\nimport MemoCytoscapeViewer from \"../CytoscapeViewer\";\nimport LoadingPanel from \"../../LoadingPanel\";\n\nconst NetworkViewer = props => {\n  if (props.network.isFetching) {\n    return (\n      <div className=\"network-view\">\n        <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n      </div>\n    );\n  } else if (props.search.actualResults.length === 0) {\n    return <div className=\"network-view\" />;\n  } else {\n    return (\n      <div className=\"network-view\">\n        {props.network.isFetching ? (\n          <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n        ) : (\n          <MemoCytoscapeViewer resized={props.resized} {...props} />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default NetworkViewer;\n","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","export const camelCaseToTitleCase = camelCaseString => {\n  if (\n    camelCaseString.slice(0, 4) === \"http\" ||\n    camelCaseString.slice(0, 5) === \"Prov:\"\n  ) {\n    return camelCaseString;\n  }\n  let result = camelCaseString\n    .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")\n    .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")\n    .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")\n    .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")\n    .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")\n    .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n    .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\")\n    .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")\n    .trim();\n  result = result.charAt(0).toUpperCase() + result.slice(1);\n  result = result\n    .replace(\"Wiki Pathways\", \"WikiPathways\")\n    .replace(\"Wikipathways\", \"WikiPathways\")\n    .replace(\"Sbo \", \"SBO \")\n    .replace(\"Ncipid\", \"NCI PID\")\n    .replace(\"Cptac\", \"CPTAC\")\n    .replace(\"Hpmi\", \"HPMI\")\n    .replace(\"Ccmi\", \"CCMI\")\n    .replace(\"Tcga\", \"TCGA\")\n    .replace(\"Querynode\", \"Query Node\");\n  return result;\n};\n","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\n\nexport default function ExpandPanel(props) {\n  const [open, setOpen] = React.useState(props.defaultExpanded);\n  let style;\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  if (props.divider) {\n    style = {\n      borderTop: \"1px solid #EFEFEF\"\n    };\n  } else {\n    style = {};\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={handleClick} key={Math.random()} style={style}>\n        <ListItemText primary={props.summary} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem>\n            <ListItemText primary={props.details} />\n          </ListItem>\n        </List>\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React from 'react'\nimport Split from 'react-split'\n\nimport { makeStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { stripScripts } from './strip-scripts-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport ExpandPanel from './ExpandPanel'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '1em',\n    paddingTop: '0.75em'\n  },\n  lessPadding: {\n    paddingTop: '2.49px'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  }\n}))\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.network.originalCX\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = ['Name', 'Description', 'Reference', '@context']\n  const properties = ['Organism', 'Cell', 'Disease']\n  const contributors = ['Author', 'Reviewers', 'Rights Holder', 'Rights']\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const networkInformation = ['Version', 'Network Type', 'Labels']\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ]\n\n  //Filter properties\n  const attributes = []\n  let content\n  let title\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      if (\n        title === 'Description' &&\n        props.uiState.selectedSource === 'interactome'\n      ) {\n        const newTitle = 'Description of parent network'\n        leftDisplayItems.splice(1, 0, newTitle)\n        const networkInfo =\n          props.search.actualResults[props.network.listIndex - 1]\n        content =\n          networkInfo.nodes +\n          ' nodes, ' +\n          networkInfo.edges +\n          ' edges<br/>' +\n          content\n        attributes.push({\n          title: newTitle,\n          content: content, //TODO\n          displayed: false\n        })\n      } else {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    } else if (title === 'Name') {\n      attributes.push({\n        title: title,\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null) {\n        primaryString +=\n          currentEntry.title + ': ' + currentEntry.content + '<br>'\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch (list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n    }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString !== '') {\n      rightDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        const summary = (\n          <Typography component=\"span\" variant=\"body2\">\n            Click to view the namespaces associated with this network\n          </Typography>\n        )\n        const details = <Typography variant=\"body2\">{primaryString}</Typography>\n        leftDisplay.push(\n          <React.Fragment key={index}>\n            <div className={classes.padding}>\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                color=\"textSecondary\"\n              >\n                @context\n              </Typography>\n            </div>\n            <ExpandPanel\n              summary={summary}\n              details={details}\n              defaultExpanded={false}\n              keyId={index++}\n              divider={false}\n            />\n          </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++} className={classes.noPadding}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"caption\"\n                    color=\"textSecondary\"\n                  >\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                >\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n    <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>{leftDisplay}</List>\n      </div>\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>{rightDisplay}</List>\n      </div>\n    </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return (\n    <Linkify key={Math.random().toString()}>{modifiedText}</Linkify>\n  )\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  let splitResults\n  let result = '<table><tbody>'\n  elements.forEach(item => {\n    splitResults = item.split('\"')\n    result +=\n      '<tr><td>' +\n      splitResults[1] +\n      '</td><td>' +\n      splitResults[3] +\n      '</td></tr>'\n  })\n  result += '</tbody></table>'\n  return formatPrimary(result)\n}\n\n\nexport default NetworkProperties\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n        disableGutters={true}\n        style={{padding: '0'}}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <div>\n                      <Typography component=\"span\" variant=\"body2\" >\n                        {geneEntry.symbol}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography\n                        component=\"span\"\n                        className={classes.inline}\n                        variant=\"caption\"\n                        color='textSecondary'\n                      >\n                        {camelCaseToTitleCase(geneEntry.name)}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"body2\" color='textPrimary'>\n                        {description}\n                      </Typography>\n                    </div>\n                  </td>\n                  <td>\n                    <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                      <IconButton\n                        aria-label=\"Link to GeneCards\"\n                        href={GENE_CARDS_URL + geneEntry.symbol}\n                        target=\"_blank\"\n                      >\n                        <LinkIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          }\n        />\n      </ListItem>\n    )\n  }    \n} \n\n  /*\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n*/\n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/styles'\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\nimport GeneAnnotationList from './GeneAnnotationList'\nimport ExpandPanel from './ExpandPanel'\n\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nlet index = 0\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n  const nodes = props.network.selectedNodes\n  const context = props.context\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = ['Name', 'HGNC', 'Ensembl', 'Alias', 'Type']\n\n  const nodeProperties = [\n    'Height',\n    'Width',\n    'Shape',\n    'Is GPML Shape',\n    'Color',\n    'Fill Color',\n    'Transparent',\n    'Border Thickness',\n    'Border Style',\n    'Label Size',\n    'Label Font',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, nodeProperties]\n\n  const sortedNodes = nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedNodes.forEach(node => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let geneAnnotation = null\n    let inset = false\n    if (\n      props.search.results != null &&\n      props.search.results.genes.get(node.name) != null\n    ) {\n      inset = true\n      geneAnnotation = (\n        <List className={classes.noPadding}>\n          <GeneAnnotationList\n            {...props}\n            search_results={props.search.results}\n            geneSymbol={node.name}\n          />\n        </List>\n      )\n    }\n    for (let key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        if (title === 'alias') {\n          const [prefix, id] = content.split(':')\n          if (prefix in context) {\n            attributes.push({\n              title: 'Alias',\n              content:\n                '<a href=\"' + context[prefix] + id + '\">' + content + '</a>',\n              displayed: false\n            })\n          }\n        } else if (title !== 'query') {\n          attributes.push({\n            title: camelCaseToTitleCase(title),\n            content: content,\n            displayed: false\n          })\n        }\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={index++} className={classes.noPadding}>\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case nodeProperties:\n            secondaryString = 'Node Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.noPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString !== '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    const summary = <Typography variant=\"body2\">{node.name}</Typography>\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td colSpan=\"2\" valign=\"top\">\n              {geneAnnotation}\n            </td>\n          </tr>\n          <tr>\n            <td valign={'top'}>{displayCol1}</td>\n            <td valign={'top'}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={node.id + index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link' + index++}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nexport default NodeProperties\n","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/styles'\nimport ExpandPanel from './ExpandPanel'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  const edges = props.network.selectedEdges\n  const nodes = props.nodeList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Source',\n    'Target',\n    'Type',\n    'SBO Type',\n    'Interaction',\n    'Throughput',\n    'Location'\n  ]\n\n  const edgeProperties = [\n    'Start Arrow',\n    'End Arrow',\n    'Connector Type',\n    'Line Thickness',\n    'Line Style',\n    'Color',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, edgeProperties]\n\n  const sortedEdges = edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    const aSource = findNode(a.source, nodes)\n    const aTarget = findNode(a.target, nodes)\n    const bSource = findNode(b.source, nodes)\n    const bTarget = findNode(b.target, nodes)\n    if (aSource !== '') {\n      aScore++\n    }\n    if (aTarget !== '') {\n      aScore++\n    }\n    if (bSource !== '') {\n      bScore++\n    }\n    if (bTarget !== '') {\n      bScore++\n    }\n    if (bScore - aScore !== 0) {\n      return bScore - aScore\n    } else if (aSource === '') {\n      return 1\n    } else if (bSource === '') {\n      return -1\n    }\n\n    if (aSource.toUpperCase() > bSource.toUpperCase()) {\n      return 1\n    } else if (aSource.toUpperCase() < bSource.toUpperCase()) {\n      return -1\n    } else if (aTarget.toUpperCase() > bTarget.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  edges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let source\n    let target\n    for (let key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        if (title === 'source') {\n          source = findNode(content, nodes)\n          attributes.push({\n            title: 'Source',\n            content: source,\n            displayed: false\n          })\n        } else if (title === 'target') {\n          target = findNode(content, nodes)\n          attributes.push({\n            title: 'Target',\n            content: target,\n            displayed: false\n          })\n        } else {\n          attributes.push({\n            title: camelCaseToTitleCase(title),\n            content: content,\n            displayed: false\n          })\n        }\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={Math.random()} className={classes.noPadding}>\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case edgeProperties:\n            secondaryString = 'Edge Properties'\n            displayCol2.push(\n              <ListItem\n                key={Math.random()}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString !== '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    const summary = (\n      <Typography variant=\"body2\">{source + ' -> ' + target}</Typography>\n    )\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td valign={'top'}>{displayCol1}</td>\n            <td valign={'top'}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link:' + index++}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === '') {\n    return nodeId\n  }\n  const returnNode = nodeArray.filter(\n    item => item['@id'].toString() === nodeId.toString()\n  )[0]\n\n  if (returnNode != null) {\n    return returnNode.n\n  } else {\n    return ''\n  }\n}\n\nconst MemoEdgeProperties = EdgeProperties /*React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network.selectedEdges, newProps.network.selectedEdges)\n})*/\n\nexport default MemoEdgeProperties\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport HoverTab from '../HoverTab'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { findAttributes } from './attribute-util'\n\nimport MemoNetworkProperties from './NetworkProperties'\nimport NodeProperties from './NodeProperties'\nimport MemoEdgeProperties from './EdgeProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {},\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  root: {\n    minHeight: 0\n  }\n}))\n\nconst TabContent = props => {\n  const { value } = props\n\n  //Find @context\n  let context = {}\n  let networkAttr = findAttributes(\n    props.network.originalCX,\n    'networkAttributes'\n  )\n  if (networkAttr != null) {\n    for (let i = 0; i < networkAttr.length; i++) {\n      if (networkAttr[i].n === '@context') {\n        context = JSON.parse(networkAttr[i].v)\n      }\n    }\n  }\n\n  if (value === 0) {\n    return <MemoNetworkProperties {...props} />\n  } else if (value === 1) {\n    return <NodeProperties context={context} {...props} />\n  } else {\n    return <MemoEdgeProperties {...props} />\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\nconst TableBrowserPanel = props => {\n  //const network = props.network\n  const classes = useStyles()\n  let value = props.network.tableDisplayTab\n  const originalCX = props.network.originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue)\n  }\n\n  let nodeList\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes\n      break\n    }\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs value={value} onChange={handleChange} className={classes.root}>\n        <HoverTab\n          className={classes.root}\n          key={'network-tab'}\n          label={'Network'}\n        />\n        <HoverTab className={classes.root} key={'nodes-tab'} label={'Nodes'} />\n        <HoverTab className={classes.root} key={'edges-tab'} label={'Edges'} />\n      </Tabs>\n      <TabContent value={value} nodeList={nodeList} {...props} />\n    </div>\n  )\n}\n\nexport default TableBrowserPanel\n\n","import React from \"react\";\n\nimport MemoTableBrowserPanel from \"./TableBrowserPanel\";\n\nconst DISABLED_STYLE = {\n  width: \"100%\"\n};\n\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  if (\n    props.network.originalCX === null ||\n    props.search.actualResults.length === 0\n  ) {\n    return <div style={DISABLED_STYLE} />;\n  }\n\n  return (\n    <div className={\"table-browser\"}>\n      <MemoTableBrowserPanel {...props} />\n    </div>\n  );\n};\n\nconst MemoTableBrowser = TableBrowser; /*React.memo(TableBrowser, (prevProps, newProps) => {\n  return isEqual(prevProps.network.isFetching, newProps.network.isFetching)\n})*/\n\nexport default MemoTableBrowser;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../../../assets/images/cytoscape-logo.svg\";\nimport logoDisabled from \"../../../assets/images/cytoscape-logo-mono-light.svg\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\";\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: \"0.5em\",\n    borderColor: \"#EA9123\",\n    \"&:active\": {\n      borderColor: \"#EA9123\"\n    }\n  }\n})(Button);\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"2em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\"\n  }\n});\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling();\n    return () => {\n      props.cyrestActions.stopCyRestPolling();\n    };\n  }, []);\n\n  const { classes } = props;\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) ||\n    !props.cyrest.available;\n\n  const handleClick = () => {\n    props.handleImportNetwork();\n  };\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork;\n  const lastResponse = props.cyrest.lastResponse;\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState(\"dormant\");\n  const [message, setMessage] = useState(null);\n  let cycleId = 0;\n  //console.log(\"cycleId: \" + cycleId);\n  //console.log(\"state: \" + state);\n\n  if (state === \"dormant\" && isLoadingNetwork) {\n    setMessage(\"Opening network in Cytoscape Desktop . . .\");\n    setState(\"openLoading\");\n    if (!open) {\n      setOpen(true);\n    }\n  }\n  if (\n    (state === \"openLoading\" || state === \"closeLoading\") &&\n    lastResponse != null\n  ) {\n    setState(\"openResult\");\n    if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n      setMessage(\"Network opened in Cytoscape Desktop!\");\n    } else {\n      setMessage(\"Network failed to open in Cytoscape Desktop\");\n    }\n    if (!open) {\n      setOpen(true);\n    }\n  }\n  if (state === \"openResult\" && !open) {\n    setOpen(true);\n  }\n  if (state === \"openResult\" && open) {\n    let currentId = cycleId;\n    setTimeout(() => {\n      if (state === \"openResult\" && currentId === cycleId) {\n        setState(\"dormant\");\n        cycleId++;\n        setOpen(false);\n      }\n    }, 6000);\n  }\n\n  const handleClose = (event, reason) => {\n    console.log('click')\n    if (state === \"openLoading\") {\n      setState(\"closeLoading\");\n    } else if (state === \"openResult\") {\n      setState(\"dormant\");\n      cycleId++;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={\"right\"}\n        vertical={\"bottom\"}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(OpenInCytoscapeButton);\n","import React from \"react\";\nimport \"./style.css\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core\";\n\nimport logo from \"../../../assets/images/zoom-logo.svg\";\nimport disabledLogo from \"../../../assets/images/zoom-logo-mono.svg\";\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"1.75em\"\n  }\n});\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\",\n    borderColor: \"#212121\",\n    color: \"#212121\",\n    \"&:active\": {\n      borderColor: \"#212121\",\n      color: \"#212121\"\n    }\n  }\n})(Button);\n\nconst ResetZoomButton = props => {\n  const { classes } = props;\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0);\n\n  const handleClick = () => {\n    props.networkActions.fitNetworkView(true);\n  };\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default withStyles(styles)(ResetZoomButton);\n","import React from \"react\";\n\nimport HighlightIcon from \"@material-ui/icons/WbIncandescent\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: \"center\",\n    lignHeight: \"50%\",\n    position: \"relative\",\n    top: \"1px\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    marginLeft: \"0.5em\"\n  }\n});\n\nconst Highlighter = props => {\n  const { classes } = props;\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0);\n\n  let highlight = props.uiState.highlights;\n\n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight;\n      props.uiStateActions.setHighlights(highlight);\n    }\n  };\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? \"secondary\" : \"default\"}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? \"secondary\" : \"disabled\"}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default withStyles(styles)(Highlighter);\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n  },\n})(Button);\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(OpenInNDExButton))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    console.log(ndexSave)\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default (withStyles(styles)(NDExSave))\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { ...props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default (NDExSignInModal)\n\n\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://test.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\";\n\nimport { SERVICE_SERVER_URL } from \"../../../api/apiConstants\";\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: \"0.1em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\"\n  }\n});\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props;\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0);\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: \"4.3em\",\n      borderColor: \"#212121\",\n      color: \"#212121\",\n      \"&:active\": {\n        borderColor: \"#212121\",\n        color: \"#212121\"\n      }\n    }\n  })(Button);\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? \"disabled\" : \"inherit\"}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  );\n};\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + \"#/network/\" + uuid;\n  console.log(SERVICE_SERVER_URL);\n  console.log(url);\n\n  console.log(\"Opening original network entry:\", url);\n  window.open(url, \"_blank\");\n};\n\nexport default withStyles(styles)(OpenOriginalNetworkButton);\n","import \"./style.css\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Tooltip } from \"@material-ui/core\";\n\nimport OpenInCytoscapeButton from \"./OpenInCytoscapeButton\";\nimport ResetZoomButton from \"./ResetZoomButton\";\nimport Highlighter from \"./Highlighter\";\nimport OpenInNDExButton from \"./OpenInNDExButton\";\nimport NDExSignInModal from \"../../NDExSignInModal\";\nimport NDExSave from \"../../NDExSave\";\nimport OpenOriginalNetworkButton from \"./OpenOriginalNetworkButton\";\nimport { camelCaseToTitleCase } from \"../TableBrowser/camel-case-util\";\n\nconst styles = theme => ({\n  toolbar: {\n    background: \"#EFEFEF\",\n    height: \"4em\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: \"2.5em\",\n    paddingLeft: \"0.5em\"\n  },\n  buttons: {\n    padding: \"0.3em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    border: \"solid 1px #999999\"\n  },\n  openIcon: {\n    marginRight: \"0.5em\"\n  }\n});\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props;\n  let [prefix, name] = [\"\",\"\"]\n\n  if (props.search.actualResults.length !== 0) {\n    [prefix, name] = props.network.networkName.split(\":\");\n  }\n  console.log(prefix)\n  console.log(name)\n\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {name ? camelCaseToTitleCase(prefix) + \":\" + name : null}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...props} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  );\n};\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(NetworkToolbar);\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport MemoTableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <MemoTableBrowser {...props}/>\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0',\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    },\n  },\n}))(InputBase);\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n}\n\nconst typeStyle = {\n  position: 'relative',\n  top: '14.5px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === 'p-Value') {\n      setSortPValueOn(true)\n      props.uiStateActions.setSortOrder(['p-Value', 'Overlap'])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions.setSortOrder(['Overlap', 'p-Value'])\n    }\n  }\n  \n  if (props.uiState.selectedSource === 'enrichment') {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? 'p-Value' : 'Overlap'}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={'p-Value'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={'Overlap'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default (SortPanel)\n            ","import React, { useEffect } from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SortPanel from \"./SortPanel\";\n\nimport \"./style.css\";\nimport { callbackify } from \"util\";\n\nconst styles = theme => ({\n  inline: {\n    display: \"inline\"\n  },\n  subtitle: {\n    marginLeft: \"1em\",\n    marginTop: \"0.5em\"\n  },\n  networkAvatar: {\n    margin: 5,\n    color: \"#fff\",\n    backgroundColor: \"#FAFAFA\"\n  },\n  menuItem: {\n    \"&:focus\": {\n      backgroundColor: \"rgba(230,230,230,0.6)\"\n    }\n  },\n  menuText: {\n    \"&:focus\": {}\n  },\n  secondary: {\n    width: \"15em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0.2em\"\n  },\n  plot: {\n    width: \"80%\",\n    background: \"teal\"\n  },\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    position: \"relative\",\n    top: \"25%\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});\n\nconst findSort = sortOrder => {\n  if (sortOrder[0] === \"p-Value\") {\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1;\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1;\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    };\n  } else {\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1;\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1;\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n    };\n  }\n};\n\nconst NetworkList = props => {\n  let hits = props.hits;\n\n  const openFirst = first => {\n    if (first != null) {\n      props.handleFetch(\n        first.networkUUID,\n        first.description,\n        first.nodes,\n        first.edges,\n        first.hitGenes\n      );\n    }\n  };\n\n  //Sort hits\n  useEffect(() => {\n    if (props.uiState.selectedSource === \"enrichment\") {\n      const sortFunction = findSort(props.uiState.sortOrder);\n      hits = hits.sort(sortFunction);\n    }\n    props.searchActions.setActualResults(hits);\n    openFirst(hits[0]);\n    props.networkActions.changeListIndex(1);\n  }, [props.uiState.sortOrder, props.uiState.selectedSource]);\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />;\n  }\n\n  let index = 1;\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index);\n  }\n\n  const selectedIndex = props.network.listIndex;\n\n  let enrichmentStyle;\n  if (props.uiState.selectedSource === \"enrichment\") {\n    enrichmentStyle = {\n      height: `calc(100% - 49px)`\n    };\n  } else {\n    enrichmentStyle = {}\n  }\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\" style={enrichmentStyle}>\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry =>\n              props.renderNetworkListItem(\n                props.search.queryList.length,\n                entry,\n                props.classes,\n                handleListItemClick,\n                selectedIndex,\n                index++\n              )\n            )}\n          </MenuList>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography\n            variant={\"subtitle1\"}\n            color={\"textSecondary\"}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(NetworkList);\n","import React from \"react\";\nimport \"./style.css\";\n\nimport Split from \"react-split\";\n\nimport NetworkView from \"./NetworkView\";\nimport NetworkList from \"./NetworkList\";\n\nimport { camelCaseToTitleCase } from \"../TableBrowser/camel-case-util\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ListItem } from \"@material-ui/core\";\n\nconst titleStyle = {\n  lineHeight: \"1.33\",\n  wordBreak: \"break-word\"\n};\n\nconst subtitleStyle = {\n  lineHeight: \"1\",\n  wordBreak: \"break-word\"\n}\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n    const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n    const geneList = props.search.queryList;\n    const sourceUUID = props.sourceUUID;\n    const id = props.search.results.jobId;\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes();\n    props.uiStateActions.setHighlights(true);\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    });\n    updateHistory(networkUUID);\n  };\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId;\n    const searchResults = props.search.searchResults;\n    const sourceName = props.uiState.selectedSource;\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log(\"** network changed:\", jobId, sourceName);\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`);\n    }\n  };\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true);\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    });\n  };\n\n  const renderNetworkListItem = (\n    querySize,\n    networkEntry,\n    classes,\n    handleListItemClick,\n    selectedIndex,\n    index\n  ) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      details\n    } = networkEntry;\n\n    const genes = (\n      <div display=\"inline\">\n        <Typography display=\"inline\" style={{ lineHeight: \"1.33\" }}>\n          <strong>{hitGenes ? hitGenes.length : \"?\"}</strong>{\" \"}\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          display=\"inline\"\n          color=\"textSecondary\"\n          style={{ lineHeight: \"1\" }}\n        >\n          genes\n        </Typography>\n      </div>\n    );\n\n    const icon = (\n      <ListItemIcon style={{ width: \"20px\" }}>\n        <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n      </ListItemIcon>\n    );\n\n    if (props.uiState.selectedSource === \"enrichment\") {\n      let pVal = details.PValue;\n      if (pVal !== undefined) {\n        if (pVal !== 0) {\n          pVal = pVal.toExponential(2);\n        }\n      }\n      const pv = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{pVal}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            pv\n          </Typography>\n        </div>\n      );\n\n      const title = (\n        <Typography style={titleStyle}>\n          {description.split(\":\").slice(1)}\n        </Typography>\n      );\n\n      const subtitle = (\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n          style={subtitleStyle}\n        >\n          Nodes: {nodes}, Edges: {edges}, Source:{\" \"}\n          {camelCaseToTitleCase(description.split(\":\")[0])}\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={{ tableLayout: \"fixed\", wordBreak: \"breakWord\" }}>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\">\n                  {icon}\n                </td>\n                <td width=\"90px\" align=\"left\" valign=\"bottom\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\">\n                  {pv}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    } else {\n      const node = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{nodes}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"nodes \"}\n          </Typography>\n        </div>\n      );\n\n      const edge = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{edges}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"edges\"}\n          </Typography>\n        </div>\n      );\n\n      const title = (\n        <React.Fragment>\n          <Typography color=\"textPrimary\" style={titleStyle}>\n            {description}\n          </Typography>\n        </React.Fragment>\n      );\n\n      const subtitle = (\n        <Typography variant=\"caption\" color=\"textSecondary\" style={subtitleStyle}>\n          Parent: {details.parent_network_nodes} nodes,{\" \"}\n          {details.parent_network_edges} edges\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={{ tableLayout: \"fixed\", wordBreak: \"break-word\" }}>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" width=\"50px\">\n                  {icon}\n                </td>\n                <td colSpan=\"2\" align=\"left\" valign=\"bottom\" width=\"150px\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\" width=\"75px\">\n                  {node}\n                </td>\n                <td align=\"left\" valign=\"baseline\" width=\"80px\">\n                  {edge}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    }\n  };\n\n  return (\n    <Split sizes={[40, 60]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList\n        renderNetworkListItem={renderNetworkListItem}\n        handleFetch={handleFetch}\n        hits={props.hits}\n        {...props}\n      />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  );\n};\n\n/*const MemoNdex = React.memo(Ndex, (oldProps, newProps) => {\n  \n})*/\n\nexport default Ndex;\n","import React from \"react\";\n\nimport Ndex from \"./Ndex\";\nimport LoadingPanel from \"../LoadingPanel\";\n\nimport { isEqual } from \"lodash\";\n\nconst TabContent = props => {\n  const results = props.results;\n\n  if (results === null || results === undefined ) {\n    return (\n      <LoadingPanel\n        title={\"Loading results\"}\n        message={<div style={{ color: \"black\" }}>Please wait...</div>}\n      />\n    );\n  } else {\n    return (\n      <Ndex hits={results.results} sourceUUID={results.sourceUUID} {...props} />\n    );\n  }\n};\n\nexport default TabContent;\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport HoverTab from './HoverTab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\n// Conversion table from tab ID to human-readable labels\nconst TAB_LABELS = {\n  enrichment: {\n    label: 'Gene Enrichment'\n  },\n  'interactome-ppi': {\n    label: 'Protein Interactions'\n  },\n  'interactome-association': {\n    label: 'Gene Association'\n  }\n}\n\nconst styles = theme => ({\n  tabs: {},\n  grow: {\n    flexGrow: 1\n  }\n})\n\nconst Results = props => {\n  const { classes, ...others } = props\n\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n    props.networkActions.changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const { sources } = props.source\n  if (sources === null || sources === undefined || sources.length === 0) {\n    return <Empty />\n  }\n\n  const searchResults = props.search.searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange} className={classes.tabs}>\n          {sources.map(source => (\n            <HoverTab key={source.uuid} label={TAB_LABELS[source.name].label} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { loadCSS } from \"fg-loadcss/src/loadCSS\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport classNames from \"classnames\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport MessageSnackbar from \"./MessageSnackbar\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"50vmin\",\n    padding: \"0.3em\",\n    background: \"#f1f1f1\",\n    marginLeft: \"1em\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n};\n\nconst ORIGINAL_GENE_TEXT = \"original-gene-text\";\n\nconst GeneTextBox = props => {\n  const { classes } = props;\n  const geneTextRef = useRef(null);\n\n  const [queryText, setQuery] = useState(props.search.queryGenes);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    loadCSS(\n      \"https://use.fontawesome.com/releases/v5.1.0/css/all.css\",\n      document.querySelector(\"#insertion-point-jss\")\n    );\n    return () => {};\n  }, []);\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT);\n    copyText.select();\n    document.execCommand(\"copy\");\n\n    // Show message\n    setOpen(true);\n  };\n\n  const handleSearch = evt => {\n    const genes = queryText;\n    const sources = props.source.sources;\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return;\n    }\n\n    const sourceNames = sources.map(source => source.name);\n\n    const geneListString = genes.replace(\",\", \" \");\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/);\n\n    props.searchActions.clearAll();\n    props.uiStateActions.setSelectedSource(\"enrichment\")\n    props.history.push(\"/\");\n    props.searchActions.setQuery(genes);\n    props.searchActions.searchStarted({ geneList, sourceNames });\n  };\n\n  const handleChange = evt => {\n    const value = evt.target.value;\n    setQuery(value);\n  };\n\n  const handleClear = evt => {\n    setQuery(\"\");\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch(event);\n    }\n  };\n\n  return (\n    <div>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={\"Genes are copied to clipboard!\"}\n        autoHideDuration={4000}\n        horizontal={\"left\"}\n        vertical={\"bottom\"}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, \"far fa-clipboard\")} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(GeneTextBox);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from \"@material-ui/core/Button\";\n\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo-mono-dark.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono-dark.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo-mono-dark.svg'\nimport wpLogo from '../../assets/images/wp-logo-mono-dark.svg'\nimport idekerLogo from '../../assets/images/ideker-logo-mono-dark.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    paddingLeft: '1em',\n    paddingRight: '1em'\n  },\n  noWrap: {\n    display: \"inline-block\",\n    whiteSpace: \"nowrap\"\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '1em',\n  textTransform: 'none'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.uiStateActions.setSelectedSource(\"enrichment\")\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n<div className={classes.noWrap}>\n        <Toolbar disableGutters={!open}>\n          <Tooltip title=\"Search by Pathway Enrichment / Protein-Protein Interactions / Gene Association\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Button style={titleStyle} onClick={this.handleHomeButton}>\n              <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                NDEx Integrated Query\n              </Typography>\n              </Button>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <div className={classes.textBox}>\n              <GeneTextBox {...others} />\n             </div>\n          )}\n\n          <div className={classes.grow} />\n          \n          <div>\n            {/*}\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          */}\n            <Tooltip title=\"Help\" placement=\"bottom\" style={{paddingRight: \"1em\"}}>\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={() => openLink(HELP_URL)}\n              >\n                <HelpIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n{/*}\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NDEx\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NDEX_URL)}\n              >\n                <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n          </Tooltip>*/}\n          </div>\n        </Toolbar>\n        </div>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\nconst IL_URL = 'http://idekerlab.ucsd.edu/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, { withTheme: true})(TitleBar))","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" alt='list item icon'/>\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from \"react\";\nimport \"./style.css\";\n\nimport TitleBar from \"./TitleBar\";\nimport SettingsPanel from \"../SettingsPanel\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport classNames from \"classnames\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vmin\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    padding: \"0 0.5em\",\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search);\n    const cyrestport = urlParams.get(\"cyrestport\");\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport);\n    }\n    return () => {};\n  }, []);\n  const { classes, ...others } = props;\n\n  const open = props.uiState.isSettingsOpen;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(AppShell);\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const isFetching = props.search.isFetching\n  const searchResult = props.search.searchResult\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props} >\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props} >\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props}/>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default (HomePanel)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel {...props} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport searchLogo from \"../../assets/images/search-logo.svg\";\n\nimport * as examples from \"./example-genes\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst EXAMPLES = examples.default.examples;\nconst feedbackURL = \"https://home.ndexbio.org/contact-us/\";\n\nconst styles = {\n  root: {\n    padding: \"0.1em 0.25em\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n};\n\nconst SearchTextBox = props => {\n  const { classes } = props;\n  const searchButtonEl = useRef();\n\n  const [state, setState] = useState({ anchorEl: null, query: \"\" });\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId;\n      props.history.push(`/${jobId}`);\n    }\n  }, []);\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: { main: purple[500] }, // Purple and green play nicely together.\n      secondary: { main: \"#11cb5f\" } // This is just green.A700 as hex.\n    }\n  });\n\n  const open = Boolean(state.anchorEl);\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null });\n  };\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    });\n  };\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    });\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      // TODO: add validator here\n      handleSearch();\n    }\n  };\n\n  const handleClear = () => {\n    setState({ ...state, query: \"\" });\n  };\n\n  const handleSearch = event => {\n    const genes = state.query;\n    const sources = props.source.sources;\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return;\n    }\n\n    const sourceNames = sources.map(source => source.name);\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/);\n    props.searchActions.setQuery(genes);\n    props.searchActions.searchStarted({ geneList, sourceNames });\n  };\n\n  return (\n    <React.Fragment>\n      <Paper className={\"search-text-box\"} elevation={1}>\n        {/*<div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </div>\n        <Divider className={classes.divider} />*/}\n        <IconButton\n          color={\"default\"}\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleClear}\n        >\n          <DeleteIcon />\n        </IconButton>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Enter gene list (or click an example below)\"\n          onChange={handleChange(\"query\")}\n          onKeyDown={handleKeyPress}\n          value={state.query}\n        />\n        <IconButton\n          ref={searchButtonEl}\n          className={classes.iconButton}\n          aria-label=\"Search\"\n          onClick={handleSearch}\n        >\n          <img\n            alt=\"Search icon\"\n            src={searchLogo}\n            style={{ height: \"1.25em\" }}\n          />\n        </IconButton>\n      </Paper>\n      <Typography\n        variant=\"caption\"\n        style={{ paddingTop: \"0.25em\" }}\n        color=\"textSecondary\"\n      >\n        <em>Try this pre-release version, send us </em>\n        <Link href={feedbackURL} target=\"_blank\">\n          <font color=\"#00A1DE\">\n            <em>feedback</em>\n          </font>\n        </Link>\n      </Typography>\n      <Typography\n        align=\"left\"\n        style={{ paddingLeft: \"7.25em\", paddingTop: \"1em\" }}\n      >\n        Query gene set examples:\n      </Typography>\n      <Tooltip title=\"Hypoxia description\" open={false}>\n        <Button onClick={() => handleExample(0)}>\n          <font color=\"#00A1DE\">Hypoxia</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Adenyl cyclase description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(1)}>\n          <font color=\"#00A1DE\">Adenyl Cyclase</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"D4DGI description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(2)}>\n          <font color=\"#00A1DE\">D4DGI</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Angiotensin description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(3)}>\n          <font color=\"#00A1DE\">Angiotensin</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Estrogen description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(4)}>\n          <font color=\"#00A1DE\">Estrogen</font>\n        </Button>\n      </Tooltip>\n    </React.Fragment>\n  );\n};\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SearchTextBox);\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from \"react\";\nimport \"./style.css\";\n\nimport SearchTextBox from \"./SearchTextBox\";\nimport Footer from \"./Footer\";\nimport LoadingPanel from \"../LoadingPanel\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ndex from \"../../assets/images/ndex-logo.svg\";\nimport queryString from \"query-string\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search);\n    const genes = params.genes;\n\n    if (genes !== undefined) {\n      const geneList = genes.split(\",\");\n      props.searchActions.setQuery(genes);\n      props.searchActions.searchStarted({ geneList });\n    }\n\n    props.sourceActions.findSourceStarted();\n\n    return () => {};\n  }, []);\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={\"Searching Remote Database\"}\n        message={<div style={{ color: \"black\" }}>Please wait...</div>}\n      />\n    );\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <div\n          style={{\n            position: \"relative\",\n            paddingTop: \"0.1em\",\n            paddingBottom: \"2em\",\n\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginBottom: \"-0.5em\"\n          }}\n        >\n          <Typography align=\"center\" color=\"textSecondary\">\n            One search finds pathways, queries protein interaction networks,\n          </Typography>\n          <Typography align=\"center\" color=\"textSecondary\">\n            and discovers disease, drug, and tissue associations.\n          </Typography>\n          <Typography align=\"center\" color=\"textSecondary\">\n            Powered by NDEx and integrated with Cytoscape.\n          </Typography>\n        </div>\n        <div align=\"center\" className=\"inlineFlex\">\n          <img\n            className=\"start-logo-main\"\n            src={ndex}\n            alt=\"logo\"\n            style={{ height: \"8.75em\", paddingRight: \"1em\" }}\n          />\n          <div className=\"flex\">\n            <Typography\n              variant=\"h3\"\n              align=\"left\"\n              style={{\n                whiteSpace: \"noWrap\",\n                position: \"relative\",\n                top: \"0.1em\"\n              }}\n            >\n              NDEx Integrated Query\n            </Typography>\n            <Typography\n              align=\"left\"\n              style={{ position: \"relative\", left: \"0.25em\", top: \"-0.1em\" }}\n            >\n              v0.2 Pre-Release.\n            </Typography>\n          </div>\n        </div>\n\n        <div align=\"center\" style={{ paddingBottom: \"3em\", paddingTop: \"1em\" }}>\n          <SearchTextBox {...props} />\n        </div>\n      </div>\n      <div className=\"height\">\n        <div className=\"flex\">\n          <Typography variant=\"caption\" align=\"center\">\n            NDEx Integrated Query uses selected pathway and interactome networks\n            in NDEx to power gene set analysis.\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\">\n            The networks come from many different sources and new networks will\n            be continously added.\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\">\n            Do you have a pathway or an interaction network that you would like\n            to include in these queries? Click{\" \"}\n            <Link>\n              <font color=\"#00A1DE\">\n                <em>here</em>\n              </font>\n            </Link>{\" \"}\n            to find out how.\n          </Typography>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default StartPanel;\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell \n    {...props}\n  >\n    <StartPanel\n      {...props}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      {...props}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from \"redux-actions\";\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setSortOrder\n} from \"../actions/uiState\";\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: \"enrichment\",\n  sortOrder: [\"p-Value\", \"Overlap\"]\n};\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log(\"OPEN = \", payload.payload);\n      return { ...state, isSettingsOpen: payload.payload };\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload };\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload };\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload };\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      };\n    }\n  },\n  DEF_STATE\n);\n\nexport default uiState;\n","import { handleActions } from \"redux-actions\";\nimport { CxToJs, CyNetworkUtils } from \"cytoscape-cx2js\";\nimport { MAX_NETWORK_SIZE } from \"../components/Results/CytoscapeViewer\";\nimport * as vs from \"../assets/data/styles.json\";\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  fitNetworkView\n} from \"../actions/network\";\n\nconst defaultState = {\n  isFetching: false,\n  uuid: \"\",\n  jobId: \"\",\n  sourceId: \"\",\n  networkName: \"\",\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0,\n  fit: false\n};\n\nconst utils = new CyNetworkUtils();\nconst cx2js = new CxToJs(utils);\n\nconst PRESET_VS = vs.default[0].style;\n\n// Standard selection\nPRESET_VS.push({\n  selector: \"node:selected\",\n  css: {\n    \"background-color\": \"red\",\n    color: \"#FFFFFF\",\n    \"background-opacity\": 1,\n    \"border-width\": 0,\n    width: 100,\n    height: 100\n  }\n});\n\n// For class-based style update\nconst fadedNode = {\n  selector: \"node.faded\",\n  css: {\n    opacity: 0.9\n  }\n};\n\nconst fadedEdge = {\n  selector: \"edge.faded\",\n  css: {\n    opacity: 0.9\n  }\n};\n\nconst highlight = {\n  selector: \".highlight\",\n  css: {\n    opacity: 1.0,\n    \"overlay-color\": \"#C51162\",\n    \"overlay-padding\": 12,\n    \"overlay-opacity\": 0.5\n  }\n};\n\nconst activeObject = {\n  selector: \"node:active\",\n  css: {\n    \"overlay-color\": \"#FFFF66\",\n    \"overlay-padding\": 25,\n    \"overlay-opacity\": 0.3\n  }\n};\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log(\"Query start: genes = \", payload);\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: \"\",\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0\n      };\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx;\n      let network = {};\n      let backgroundColor = {};\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes);\n          network = cyjsNetwork;\n        } catch (err) {\n          // This is an error state\n          console.warn(\"Could not convert given CX to CYJS:\", err);\n          throw new Error(\"Could not convert given CX to CYJS:\", err);\n        }\n\n        backgroundColor = getBackGround(originalCX);\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      };\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      };\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: \"\",\n        networkName: \"\",\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      };\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      };\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: []\n      };\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      };\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: []\n      };\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      };\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      };\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      };\n    },\n    [fitNetworkView]: (state, payload) => {\n      return {\n        ...state,\n        fit: payload.payload\n      };\n    }\n  },\n  defaultState\n);\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx);\n  const attributeNameMap = {};\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap);\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap);\n\n  const newStyle = styleUpdater(style);\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes);\n  const elements = [...updatedNodes, ...elementsObj.edges];\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  };\n};\n\nconst VS_TAG = \"cyVisualProperties\";\nconst getBackGround = cx => {\n  let color = \"#FFFFFF\";\n\n  const vps = cx.filter(entry => entry[VS_TAG]);\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0];\n    const allVp = vp[VS_TAG];\n    const networkVp = allVp.filter(p => p[\"properties_of\"] === \"network\");\n    return networkVp[0].properties[\"NETWORK_BACKGROUND_PAINT\"];\n  } else {\n    return color;\n  }\n};\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length;\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()));\n\n  while (len--) {\n    const node = nodes[len];\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null;\n    if (upperQuery.has(name)) {\n      node.data[\"query\"] = \"true\";\n    }\n  }\n  return nodes;\n};\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0];\n  if (node.position === undefined) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst styleUpdater = style => {\n  style.push(fadedNode);\n  style.push(fadedEdge);\n  style.push(highlight);\n  style.push(activeObject);\n  return style;\n};\n\nexport default network;\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst cyrest = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default cyrest\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport * as api from \"../api/ndex\";\nimport * as myGeneApi from \"../api/mygene\";\nimport * as cySearchApi from \"../api/search\";\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from \"../actions/search\";\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from \"../actions/source\";\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from \"../actions/network\";\n\nconst API_CALL_INTERVAL = 1000;\n\nconst SELECTED_SOURCES = [\"interactome-ppi\"];\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch);\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult);\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork);\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource);\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList;\n  let sourceNames = action.payload.sourceNames;\n\n  // If source names are missing, find them:\n  if (\n    sourceNames === undefined ||\n    sourceNames === null ||\n    sourceNames.length === 0\n  ) {\n    const sources = yield call(cySearchApi.getSource, null);\n    const sourceJson = yield call([sources, \"json\"]);\n    const sourceList = sourceJson.results;\n    sourceNames = sourceList.map(source => source.name);\n    sourceNames = sourceNames.filter(name => name !== \"keyword\");\n  }\n  const geneListString = geneList.join();\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ]);\n\n    const geneJson = yield call([geneRes, \"json\"]);\n    const resultLocation = searchRes.headers.get(\"Location\");\n    const parts = resultLocation.split(\"/\");\n    const jobId = parts[parts.length - 1];\n    const filtered = filterGenes(geneJson);\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    });\n  } catch (e) {\n    console.warn(\"NDEx search error:\", e);\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: \"NDEx network search error\",\n        query: geneListString,\n        error: e.message\n      }\n    });\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId;\n\n  const currentResult = {};\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId);\n      const statusJson = yield call([statusRes, \"json\"]);\n\n      const { progress } = statusJson;\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId);\n        const resultJson = yield call([resultRes, \"json\"]);\n        //\n\n        console.log(\"One\")\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        });\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        });\n        return;\n      }\n\n      const status = statusJson.sources;\n\n      let idx = status.length;\n      while (idx--) {\n        const src = status[idx];\n        const { progress, sourceName } = src;\n        if (progress === 100) {\n          const resultRes = yield call(\n            cySearchApi.getResult,\n            jobId,\n            sourceName\n          );\n          const json = yield call([resultRes, \"json\"]);\n\n          currentResult[sourceName] = json;\n\n          console.log(\"Two\")\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          });\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL);\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId);\n    const resultJson = yield call([resultRes, \"json\"]);\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    });\n  } catch (e) {\n    console.warn(\"NDEx search error:\", e);\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: \"Failed to fetch search result\",\n        jobId,\n        error: e.message\n      }\n    });\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload;\n    const id = params.id;\n    const sourceUUID = params.sourceUUID;\n    const networkUUID = params.networkUUID;\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID);\n    const json = yield call([cx, \"json\"]);\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json });\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error });\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null);\n    const json = yield call([sources, \"json\"]);\n\n    const orderedSources = json.results;\n    /*\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry[\"name\"])\n    );\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl[\"name\"]) -\n        SELECTED_SOURCES.indexOf(secondEl[\"name\"])\n    );\n*/\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources });\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error });\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map();\n  const notFound = [];\n\n  let len = resultList.length;\n  while (len--) {\n    const entry = resultList[len];\n    if (entry.notfound) {\n      notFound.push(entry.query);\n    } else {\n      uniqueGeneMap.set(entry.query, entry);\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  };\n};\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}