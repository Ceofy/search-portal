{"version":3,"sources":["assets/images/cytoscape-logo.svg","assets/images/ndex-logo-mono.svg","assets/images/cytoscape-logo-mono.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/NetworkProperties2.jsx","components/Results/TableBrowser/index.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","api/cyrest.js","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","actions/network.js","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","handleClick","geneSymbol","props","searchActions","setSelectedGenes","getChip","value","isValid","classes","hitSets","color","found","has","symbol","className","chip","avatar","label","onClick","variant","key","withStyles","theme","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","values","push","matchedSorted","sort","reverse","unmatchedSorted","sorted","event","console","log","target","handleClear","map","InputPanel","Empty","Warning","cyInstance","PRESET_LAYOUT","name","padding","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","useEffect","undefined","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","uiStateActions","setHighlights","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","cyjs","networkAreaStyle","width","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","filter","style","stylesheet","cy","LoadingPanel","title","message","size","NetworkViewer","isFetching","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","setState","getListItem","geneEntry","description","summary","alignItems","_id","primary","secondary","Fragment","component","inline","linkIcon","aria-label","href","placement","getListChildren","entry","pathway","pathwaySources","Object","keys","in","getPathwayStateTag","timeout","unmountOnExit","disablePadding","dbName","pathways","Array","isArray","pwEntry","button","nested","inset","getNotFound","notFound","getUnmatchedListItem","toUpperCase","get","React","Component","marginLeft","marginTop","paddingLeft","getAttrMap","attrs","listAttrMap","forEach","attr","n","v","findAttributes","originalCX","attrType","len","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","NodeProperties","listAttr","nodeId","d","startsWith","po","toString","getListNodeAttr","join","displayKeys","EdgeProperties","makeStyles","container","overflow","list","subtitle","index","useStyles","boxSizing","paddingTop","ExpansionPanel","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","marginRight","MuiExpansionPanelSummary","extractContent","modifiedText","stripScripts","extractTitle","formatPrimary","endsWith","parse","newTab","formatContext","splitResults","split","item","NetworkProperties2","networkAttr","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","element","displayed","rightDisplay","currentEntry","secondaryString","primaryString","leftDisplay","sizes","gutterSize","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","MessageSnackbar","useState","handleClose","reason","setOpen","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","action","buttonIcon","minWidth","cyrestActions","startCyRestPolling","stopCyRestPolling","cyrest","handleImportNetwork","disabled","uuid","available","isLoadingNetwork","lastResponse","setMessage","cycleId","type","currentId","setTimeout","disableFocusListener","alt","src","logoDisabled","logo","paddingRight","maxWidth","highlight","setHighlight","evt","ndexSaveActions","setNDExModalOpen","NDExSave","saveToNDEx","cx","token","networkUrl","ndexSave","profile","authorization","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","err","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","clientId","render","renderProps","buttonText","CredentialsSignOn","handleCredentialsSignOn","button_cls","onSubmit","placeholder","required","autoComplete","NDExSignIn","handleError","onLoginSuccess","xs","NDExSignInModal","onLogout","setProfile","preventDefault","credentialsSignOn","handleOnSuccess","resp","googleSignOn","setErrorMessage","others","ndexModal","aria-labelledby","image","errorMessage","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","paddingBottom","fontSize","toolbar","grow","flexGrow","menuButton","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","buttons","border","openIcon","networkName","noWrap","DEFAULT_RATIO","NetworkView","resized","setResize","direction","onDragEnd","ranges","sortBy","prop","setValues","select","onChange","option","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","query","status","cyRESTPort","statusUrl","CYREST_BASE_URL","fetch","method","importNetwork","payload","importNetworkUrl","headers","Accept","body","Ndex","queryList","sourceUUID","jobId","updateHistory","networkUUID","searchResults","sourceName","selectedSource","history","querySize","networkEntry","edges","imageURL","rank","pVal","PValue","descriptionText","descriptionText2","pValText","toExponential","val","networkFetchStarted","handleFetch","listTitle","importNetworkStarted","sourceId","TabContent","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","newValue","setSelectedSource","selectedSourceName","networkClear","input","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","setQuery","loadCSS","document","querySelector","handleSearch","sourceNames","clearAll","searchStarted","elevation","getElementById","execCommand","classNames","icon","onKeyDown","ref","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","createAction","networkFetchSucceeded","networkFetchFailed","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","appBar","appBarShift","disableGutters","hide","aria-haspopup","openLink","HELP_URL","NDEX_URL","ndexLogo","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","drawer","anchor","paper","drawerPaper","sourceEntry","version","text","LINKS","link","github","flexShrink","drawerHeader","mixins","contentShift","cyrestport","URLSearchParams","location","setPort","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","searchResult","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","clearQuery","searchSucceeded","searchFailed","setSearchResult","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","SET_SELECTED_SOURCE","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","SET_NDEX_MODAL_OPEN","SET_PROFILE","CREDENTIALS_SIGN_ON","GOOGLE_SIGN_ON","SAVE_TO_NDEX","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","pathname","ReactGA","set","page","pageview","EXAMPLES","examples","searchButtonEl","anchorEl","Boolean","currentTarget","transformOrigin","example","CY_URL","UCSD_URL","Footer","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","ndex","TopPage","Top","App","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","singleResult","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","fadedNode","opacity","fadedEdge","activeObject","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","p","upperQuery","gene","isFetchingSource","port","isFetchingAvailable","isPollingAvailable","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","takeLatest","call","cySearchApi","sourceJson","geneListString","all","myGeneApi","geneRes","searchRes","geneJson","resultLocation","parts","filtered","filterGenes","put","uniqueGeneMap","sleep","ms","Promise","resolve","statusRes","statusJson","progress","resultRes","resultJson","json","params","api","reducedSources","includes","orderedSources","firstEl","secondEl","indexOf","Map","notfound","cyrestSaga","watchImportNetwork","getCyRESTPort","addNumberVerification","aspect","patchedCX","numberVerification","longNumber","concat","responseJson","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","take","race","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","user","basicAuthSignIn","accountName","pwd","password","auth","btoa","firstName","responseText","networkURL","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","next","run","cyRestSaga","cyRestStatusSaga","basename","process","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3191358e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort().reverse()\n  const unmatchedSorted = unmatched.sort().reverse()\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>{found ? <CheckIcon /> : '-'}</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>Query Genes</div>\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined || targets.length === 0) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    } else {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 10\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport CheckIcon from '@material-ui/icons/Check'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","export const camelCaseToTitleCase = (camelCaseString) => {\n    if (camelCaseString.slice(0, 4) === \"http\" ||\n        camelCaseString.slice(0, 5) === 'Prov:') {\n        return camelCaseString\n    }\n    let result = camelCaseString\n        .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")           \n        .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")           \n        .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")          \n        .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")     \n        .replace(/([a-z]+)([A-Z0-9]+)/g, \"$1 $2\")    \n        .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n        .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\") \n        .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")      \n        .trim();\n    result = result.charAt(0).toUpperCase() + result.slice(1)\n    result = result.replace('Wiki Pathways', 'WikiPathways')\n        .replace('Wikipathways', 'WikiPathways')\n    return result\n  }","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\nimport { getListNodeAttr } from './attribute-util'\nimport { camelCaseToTitleCase } from './camel-case-util.js'\n\n\nconst NodeProperties = props => {\n  const { node, originalCX } = props\n  const listAttr = getListNodeAttr(originalCX, node.id)\n\n  const keys = Object.keys(node)\n\n  \n\n  keys.forEach(key => {\n    if (listAttr[key] !== undefined) {\n      node[key] = listAttr[key].join(', ')\n    }\n  })\n\n  const potentialDisplayKeys = [\"Type\", 'HGNC', 'Ensembl']\n  const displayKeys = []\n  potentialDisplayKeys.forEach(key => {\n    if (node[key] != null && node[key] != \"\") {\n      displayKeys.push(key)\n    }\n  })\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {displayKeys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={camelCaseToTitleCase(node[key])} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { getListNetworkAttr, findAttributes } from './attribute-util'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport { camelCaseToTitleCase } from './camel-case-util';\nimport Split from 'react-split'\nimport List from '@material-ui/core/List'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n  const classes = useStyles()\n  \n\n  // Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const primaries = []\n  const secondaries = []\n  for (var i = 0; i < networkAttr.length; i++) {\n    let prim = formatValue(networkAttr[i])\n    let sec = formatName(networkAttr[i])\n\n    //If property name starts with __\n    if (sec.startsWith('__')) {\n      continue\n    }\n    //If property value is null, undefined, empty string\n    if (prim == null || prim === '') {\n      //If missing property is name\n      if (networkAttr[i].n === 'name') {\n        prim = 'Untitled'\n        sec = 'Name'\n      } else {\n        continue\n      }\n    }\n\n    prim = camelCaseToTitleCase(prim)\n    sec = camelCaseToTitleCase(sec)\n\n    //Linkify and parse html\n    prim = parse(prim)\n    prim = <Linkify key={'link' + i}>{prim}</Linkify>\n\n    primaries.push(prim)\n    secondaries.push(sec)\n  }\n\n  //How to display it\n  const order = [\n    'Name',\n    'Organism',\n    'Cell',\n    'Disease',\n    'Description',\n    'Version',\n    'Author',\n    'Reviewers',\n    'Network Type',\n    'Labels',\n    'Rights Holder',\n    'Wikipathways ID',\n    'Wikipathways Version',\n    'Wikipathways IRI',\n    'Rights',\n    '@context'\n  ]\n\n  const visited = []\n  for (var i = 0; i < primaries.length; i++) {\n    visited.push(false)\n  }\n  const sortedSec = []\n  const sortedPrim = []\n  for (let i = 0; i < order.length; i++) {\n    let ind = secondaries.indexOf(order[i])\n    if (ind >= 0) {\n      sortedSec.push(secondaries[ind])\n      sortedPrim.push(primaries[ind])\n      visited[ind] = true\n    }\n  }\n  for (let i = 0; i < primaries.length; i++) {\n    if (!visited[i]) {\n      sortedSec.push(secondaries[i])\n      sortedPrim.push(primaries[i])\n    }\n  }\n\n  const display = []\n  for (let i = 0; i < sortedPrim.length; i++) {\n    display.push(\n      <ListItem key={i}>\n        <ListItemText \n          inset \n          secondary={sortedSec[i]}\n          primary={sortedPrim[i]} \n        />\n      </ListItem>\n    )\n  }\n\n  return (//<React.Fragment>{display}</React.Fragment>\n    \n    <Split sizes={[70, 30]} gutterSize={7} className=\"ndex-base\">\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <React.Fragment>{display}</React.Fragment>\n        </List>\n      </div>\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <React.Fragment>{display}</React.Fragment>\n        </List>\n      </div>\n    </Split>\n  )\n  \n  \n}\n\nconst formatValue = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return modifiedText.trim()\n}\n\nconst formatName = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return modifiedText\n}\n\nexport default NetworkProperties\n","import React from 'react'\nimport Split from 'react-split'\n\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '16px',\n    paddingTop: '12px'\n  }\n}))\n\n//Expansion panel styling\nconst ExpansionPanel = withStyles({\n  root: {\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: '12px',\n    minHeight: 10,\n    '&$expanded': {\n      minHeight: 10,\n    },\n  },\n  content: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '-9px',\n    marginRight: 0,\n    '&$expanded': {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: '-9px',\n      marginRight: 0,\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst NetworkProperties2 = props => {\n  index = 0\n  const { originalCX } = props\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = [\n    'Name',\n    'Description',\n    'Reference',\n    '@context'\n  ]\n  const properties = [\n    'Organism',\n    'Cell',\n    'Disease'\n  ]\n  const contributors = [\n    'Author',\n    'Reviewers',\n    'Rights Holder',\n    'Rights',\n  ]\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const networkInformation = [\n    'Version',\n    'Network Type',\n    'Labels'\n  ]\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ]\n  \n\n  //Filter properties\n  const attributes = []\n  let content;\n  let title;\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      attributes.push({\n        title: camelCaseToTitleCase(title),\n        content: content,\n        displayed: false\n      })\n    } else if (title === 'name') {\n      attributes.push({\n        title: 'Name',\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null){\n        primaryString += \n          currentEntry.title + \n          \": \" + \n          currentEntry.content + \n          \"<br>\"\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch(list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n      }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString != '') {\n      rightDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\">\n                  {secondaryString}\n                </Typography>\n                <Typography variant=\"body1\">\n                  {primaryString}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <React.Fragment>\n            <div className={classes.padding}>\n            <Typography component=\"span\" variant=\"caption\">\n              @context\n            </Typography>\n            </div>\n            <ExpansionPanel>\n              <ExpansionPanelSummary>\n                <Typography component=\"span\" variant=\"body1\">\n                  <font color=\"blue\">\n                    Click to view the namespaces associated with this network\n                  </font>\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography>\n                  {primaryString}\n                </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography component=\"span\" variant=\"caption\">\n                    {secondaryString}\n                  </Typography>\n                  <Typography component=\"span\" variant=\"body1\">\n                  {primaryString}\n                  </Typography>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography component=\"span\" variant=\"caption\">\n                  {secondaryString}\n                </Typography>\n                <Typography component=\"span\" variant=\"body1\">\n                  {primaryString}\n                </Typography>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n\n      <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n        <div className={'network-info-panel'}>\n          <List className={classes.list}>\n            <React.Fragment>\n              {leftDisplay}\n            </React.Fragment>\n          </List>\n        </div>\n        <div className={'network-info-panel'}>\n          <List component=\"nav\" className={classes.list}>\n            <React.Fragment>\n              {rightDisplay}\n            </React.Fragment>\n          </List>\n        </div>\n      </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  console.log(entry)\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return <Linkify key={'link' + index++} newTab={true}>{modifiedText}</Linkify>\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  let splitResults\n  let result = '<table>'\n  elements.forEach(item => {\n    splitResults = item.split(\"\\\"\")\n    result += \n      '<tr><td>' +\n      splitResults[1] +\n      '</td><td>' +\n      splitResults [3] +\n      '</td></tr>'    \n  })\n  result += '</table>'\n  return formatPrimary(result)\n}\n\nconst stripScripts = entry => {\n  return entry.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}\n\nexport default NetworkProperties2\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\nimport NetworkProperties2 from './NetworkProperties2'\nimport Split from 'react-split'\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={'table-browser'}>\n        <NetworkProperties2 originalCX={originalCX}/>\n      </div>\n    )\n  }\n\n  return (\n    <div className={\"table-browser\"}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} originalCX={originalCX} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React, {useState} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const [isOpen, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    props.setOpen(false)\n  }\n  \n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling()\n    return () => {\n      props.cyrestActions.stopCyRestPolling()\n    }\n  }, [])\n\n  const { classes, cyrest, handleImportNetwork } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) || \n    !cyrest.available\n\n  const handleClick = () => {\n    handleImportNetwork()\n  }\n\n  //Snackbar\n  const { isLoadingNetwork, lastResponse } = cyrest\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || \n    state === 'closeLoading') && \n    lastResponse != null\n    ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <Button\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </Button>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={'right'}\n        vertical={'bottom'}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)","import React, { useState } from 'react'\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    paddingRight: '0.2em'\n  },\n  button: {\n    height: '3em',\n    maxWidth: '13em',\n    minWidth: '13em',\n    marginRight: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n\n  const [highlight, setHighlight] = useState(true)\n\n  const handleChange = evt => {\n    setHighlight(!highlight)\n    props.uiStateActions.setHighlights(!highlight)\n  }\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"outlined\"\n      color={highlight ? 'secondary' : 'default'}\n      onClick={handleChange}\n    >\n      <HighlightIcon\n        className={classes.buttonIcon}\n        color={highlight ? 'secondary' : 'disabled'}\n      />\n      Highlight Genes\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(Highlighter)\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginRight: '0.5em'\n  }\n})\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInNDExButton)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default withStyles(styles)(NDExSave)\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nconst styles = theme => ({})\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const { ndexSave } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...others} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NDExSignInModal)\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes, network } = props\n\n  const disabled = !(network.uuid && network.uuid.length > 0)\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          color={'default'}\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default withStyles(styles)(OpenOriginalNetworkButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\n\nimport Highlighter from './Highlighter'\nimport { Tooltip } from '@material-ui/core'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <NDExSignInModal {...others}>\n        <NDExSave {...others} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...others} />\n      <OpenInCytoscapeButton {...others} />\n      <OpenOriginalNetworkButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser\n          resized={resized} \n          {...props} \n        />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network, search } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const query = search.results.genes\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(query.size, entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport { ListItem } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Paper from '@material-ui/core/Paper'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    // console.log('Entry:', networkEntry)\n\n    const pVal = details.PValue\n    let descriptionText =\n      'N: ' +\n      nodes +\n      ', E: ' +\n      edges +\n      ',  Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let descriptionText2 = ''\n\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(5)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      descriptionText2 = 'P-value = ' + pValText\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography component=\"span\" variant=\"caption\">\n                {'Rank ' + (rank+1)}\n              </Typography>\n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant={'caption'}>\n                  {descriptionText}\n                </Typography>\n              </Tooltip>\n              <Typography component=\"span\" variant={'caption'}>\n                {descriptionText2}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\nimport Ndex from './Ndex'\n\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const { results } = props\n\n  if (results === null || results === undefined) {\n    return <LoadingPanel title={'Loading results'} message={'Please wait...'} />\n  } else {\n    const { sourceUUID } = results\n    return <Ndex hits={results.results} sourceUUID={sourceUUID} {...props} />\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, idx)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  const { classes, ...others } = props\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const { searchResults } = props.search\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name === \"enrichment\" ? \"Gene Enrichment\" : \n                                          source.name === \"interactome\" ? \"Gene Neighborhood\" : source.name} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.setQuery(geneList)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar \n        open={open} \n        setOpen={setOpen}\n        message={'Genes are copied to clipboard!'}\n        autoHideDuration={4000}\n        horizontal={'left'}\n        vertical={'bottom'}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo-mono.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport { networkClear } from \"../../actions/network\";\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  ndexLogo: {\n    height: '1em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n\n\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={this.handleHomeButton}\n            >\n              <HomeIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              color=\"default\"\n              aria-label=\"Home\"\n              onClick={() => openLink(NDEX_URL)}\n            >\n              <img alt=\"NDEx logo\" src={logo} className={classes.ndexLogo} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const { isFetching, searchResult } = props.search\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n  \n    const sourceNames = sources.map(source => source.name)\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/)\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n    \n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(/,/g, ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: ''\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 5000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}