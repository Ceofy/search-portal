{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/search-logo.svg","assets/images/ucsd-logo.svg","assets/images/ndex-logo-mono-dark.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/HoverTab.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/LayoutSettings.js","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/ExpandPanel.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_ORDER","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","FIT_NETWORK_VIEW","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","fitNetworkView","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","padding","borderRadius","height","borderWidth","backgroundColor","selectedButtonStyle","selectedChipStyle","margin","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","props","hitSets","color","found","has","symbol","Chip","avatar","Avatar","variant","key","selected","style","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","selectedGenes","searchActions","className","geneList","genes","matched","unmatched","values","push","matchedSorted","sort","reverse","unmatchedSorted","sorted","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","InputPanel","HoverTab","theme","root","opacity","Tab","Empty","Typography","message","MessageSnackbar","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","id","action","IconButton","aria-label","onClick","logo","button","display","marginLeft","marginRight","position","top","outer","justifyContent","alignItems","inner","marginTop","width","classes","useState","state","setState","setMessage","uuid","length","cyrest","available","isLoadingNetwork","lastResponse","cycleId","console","log","type","currentId","setTimeout","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","align","PRESET_LAYOUT","name","animate","CONCENTRIC_LAYOUT","minNodeSpacing","COSE_LAYOUT","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","fit","Cytoscape","use","CyCanvas","cyInstance","annotationRenderer","CxToCyCanvas","CxToJs","utils","CyNetworkUtils","CytoscapeViewer","highlights","uiState","originalCX","undefined","useMemo","networkAttr","filter","entry","networkAttributes","firstEntry","annotationEntry","attr","n","nice","rawCXtoNiceCX","drawAnnotationsFromNiceCX","useEffect","on","networkActions","e","warn","selectEdge","edges","$","forEach","element","data","selectNode","nodes","removeClass","this","source","target","addClass","elements","targets","zoom","center","eles","duration","nodeCount","edgeCount","cyjs","isLayoutAvailable","isLayout","layout","resize","stop","background","stylesheet","cy","LoadingPanel","CircularProgress","size","NetworkViewer","isFetching","actualResults","resized","findAttributes","attrType","len","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","toString","ExpandPanel","React","defaultExpanded","divider","borderTop","Math","random","ListItemText","primary","summary","Collapse","in","timeout","unmountOnExit","component","disablePadding","details","index","useStyles","makeStyles","container","overflow","boxSizing","paddingLeft","paddingTop","lessPadding","noPadding","paddingBottom","extractContent","modifiedText","v","Array","isArray","join","extractTitle","formatPrimary","startsWith","endsWith","parse","formatContext","splitResults","split","item","NetworkProperties","content","leftDisplayItems","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","displayed","selectedSource","newTitle","splice","networkInfo","listIndex","rightDisplay","list","currentEntry","secondaryString","primaryString","leftDisplay","keyId","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","getListItem","geneEntry","description","_id","disableGutters","ListItemAvatar","inline","href","search_results","geneSymbol","get","Component","linkIcon","nested","spacing","unit","wideList","table","tableLayout","MemoNodeProperties","memo","selectedNodes","context","setDefaultExpanded","entityProperties","nodeProperties","displayItems","sortedNodes","a","b","topDisplay","geneAnnotation","inset","prefix","displayCol1","displayCol2","colSpan","valign","oldProps","newProps","isEqual","findNode","nodeId","nodeArray","isNaN","returnNode","MemoEdgeProperties","selectedEdges","nodeList","edgeProperties","aScore","bScore","aSource","aTarget","bSource","bTarget","listPadding","prevProps","subtitle","minHeight","TabContent","i","JSON","DISABLED_STYLE","TableBrowserPanel","tableDisplayTab","Tabs","newValue","MemoTableBrowser","BootstrapButton","borderColor","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","logoDisabled","disabledLogo","textAlign","lignHeight","highlight","evt","uiStateActions","ndexSaveActions","NDExSave","cx","token","networkUrl","ndexSave","profile","authorization","DialogContentText","DialogActions","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","err","error","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","clientId","render","renderProps","buttonText","CredentialsSignOn","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","handleError","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal","onLogout","preventDefault","handleOnSuccess","resp","Dialog","ndexModal","aria-labelledby","image","errorMessage","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","fontSize","toolbar","paddingRight","grow","flexGrow","menuButton","breakpoints","up","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","buttons","border","openIcon","other","networkName","noWrap","DEFAULT_RATIO","NetworkView","setResize","direction","onDragEnd","BootstrapInput","input","textColor","InputBase","formStyle","left","marginBottom","divStyle","borderBottom","typeStyle","selectStyle","SortPanel","sortPValueOn","setSortPValueOn","Select","displayEmpty","MenuItem","networkAvatar","menuItem","menuText","secondary","plot","sortFunction","sortOrder","PValue","first","handleFetch","networkUUID","handleListItemClick","enrichmentStyle","selectedIndex","MenuList","renderNetworkListItem","queryList","titleStyle","lineHeight","wordBreak","subtitleStyle","Ndex","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","querySize","networkEntry","imageURL","icon","ListItemIcon","pVal","toExponential","pv","rowSpan","parent_network_nodes","parent_network_edges","sourceId","TAB_LABELS","enrichment","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","others","setSelectedTabIndex","selectedSourceName","flex","iconButton","geneTextRef","useRef","queryGenes","queryText","loadCSS","document","querySelector","handleSearch","sourceNames","elevation","getElementById","select","execCommand","Icon","classNames","Divider","onKeyDown","ref","textTransform","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","textBox","openLink","HELP_URL","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","whiteSpace","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","sourceEntry","version","status","text","LINKS","link","github","flexShrink","drawerHeader","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","children","HomePanel","onpopstate","onBackButtonEvent","searchResult","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","pathname","ReactGA","set","page","pageview","EXAMPLES","examples","searchButtonEl","anchorEl","query","Boolean","handleExample","exampleIdx","searchLogo","Link","CY_URL","NDEX_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","flexDirection","ndex","TopPage","Top","App","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","payload","singleResult","cx2js","vs","selector","css","fadedNode","fadedEdge","activeObject","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","p","upperQuery","gene","isFetchingSource","currentSource","port","isFetchingAvailable","isPollingAvailable","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","takeLatest","call","cySearchApi","sourceJson","geneListString","all","myGeneApi","geneRes","searchRes","geneJson","resultLocation","parts","filtered","filterGenes","put","uniqueGeneMap","notFound","sleep","ms","Promise","resolve","statusRes","statusJson","progress","resultRes","resultJson","allDone","json","params","api","orderedSources","Map","notfound","cyRESTPort","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","getCyRESTPort","addNumberVerification","aspect","patchedCX","numberVerification","longNumber","concat","responseJson","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","currentConnectionState","take","race","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","user","basicAuthSignIn","accountName","pwd","password","auth","btoa","firstName","responseText","networkURL","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","next","run","cyRestSaga","cyRestStatusSaga","basename","process","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f187bde3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-logo.19dae5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-dark.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const FIT_NETWORK_VIEW = 'FIT_NETWORK_VIEW'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport MuiToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nconst buttonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"#FFFFFF\"\n};\n\nconst selectedButtonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"rgb(252, 235, 242)\"\n};\n\nconst selectedChipStyle = {\n  margin: \"0\",\n  borderRadius: \"20px\"\n};\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: \"transparent\"\n};\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: \"transparent\"\n  }\n})(MuiToggleButton);\n\nconst GeneList = props => {\n  const results = props.search.results;\n  const hits = props.network.hitGenes;\n  const hitSets = new Set(hits);\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search.selectedGenes[0]) {\n      props.searchActions.clearSelectedGenes();\n    } else {\n      props.searchActions.setSelectedGenes(newAlignment);\n    }\n  };\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />;\n  }\n\n  const geneList = results.genes;\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />;\n  }\n\n  const matched = [];\n  const unmatched = [];\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value);\n    } else {\n      unmatched.push(value);\n    }\n  }\n\n  const matchedSorted = matched.sort().reverse();\n  const unmatchedSorted = unmatched.sort().reverse();\n  const sorted = [...matchedSorted, ...unmatchedSorted];\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup\n              value={props.search.selectedGenes}\n              exclusive\n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton\n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) &&\n                  props.search.selectedGenes[0] === geneValue.symbol\n                    ? selectedButtonStyle\n                    : buttonStyle\n                }\n              >\n                {getChip(geneValue, true, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nconst getChip = (value, isValid, props, hitSets) => {\n  let color = \"default\";\n  let found = false;\n  if (hitSets.has(value.symbol)) {\n    color = \"secondary\";\n    found = true;\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        avatar={<Avatar>{found ? <CheckIcon /> : \"-\"}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    );\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={\"INVALID: \" + value}\n        key={value}\n        clickable={true}\n      />\n    );\n  }\n};\n\nexport default GeneList;\n","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>\n        Query Genes\n      </div>\n      <GeneList {...props}/>\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport { withStyles } from '@material-ui/core/styles'\r\n\r\n\r\nconst HoverTab = withStyles(theme => ({\r\n  root: {\r\n    '&:hover': {\r\n      backgroundColor: 'rgb(235,235,235)',\r\n      opacity: 1,\r\n      color: '#222222'\r\n    }\r\n  }\r\n}))(props => <Tab {...props} />)\r\n\r\n\r\nexport default HoverTab","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"h3\">{props.message}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst MessageSnackbar = props => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        \"aria-describedby\": \"message-id\"\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  );\n};\n\nexport default MessageSnackbar;\n","import React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport cytoLogo from \"../../../assets/images/cytoscape-logo.svg\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport \"./style.css\";\n\nconst styles = theme => ({\n  logo: {},\n  button: {\n    height: \"50%\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    position: \"relative\",\n    top: \"15%\"\n  },\n  outer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inner: {\n    position: \"relative\",\n    marginTop: \"15%\",\n    width: \"100%\"\n  }\n});\n\nconst Warning = props => {\n  const { classes } = props;\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState(\"dormant\");\n  const [message, setMessage] = useState(null);\n\n  const handleClick = () => {\n    props.handleImportNetwork();\n  };\n\n  if (\n    props.network.uuid &&\n    props.network.uuid.length > 0 &&\n    props.cyrest.available\n  ) {\n    //Snackbar\n    const isLoadingNetwork = props.cyrest.isLoadingNetwork;\n    const lastResponse = props.cyrest.lastResponse;\n\n    let cycleId = 0;\n    console.log(\"cycleId: \" + cycleId);\n    console.log(\"state: \" + state);\n\n    if (state === \"dormant\" && isLoadingNetwork) {\n      setMessage(\"Opening network in Cytoscape Desktop . . .\");\n      setState(\"openLoading\");\n      if (!open) {\n        setOpen(true);\n      }\n    }\n    if (\n      (state === \"openLoading\" || state === \"closeLoading\") &&\n      lastResponse != null\n    ) {\n      setState(\"openResult\");\n      if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n        setMessage(\"Network opened in Cytoscape Desktop!\");\n      } else {\n        setMessage(\"Network failed to open in Cytoscape Desktop\");\n      }\n      if (!open) {\n        setOpen(true);\n      }\n    }\n    if (state === \"openResult\" && !open) {\n      setOpen(true);\n    }\n    if (state === \"openResult\" && open) {\n      let currentId = cycleId;\n      setTimeout(() => {\n        if (state === \"openResult\" && currentId === cycleId) {\n          setState(\"dormant\");\n          cycleId++;\n          setOpen(false);\n        }\n      }, 6000);\n    }\n\n    const handleClose = (event, reason) => {\n      console.log(\"click\");\n      if (state === \"openLoading\") {\n        console.log(\"openLoading to closeLoading\");\n        setState(\"closeLoading\");\n      } else if (state === \"openResult\") {\n        console.log(\"openResult to dormant\");\n        setState(\"dormant\");\n        cycleId++;\n      }\n      setOpen(false);\n      console.log(\"open: \" + open);\n    };\n\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton\n            className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Network is too big for interactive view. <br />\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={\"right\"}\n          vertical={\"bottom\"}\n          handleClose={handleClose}\n        />\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">\n            Network is too big for interactive view. <br />\n            Please open Cytoscape Desktop to view.\n          </Typography>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(Warning);\n","export const PRESET_LAYOUT = {\r\n  name: 'preset',\r\n  padding: 6,\r\n  animate: false\r\n}\r\n\r\nexport const CONCENTRIC_LAYOUT = {\r\n  name: 'concentric',\r\n  padding: 6,\r\n  minNodeSpacing: 100,\r\n  animate: false\r\n}\r\n\r\nexport const COSE_LAYOUT = {\r\n  name: 'cose',\r\n  padding: 6,\r\n  nodeRepulsion: function(node) {\r\n    return 10080000\r\n  },\r\n  nodeOverlap: 400000,\r\n  idealEdgeLength: function(edge) {\r\n    return 10\r\n  },\r\n  animate: false,\r\n  fit: false\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport CytoscapeComponent from 'react-cytoscapejs'\r\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\r\nimport Cytoscape from 'cytoscape'\r\nimport CyCanvas from 'cytoscape-canvas'\r\nimport { CxToCyCanvas } from 'cyannotation-cx2js'\r\nimport Warning from './Warning'\r\nimport { CONCENTRIC_LAYOUT, COSE_LAYOUT, PRESET_LAYOUT } from './LayoutSettings'\r\n\r\nimport './style.css'\r\n\r\nexport const MAX_NETWORK_SIZE = 5000\r\n\r\n// For supporting visual annotation\r\nCytoscape.use(CyCanvas)\r\n\r\n// This is the global instance of Cytoscape.js\r\nlet cyInstance = null\r\n\r\n// For annotation rendering\r\nconst annotationRenderer = new CxToCyCanvas(CxToJs)\r\nconst utils = new CyNetworkUtils()\r\n\r\n// This is the network attributes storing graphical annotations.\r\nconst ANNOTATION_TAG = '__Annotations'\r\n\r\n// Default network background color\r\nconst DEF_BG_COLOR = '#FFFFFF'\r\n\r\n/**\r\n *\r\n * Simple wrapper for cytoscape.js react component\r\n *\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst CytoscapeViewer = props => {\r\n  const { highlights } = props.uiState\r\n  const { fit, originalCX } = props.network\r\n\r\n  // Use default color if this property is not available.\r\n  let backgroundColor = props.network.backgroundColor\r\n  if (backgroundColor === null || backgroundColor === undefined) {\r\n    backgroundColor = DEF_BG_COLOR\r\n  }\r\n\r\n  let niceCX = useMemo(() => {\r\n    const networkAttr = originalCX.filter(\r\n      entry => entry.networkAttributes !== undefined\r\n    )\r\n\r\n    if (networkAttr !== undefined) {\r\n      const firstEntry = networkAttr[0]\r\n      if (\r\n        firstEntry === undefined ||\r\n        firstEntry.networkAttributes === undefined\r\n      ) {\r\n        return\r\n      }\r\n\r\n      const netAttrArray = firstEntry.networkAttributes\r\n      const annotationEntry = netAttrArray.filter(\r\n        attr => attr.n === ANNOTATION_TAG\r\n      )\r\n      if (annotationEntry.length !== 0 && cyInstance) {\r\n        const nice = utils.rawCXtoNiceCX(originalCX)\r\n        console.log(\r\n          '* Registering annotation renderer for this niceCX:',\r\n          annotationEntry\r\n        )\r\n        annotationRenderer.drawAnnotationsFromNiceCX(cyInstance, nice)\r\n        return nice\r\n      }\r\n    }\r\n\r\n    return null\r\n  }, [originalCX, cyInstance])\r\n\r\n  /*\r\n    Node/Edge Selections\r\n   */\r\n  useEffect(() => {\r\n    // Event handler can be set only when Cytoscape.js instance is available.\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n\r\n    // Background tapped: Remove selection\r\n    // (This is the standard Cytosape UX)\r\n    cyInstance.on('tap', function() {\r\n      try {\r\n        props.networkActions.unselectEdges()\r\n        props.networkActions.unselectNodes()\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n    })\r\n\r\n    const selectEdge = () => {\r\n      setTimeout(() => {\r\n        const edges = []\r\n        const selectedEdges = cyInstance.$('edge:selected')\r\n        selectedEdges.forEach(element => {\r\n          edges.push(element.data())\r\n        })\r\n        if (edges.length === 0) {\r\n          props.networkActions.unselectEdges()\r\n        } else {\r\n          props.networkActions.selectEdges(edges)\r\n        }\r\n      }, 1)\r\n    }\r\n\r\n    const selectNode = () => {\r\n      setTimeout(() => {\r\n        const nodes = []\r\n        const selectedNodes = cyInstance.$('node:selected')\r\n        selectedNodes.forEach(element => {\r\n          if (element.data().name !== '') {\r\n            nodes.push(element.data())\r\n          }\r\n        })\r\n        if (nodes.length === 0) {\r\n          props.networkActions.unselectNodes()\r\n        } else {\r\n          props.networkActions.selectNodes(nodes)\r\n        }\r\n      }, 1)\r\n    }\r\n\r\n    cyInstance.on('tap', 'node', function() {\r\n      try {\r\n        cyInstance.nodes().removeClass('connected')\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n      selectNode()\r\n    })\r\n\r\n    cyInstance.on('tap', 'edge', function() {\r\n      try {\r\n        cyInstance.nodes().removeClass('connected')\r\n        const selected = this.data()\r\n        const { source, target } = selected\r\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n      selectEdge()\r\n    })\r\n\r\n    cyInstance.on('boxend', function(event) {\r\n      selectEdge()\r\n      selectNode()\r\n    })\r\n\r\n    // Reset the UI state (highlight)\r\n    if (highlights) {\r\n      cyInstance.elements().addClass('faded')\r\n      const query = cyInstance.filter('node[querynode = \"true\"]')\r\n      query.addClass('highlight')\r\n    } else {\r\n      cyInstance\r\n        .elements()\r\n        .removeClass('faded')\r\n        .removeClass('highlight')\r\n    }\r\n\r\n    return () => {\r\n      console.log('Network viewer unmounted')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n\r\n    const targets = props.search.selectedGenes\r\n    if (targets === null || targets === undefined) {\r\n      return\r\n    }\r\n\r\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\r\n\r\n    if (selected.length !== 0) {\r\n      cyInstance.animate(\r\n        {\r\n          zoom: 2,\r\n          center: {\r\n            eles: selected[0]\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n    }\r\n\r\n    if (targets.length === 0) {\r\n      cyInstance.animate(\r\n        {\r\n          fit: {\r\n            eles: cyInstance.elements(),\r\n            padding: 6\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n    }\r\n  }, [props.search.selectedGenes])\r\n\r\n  useEffect(() => {\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n    if (fit) {\r\n      cyInstance.animate(\r\n        {\r\n          fit: {\r\n            eles: cyInstance.elements(),\r\n            padding: 6\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n      props.networkActions.fitNetworkView(false)\r\n    }\r\n  }, [fit])\r\n\r\n  // Check network size and show warning if it's too big for this renderer\r\n  const numObjects = props.network.nodeCount + props.network.edgeCount\r\n  if (numObjects > MAX_NETWORK_SIZE) {\r\n    return <Warning {...props} />\r\n  }\r\n\r\n  // Render actual network\r\n  const cyjs = props.network.network\r\n  if (cyjs === null || cyjs === undefined) {\r\n    return null\r\n  }\r\n\r\n  // Network background should be set via CSS.\r\n  const networkAreaStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: 'rgba(0,0,0,0)'\r\n  }\r\n\r\n  const isLayoutAvailable = cyjs.isLayout\r\n\r\n  let layout = PRESET_LAYOUT\r\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\r\n    layout = COSE_LAYOUT\r\n  } else if (!isLayoutAvailable) {\r\n    layout = CONCENTRIC_LAYOUT\r\n  }\r\n\r\n  if (cyInstance !== null) {\r\n    cyInstance.resize()\r\n\r\n    if (layout === COSE_LAYOUT) {\r\n      layout.stop = () => {\r\n        setTimeout(() => {\r\n          cyInstance.fit()\r\n        }, 200)\r\n      }\r\n    }\r\n\r\n    if (highlights) {\r\n      cyInstance.elements().addClass('faded')\r\n      const query = cyInstance.filter('node[querynode = \"true\"]')\r\n      query.addClass('highlight')\r\n    } else {\r\n      cyInstance\r\n        .elements()\r\n        .removeClass('faded')\r\n        .removeClass('highlight')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CytoscapeComponent\r\n      elements={cyjs.elements}\r\n      layout={layout}\r\n      style={networkAreaStyle}\r\n      stylesheet={cyjs.style}\r\n      cy={cy => {\r\n        cyInstance = cy\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CytoscapeViewer\r\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\" style={{backgroundColor: props.color}}>\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from \"react\";\nimport \"./style.css\";\nimport MemoCytoscapeViewer from \"../CytoscapeViewer\";\nimport LoadingPanel from \"../../LoadingPanel\";\n\nconst NetworkViewer = props => {\n  if (props.network.isFetching) {\n    return (\n      <div className=\"network-view\">\n        <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n      </div>\n    );\n  } else if (props.search.actualResults.length === 0) {\n    return <div className=\"network-view\" />;\n  } else {\n    return (\n      <div className=\"network-view\">\n        {props.network.isFetching ? (\n          <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n        ) : (\n          <MemoCytoscapeViewer resized={props.resized} {...props} />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default NetworkViewer;\n","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","export const camelCaseToTitleCase = camelCaseString => {\n  if (\n    camelCaseString.slice(0, 4) === \"http\" ||\n    camelCaseString.slice(0, 5) === \"Prov:\"\n  ) {\n    return camelCaseString;\n  }\n  let result = camelCaseString\n    .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")\n    .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")\n    .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")\n    .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")\n    .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")\n    .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n    .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\")\n    .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")\n    .trim();\n  result = result.charAt(0).toUpperCase() + result.slice(1);\n  result = result\n    .replace(\"Wiki Pathways\", \"WikiPathways\")\n    .replace(\"Wikipathways\", \"WikiPathways\")\n    .replace(\"Sbo \", \"SBO \")\n    .replace(\"Ncipid\", \"NCI PID\")\n    .replace(\"Cptac\", \"CPTAC\")\n    .replace(\"Hpmi\", \"HPMI\")\n    .replace(\"Ccmi\", \"CCMI\")\n    .replace(\"Tcga\", \"TCGA\")\n    .replace(\"Querynode\", \"Query Node\");\n  return result;\n};\n","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport List from \"@material-ui/core/List\";\n\nexport default function ExpandPanel(props) {\n  const [open, setOpen] = React.useState(props.defaultExpanded);\n  let style;\n\n  function handleClick() {\n    setOpen(!open);\n  }\n\n  if (props.divider) {\n    style = {\n      borderTop: \"1px solid #EFEFEF\"\n    };\n  } else {\n    style = {};\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={handleClick} key={Math.random()} style={style}>\n        <ListItemText primary={props.summary} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem>\n            <ListItemText primary={props.details} />\n          </ListItem>\n        </List>\n      </Collapse>\n    </React.Fragment>\n  );\n}\n","import React from 'react'\nimport Split from 'react-split'\n\nimport { makeStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { stripScripts } from './strip-scripts-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport ExpandPanel from './ExpandPanel'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '1em',\n    paddingTop: '0.75em'\n  },\n  lessPadding: {\n    paddingTop: '2.49px'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  }\n}))\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.network.originalCX\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = ['Name', 'Description', 'Reference', '@context']\n  const properties = ['Organism', 'Cell', 'Disease']\n  const contributors = ['Author', 'Reviewers', 'Rights Holder', 'Rights']\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const networkInformation = ['Version', 'Network Type', 'Labels']\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ]\n\n  //Filter properties\n  const attributes = []\n  let content\n  let title\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      if (\n        title === 'Description' &&\n        props.uiState.selectedSource === 'interactome'\n      ) {\n        const newTitle = 'Description of parent network'\n        leftDisplayItems.splice(1, 0, newTitle)\n        const networkInfo =\n          props.search.actualResults[props.network.listIndex - 1]\n        content =\n          networkInfo.nodes +\n          ' nodes, ' +\n          networkInfo.edges +\n          ' edges<br/>' +\n          content\n        attributes.push({\n          title: newTitle,\n          content: content, //TODO\n          displayed: false\n        })\n      } else {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    } else if (title === 'Name') {\n      attributes.push({\n        title: title,\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null) {\n        primaryString +=\n          currentEntry.title + ': ' + currentEntry.content + '<br>'\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch (list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n    }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString !== '') {\n      rightDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        const summary = (\n          <Typography component=\"span\" variant=\"body2\">\n            Click to view the namespaces associated with this network\n          </Typography>\n        )\n        const details = <Typography variant=\"body2\">{primaryString}</Typography>\n        leftDisplay.push(\n          <React.Fragment key={index}>\n            <div className={classes.padding}>\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                color=\"textSecondary\"\n              >\n                @context\n              </Typography>\n            </div>\n            <ExpandPanel\n              summary={summary}\n              details={details}\n              defaultExpanded={false}\n              keyId={index++}\n              divider={false}\n            />\n          </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++} className={classes.noPadding}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"caption\"\n                    color=\"textSecondary\"\n                  >\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                >\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n    <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>{leftDisplay}</List>\n      </div>\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>{rightDisplay}</List>\n      </div>\n    </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return (\n    <Linkify key={Math.random().toString()}>{modifiedText}</Linkify>\n  )\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  let splitResults\n  let result = '<table><tbody>'\n  elements.forEach(item => {\n    splitResults = item.split('\"')\n    result +=\n      '<tr><td>' +\n      splitResults[1] +\n      '</td><td>' +\n      splitResults[3] +\n      '</td></tr>'\n  })\n  result += '</tbody></table>'\n  return formatPrimary(result)\n}\n\n\nexport default NetworkProperties\n","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n        disableGutters={true}\n        style={{padding: '0'}}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    <div>\n                      <Typography component=\"span\" variant=\"body2\" >\n                        {geneEntry.symbol}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography\n                        component=\"span\"\n                        className={classes.inline}\n                        variant=\"caption\"\n                        color='textSecondary'\n                      >\n                        {camelCaseToTitleCase(geneEntry.name)}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"body2\" color='textPrimary'>\n                        {description}\n                      </Typography>\n                    </div>\n                  </td>\n                  <td>\n                    <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                      <IconButton\n                        aria-label=\"Link to GeneCards\"\n                        href={GENE_CARDS_URL + geneEntry.symbol}\n                        target=\"_blank\"\n                      >\n                        <LinkIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          }\n        />\n      </ListItem>\n    )\n  }    \n} \n\n  /*\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n*/\n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/styles'\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\nimport GeneAnnotationList from './GeneAnnotationList'\nimport ExpandPanel from './ExpandPanel'\nimport { isEqual } from 'lodash'\n\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nlet index = 0\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n  const nodes = props.network.selectedNodes\n  const context = props.context\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = ['Name', 'HGNC', 'Ensembl', 'Alias', 'Type']\n\n  const nodeProperties = [\n    'Height',\n    'Width',\n    'Shape',\n    'Is GPML Shape',\n    'Color',\n    'Fill Color',\n    'Transparent',\n    'Border Thickness',\n    'Border Style',\n    'Label Size',\n    'Label Font',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, nodeProperties]\n\n  const sortedNodes = nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedNodes.forEach(node => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let geneAnnotation = null\n    let inset = false\n    if (\n      props.search.results != null &&\n      props.search.results.genes.get(node.name) != null\n    ) {\n      inset = true\n      geneAnnotation = (\n        <List className={classes.noPadding}>\n          <GeneAnnotationList\n            {...props}\n            search_results={props.search.results}\n            geneSymbol={node.name}\n          />\n        </List>\n      )\n    }\n    for (let key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        if (title === 'alias') {\n          const [prefix, id] = content.split(':')\n          if (prefix in context) {\n            attributes.push({\n              title: 'Alias',\n              content:\n                '<a href=\"' + context[prefix] + id + '\">' + content + '</a>',\n              displayed: false\n            })\n          }\n        } else if (title !== 'query') {\n          attributes.push({\n            title: camelCaseToTitleCase(title),\n            content: content,\n            displayed: false\n          })\n        }\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={index++} className={classes.noPadding}>\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case nodeProperties:\n            secondaryString = 'Node Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.noPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString !== '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    const summary = <Typography variant=\"body2\">{node.name}</Typography>\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td colSpan=\"2\" valign=\"top\">\n              {geneAnnotation}\n            </td>\n          </tr>\n          <tr>\n            <td valign={'top'}>{displayCol1}</td>\n            <td valign={'top'}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={node.id + index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link' + index++}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst MemoNodeProperties = React.memo(NodeProperties, (oldProps, newProps) => {\n  return isEqual(oldProps.network.selectedNodes, newProps.network.selectedNodes)\n})\n\nexport default MemoNodeProperties\n","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport { isEqual } from 'lodash'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/styles'\nimport ExpandPanel from './ExpandPanel'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  const edges = props.network.selectedEdges\n  const nodes = props.nodeList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Source',\n    'Target',\n    'Type',\n    'SBO Type',\n    'Interaction',\n    'Throughput',\n    'Location'\n  ]\n\n  const edgeProperties = [\n    'Start Arrow',\n    'End Arrow',\n    'Connector Type',\n    'Line Thickness',\n    'Line Style',\n    'Color',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, edgeProperties]\n\n  const sortedEdges = edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    const aSource = findNode(a.source, nodes)\n    const aTarget = findNode(a.target, nodes)\n    const bSource = findNode(b.source, nodes)\n    const bTarget = findNode(b.target, nodes)\n    if (aSource !== '') {\n      aScore++\n    }\n    if (aTarget !== '') {\n      aScore++\n    }\n    if (bSource !== '') {\n      bScore++\n    }\n    if (bTarget !== '') {\n      bScore++\n    }\n    if (bScore - aScore !== 0) {\n      return bScore - aScore\n    } else if (aSource === '') {\n      return 1\n    } else if (bSource === '') {\n      return -1\n    }\n\n    if (aSource.toUpperCase() > bSource.toUpperCase()) {\n      return 1\n    } else if (aSource.toUpperCase() < bSource.toUpperCase()) {\n      return -1\n    } else if (aTarget.toUpperCase() > bTarget.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  edges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let source\n    let target\n    for (let key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        if (title === 'source') {\n          source = findNode(content, nodes)\n          attributes.push({\n            title: 'Source',\n            content: source,\n            displayed: false\n          })\n        } else if (title === 'target') {\n          target = findNode(content, nodes)\n          attributes.push({\n            title: 'Target',\n            content: target,\n            displayed: false\n          })\n        } else {\n          attributes.push({\n            title: camelCaseToTitleCase(title),\n            content: content,\n            displayed: false\n          })\n        }\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={Math.random()} className={classes.noPadding}>\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case edgeProperties:\n            secondaryString = 'Edge Properties'\n            displayCol2.push(\n              <ListItem\n                key={Math.random()}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString !== '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    const summary = (\n      <Typography variant=\"body2\">{source + ' -> ' + target}</Typography>\n    )\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td valign={'top'}>{displayCol1}</td>\n            <td valign={'top'}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link:' + index++}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === '') {\n    return nodeId\n  }\n  const returnNode = nodeArray.filter(\n    item => item['@id'].toString() === nodeId.toString()\n  )[0]\n\n  if (returnNode != null) {\n    return returnNode.n\n  } else {\n    return ''\n  }\n}\n\n//Necessary because otherwise open list items will collapse every time \"SET_AVAILABLE\" happens\nconst MemoEdgeProperties = React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network.selectedEdges, newProps.network.selectedEdges)\n})\n\nexport default MemoEdgeProperties\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport HoverTab from '../HoverTab'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { findAttributes } from './attribute-util'\n\nimport MemoNetworkProperties from './NetworkProperties'\nimport NodeProperties from './NodeProperties'\nimport MemoEdgeProperties from './EdgeProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {},\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  root: {\n    minHeight: 0\n  }\n}))\n\nconst TabContent = props => {\n  const { value } = props\n\n  //Find @context\n  let context = {}\n  let networkAttr = findAttributes(\n    props.network.originalCX,\n    'networkAttributes'\n  )\n  if (networkAttr != null) {\n    for (let i = 0; i < networkAttr.length; i++) {\n      if (networkAttr[i].n === '@context') {\n        context = JSON.parse(networkAttr[i].v)\n      }\n    }\n  }\n\n  if (value === 0) {\n    return <MemoNetworkProperties {...props} />\n  } else if (value === 1) {\n    return <NodeProperties context={context} {...props} />\n  } else {\n    return <MemoEdgeProperties {...props} />\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\nconst TableBrowserPanel = props => {\n  //const network = props.network\n  const classes = useStyles()\n  let value = props.network.tableDisplayTab\n  const originalCX = props.network.originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue)\n  }\n\n  let nodeList\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes\n      break\n    }\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs value={value} onChange={handleChange} className={classes.root}>\n        <HoverTab\n          className={classes.root}\n          key={'network-tab'}\n          label={'Network'}\n        />\n        <HoverTab className={classes.root} key={'nodes-tab'} label={'Nodes'} />\n        <HoverTab className={classes.root} key={'edges-tab'} label={'Edges'} />\n      </Tabs>\n      <TabContent value={value} nodeList={nodeList} {...props} />\n    </div>\n  )\n}\n\nexport default TableBrowserPanel\n\n","import React from \"react\";\n\nimport MemoTableBrowserPanel from \"./TableBrowserPanel\";\n\nconst DISABLED_STYLE = {\n  width: \"100%\"\n};\n\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  if (\n    props.network.originalCX === null ||\n    props.search.actualResults.length === 0\n  ) {\n    return <div style={DISABLED_STYLE} />;\n  }\n\n  return (\n    <div className={\"table-browser\"}>\n      <MemoTableBrowserPanel {...props} />\n    </div>\n  );\n};\n\nconst MemoTableBrowser = TableBrowser; /*React.memo(TableBrowser, (prevProps, newProps) => {\n  return isEqual(prevProps.network.isFetching, newProps.network.isFetching)\n})*/\n\nexport default MemoTableBrowser;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport logo from \"../../../assets/images/cytoscape-logo.svg\";\nimport logoDisabled from \"../../../assets/images/cytoscape-logo-mono-light.svg\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\";\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: \"0.5em\",\n    borderColor: \"#EA9123\",\n    \"&:active\": {\n      borderColor: \"#EA9123\"\n    }\n  }\n})(Button);\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"2em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\"\n  }\n});\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling();\n    return () => {\n      props.cyrestActions.stopCyRestPolling();\n    };\n  }, []);\n\n  const { classes } = props;\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) ||\n    !props.cyrest.available;\n\n  const handleClick = () => {\n    props.handleImportNetwork();\n  };\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork;\n  const lastResponse = props.cyrest.lastResponse;\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState(\"dormant\");\n  const [message, setMessage] = useState(null);\n  let cycleId = 0;\n  //console.log(\"cycleId: \" + cycleId);\n  //console.log(\"state: \" + state);\n\n  if (state === \"dormant\" && isLoadingNetwork) {\n    setMessage(\"Opening network in Cytoscape Desktop . . .\");\n    setState(\"openLoading\");\n    if (!open) {\n      setOpen(true);\n    }\n  }\n  if (\n    (state === \"openLoading\" || state === \"closeLoading\") &&\n    lastResponse != null\n  ) {\n    setState(\"openResult\");\n    if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n      setMessage(\"Network opened in Cytoscape Desktop!\");\n    } else {\n      setMessage(\"Network failed to open in Cytoscape Desktop\");\n    }\n    if (!open) {\n      setOpen(true);\n    }\n  }\n  if (state === \"openResult\" && !open) {\n    setOpen(true);\n  }\n  if (state === \"openResult\" && open) {\n    let currentId = cycleId;\n    setTimeout(() => {\n      if (state === \"openResult\" && currentId === cycleId) {\n        setState(\"dormant\");\n        cycleId++;\n        setOpen(false);\n      }\n    }, 6000);\n  }\n\n  const handleClose = (event, reason) => {\n    console.log('click')\n    if (state === \"openLoading\") {\n      setState(\"closeLoading\");\n    } else if (state === \"openResult\") {\n      setState(\"dormant\");\n      cycleId++;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={\"right\"}\n        vertical={\"bottom\"}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(OpenInCytoscapeButton);\n","import React from \"react\";\nimport \"./style.css\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { withStyles } from \"@material-ui/core\";\n\nimport logo from \"../../../assets/images/zoom-logo.svg\";\nimport disabledLogo from \"../../../assets/images/zoom-logo-mono.svg\";\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"1.75em\"\n  }\n});\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\",\n    borderColor: \"#212121\",\n    color: \"#212121\",\n    \"&:active\": {\n      borderColor: \"#212121\",\n      color: \"#212121\"\n    }\n  }\n})(Button);\n\nconst ResetZoomButton = props => {\n  const { classes } = props;\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0);\n\n  const handleClick = () => {\n    props.networkActions.fitNetworkView(true);\n  };\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default withStyles(styles)(ResetZoomButton);\n","import React from \"react\";\n\nimport HighlightIcon from \"@material-ui/icons/WbIncandescent\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: \"center\",\n    lignHeight: \"50%\",\n    position: \"relative\",\n    top: \"1px\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    marginLeft: \"0.5em\"\n  }\n});\n\nconst Highlighter = props => {\n  const { classes } = props;\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0);\n\n  let highlight = props.uiState.highlights;\n\n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight;\n      props.uiStateActions.setHighlights(highlight);\n    }\n  };\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? \"secondary\" : \"default\"}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? \"secondary\" : \"disabled\"}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default withStyles(styles)(Highlighter);\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n  },\n})(Button);\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(OpenInNDExButton))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    console.log(ndexSave)\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default (withStyles(styles)(NDExSave))\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { ...props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default (NDExSignInModal)\n\n\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\";\n\nimport { SERVICE_SERVER_URL } from \"../../../api/apiConstants\";\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: \"0.1em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\"\n  }\n});\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props;\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0);\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: \"4.3em\",\n      borderColor: \"#212121\",\n      color: \"#212121\",\n      \"&:active\": {\n        borderColor: \"#212121\",\n        color: \"#212121\"\n      }\n    }\n  })(Button);\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? \"disabled\" : \"inherit\"}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  );\n};\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + \"#/network/\" + uuid;\n  console.log(SERVICE_SERVER_URL);\n  console.log(url);\n\n  console.log(\"Opening original network entry:\", url);\n  window.open(url, \"_blank\");\n};\n\nexport default withStyles(styles)(OpenOriginalNetworkButton);\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Tooltip } from '@material-ui/core'\n\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport ResetZoomButton from './ResetZoomButton'\nimport Highlighter from './Highlighter'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\nimport { camelCaseToTitleCase } from '../TableBrowser/camel-case-util'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    paddingTop: '0',\n    paddingBottom: '0',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props\n  let [prefix, name] = ['', '']\n\n  if (props.search.actualResults.length !== 0) {\n    ;[prefix, name] = props.network.networkName.split(':')\n  }\n\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {name ? camelCaseToTitleCase(prefix) + ':' + name : null}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...props} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport MemoTableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <MemoTableBrowser {...props}/>\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0',\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    },\n  },\n}))(InputBase);\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n}\n\nconst typeStyle = {\n  position: 'relative',\n  top: '14.5px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === 'p-Value') {\n      setSortPValueOn(true)\n      props.uiStateActions.setSortOrder(['p-Value', 'Overlap'])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions.setSortOrder(['Overlap', 'p-Value'])\n    }\n  }\n  \n  if (props.uiState.selectedSource === 'enrichment') {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? 'p-Value' : 'Overlap'}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={'p-Value'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={'Overlap'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default (SortPanel)\n            ","import React, { useEffect } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport Typography from '@material-ui/core/Typography'\n\nimport SortPanel from './SortPanel'\n\nimport './style.css'\nimport { callbackify } from 'util'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    position: 'relative',\n    top: '25%',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  }\n})\n\nconst findSort = sortOrder => {\n  if (sortOrder[0] === 'p-Value') {\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else {\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  }\n}\n\nconst NetworkList = props => {\n  let hits = props.hits\n\n  const openFirst = first => {\n    if (first != null) {\n      props.handleFetch(\n        first.networkUUID,\n        first.description,\n        first.nodes,\n        first.edges,\n        first.hitGenes\n      )\n    }\n  }\n\n  //Sort hits\n  useEffect(() => {\n    if (props.uiState.selectedSource === 'enrichment') {\n      const sortFunction = findSort(props.uiState.sortOrder)\n      hits = hits.sort(sortFunction)\n    }\n    props.searchActions.setActualResults(hits)\n    openFirst(hits[0])\n    props.networkActions.changeListIndex(1)\n  }, [props.uiState.sortOrder, props.uiState.selectedSource])\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  let index = 1\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index)\n  }\n\n  const selectedIndex = props.network.listIndex\n\n  let enrichmentStyle\n  if (props.uiState.selectedSource === 'enrichment') {\n    enrichmentStyle = {\n      height: `calc(100% - 49px)`\n    }\n  } else {\n    enrichmentStyle = {}\n  }\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\" style={enrichmentStyle}>\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry =>\n              props.renderNetworkListItem(\n                props.search.queryList.length,\n                entry,\n                props.classes,\n                handleListItemClick,\n                selectedIndex,\n                index++\n              )\n            )}\n          </MenuList>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography\n            variant={'subtitle1'}\n            color={'textSecondary'}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from \"react\";\nimport \"./style.css\";\n\nimport Split from \"react-split\";\n\nimport NetworkView from \"./NetworkView\";\nimport NetworkList from \"./NetworkList\";\n\nimport { camelCaseToTitleCase } from \"../TableBrowser/camel-case-util\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ListItem } from \"@material-ui/core\";\n\nconst titleStyle = {\n  lineHeight: \"1.33\",\n  wordBreak: \"break-word\"\n};\n\nconst subtitleStyle = {\n  lineHeight: \"1\",\n  wordBreak: \"break-word\"\n}\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n    const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n    const geneList = props.search.queryList;\n    const sourceUUID = props.sourceUUID;\n    const id = props.search.results.jobId;\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes();\n    props.uiStateActions.setHighlights(true);\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    });\n    updateHistory(networkUUID);\n  };\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId;\n    const searchResults = props.search.searchResults;\n    const sourceName = props.uiState.selectedSource;\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log(\"** network changed:\", jobId, sourceName);\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`);\n    }\n  };\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true);\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    });\n  };\n\n  const renderNetworkListItem = (\n    querySize,\n    networkEntry,\n    classes,\n    handleListItemClick,\n    selectedIndex,\n    index\n  ) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      details\n    } = networkEntry;\n\n    const genes = (\n      <div display=\"inline\">\n        <Typography display=\"inline\" style={{ lineHeight: \"1.33\" }}>\n          <strong>{hitGenes ? hitGenes.length : \"?\"}</strong>{\" \"}\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          display=\"inline\"\n          color=\"textSecondary\"\n          style={{ lineHeight: \"1\" }}\n        >\n          genes\n        </Typography>\n      </div>\n    );\n\n    const icon = (\n      <ListItemIcon style={{ width: \"20px\" }}>\n        <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n      </ListItemIcon>\n    );\n\n    if (props.uiState.selectedSource === \"enrichment\") {\n      let pVal = details.PValue;\n      if (pVal !== undefined) {\n        if (pVal !== 0) {\n          pVal = pVal.toExponential(2);\n        }\n      }\n      const pv = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{pVal}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            pv\n          </Typography>\n        </div>\n      );\n\n      const title = (\n        <Typography style={titleStyle}>\n          {description.split(\":\").slice(1)}\n        </Typography>\n      );\n\n      const subtitle = (\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n          style={subtitleStyle}\n        >\n          Nodes: {nodes}, Edges: {edges}, Source:{\" \"}\n          {camelCaseToTitleCase(description.split(\":\")[0])}\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={{ tableLayout: \"fixed\", wordBreak: \"breakWord\" }}>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\">\n                  {icon}\n                </td>\n                <td width=\"90px\" align=\"left\" valign=\"bottom\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\">\n                  {pv}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    } else {\n      const node = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{nodes}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"nodes \"}\n          </Typography>\n        </div>\n      );\n\n      const edge = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{edges}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"edges\"}\n          </Typography>\n        </div>\n      );\n\n      const title = (\n        <React.Fragment>\n          <Typography color=\"textPrimary\" style={titleStyle}>\n            {description}\n          </Typography>\n        </React.Fragment>\n      );\n\n      const subtitle = (\n        <Typography variant=\"caption\" color=\"textSecondary\" style={subtitleStyle}>\n          Parent: {details.parent_network_nodes} nodes,{\" \"}\n          {details.parent_network_edges} edges\n        </Typography>\n      );\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes);\n            handleListItemClick(event, index);\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={{ tableLayout: \"fixed\", wordBreak: \"break-word\" }}>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" width=\"50px\">\n                  {icon}\n                </td>\n                <td colSpan=\"2\" align=\"left\" valign=\"bottom\" width=\"150px\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\" width=\"75px\">\n                  {node}\n                </td>\n                <td align=\"left\" valign=\"baseline\" width=\"80px\">\n                  {edge}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      );\n    }\n  };\n\n  return (\n    <Split sizes={[40, 60]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList\n        renderNetworkListItem={renderNetworkListItem}\n        handleFetch={handleFetch}\n        hits={props.hits}\n        {...props}\n      />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  );\n};\n\n/*const MemoNdex = React.memo(Ndex, (oldProps, newProps) => {\n  \n})*/\n\nexport default Ndex;\n","import React from \"react\";\n\nimport Ndex from \"./Ndex\";\nimport LoadingPanel from \"../LoadingPanel\";\n\nimport { isEqual } from \"lodash\";\n\nconst TabContent = props => {\n  const results = props.results;\n\n  if (results === null || results === undefined ) {\n    return (\n      <LoadingPanel\n        title={\"Loading results\"}\n        message={<div style={{ color: \"black\" }}>Please wait...</div>}\n      />\n    );\n  } else {\n    return (\n      <Ndex hits={results.results} sourceUUID={results.sourceUUID} {...props} />\n    );\n  }\n};\n\nexport default TabContent;\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport HoverTab from './HoverTab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\n// Conversion table from tab ID to human-readable labels\nconst TAB_LABELS = {\n  enrichment: {\n    label: 'Gene Enrichment'\n  },\n  'interactome-ppi': {\n    label: 'Protein Interactions'\n  },\n  'interactome-association': {\n    label: 'Gene Association'\n  }\n}\n\nconst styles = theme => ({\n  tabs: {},\n  grow: {\n    flexGrow: 1\n  }\n})\n\nconst Results = props => {\n  const { classes, ...others } = props\n\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n    props.networkActions.changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const { sources } = props.source\n  if (sources === null || sources === undefined || sources.length === 0) {\n    return <Empty />\n  }\n\n  const searchResults = props.search.searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange} className={classes.tabs}>\n          {sources.map(source => (\n            <HoverTab key={source.uuid} label={TAB_LABELS[source.name].label} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { loadCSS } from \"fg-loadcss/src/loadCSS\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport classNames from \"classnames\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport MessageSnackbar from \"./MessageSnackbar\";\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"50vmin\",\n    padding: \"0.3em\",\n    background: \"#f1f1f1\",\n    marginLeft: \"1em\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n};\n\nconst ORIGINAL_GENE_TEXT = \"original-gene-text\";\n\nconst GeneTextBox = props => {\n  const { classes } = props;\n  const geneTextRef = useRef(null);\n\n  const [queryText, setQuery] = useState(props.search.queryGenes);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    loadCSS(\n      \"https://use.fontawesome.com/releases/v5.1.0/css/all.css\",\n      document.querySelector(\"#insertion-point-jss\")\n    );\n    return () => {};\n  }, []);\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT);\n    copyText.select();\n    document.execCommand(\"copy\");\n\n    // Show message\n    setOpen(true);\n  };\n\n  const handleSearch = evt => {\n    const genes = queryText;\n    const sources = props.source.sources;\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return;\n    }\n\n    const sourceNames = sources.map(source => source.name);\n\n    const geneListString = genes.replace(\",\", \" \");\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/);\n\n    props.searchActions.clearAll();\n    props.uiStateActions.setSelectedSource(\"enrichment\")\n    props.history.push(\"/\");\n    props.searchActions.setQuery(genes);\n    props.searchActions.searchStarted({ geneList, sourceNames });\n  };\n\n  const handleChange = evt => {\n    const value = evt.target.value;\n    setQuery(value);\n  };\n\n  const handleClear = evt => {\n    setQuery(\"\");\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch(event);\n    }\n  };\n\n  return (\n    <div>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={\"Genes are copied to clipboard!\"}\n        autoHideDuration={4000}\n        horizontal={\"left\"}\n        vertical={\"bottom\"}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, \"far fa-clipboard\")} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(GeneTextBox);\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Button from \"@material-ui/core/Button\";\n\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo-mono-dark.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono-dark.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo-mono-dark.svg'\nimport wpLogo from '../../assets/images/wp-logo-mono-dark.svg'\nimport idekerLogo from '../../assets/images/ideker-logo-mono-dark.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    paddingLeft: '1em',\n    paddingRight: '1em'\n  },\n  noWrap: {\n    display: \"inline-block\",\n    whiteSpace: \"nowrap\"\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '1em',\n  textTransform: 'none'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.uiStateActions.setSelectedSource(\"enrichment\")\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n<div className={classes.noWrap}>\n        <Toolbar disableGutters={!open}>\n          <Tooltip title=\"Search by Pathway Enrichment / Protein-Protein Interactions / Gene Association\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Button style={titleStyle} onClick={this.handleHomeButton}>\n              <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                NDEx Integrated Query\n              </Typography>\n              </Button>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <div className={classes.textBox}>\n              <GeneTextBox {...others} />\n             </div>\n          )}\n\n          <div className={classes.grow} />\n          \n          <div>\n            {/*}\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          */}\n            <Tooltip title=\"Help\" placement=\"bottom\" style={{paddingRight: \"1em\"}}>\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={() => openLink(HELP_URL)}\n              >\n                <HelpIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n{/*}\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NDEx\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NDEX_URL)}\n              >\n                <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n          </Tooltip>*/}\n          </div>\n        </Toolbar>\n        </div>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\nconst IL_URL = 'http://idekerlab.ucsd.edu/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, { withTheme: true})(TitleBar))","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" alt='list item icon'/>\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from \"react\";\nimport \"./style.css\";\n\nimport TitleBar from \"./TitleBar\";\nimport SettingsPanel from \"../SettingsPanel\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport classNames from \"classnames\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vmin\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    padding: \"0 0.5em\",\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search);\n    const cyrestport = urlParams.get(\"cyrestport\");\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport);\n    }\n    return () => {};\n  }, []);\n  const { classes, ...others } = props;\n\n  const open = props.uiState.isSettingsOpen;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(AppShell);\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const isFetching = props.search.isFetching\n  const searchResult = props.search.searchResult\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props} >\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props} >\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props}/>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default (HomePanel)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel {...props} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport searchLogo from \"../../assets/images/search-logo.svg\";\n\nimport * as examples from \"./example-genes\";\n\nconst EXAMPLES = examples.default.examples;\nconst feedbackURL = \"https://home.ndexbio.org/contact-us/\";\n\nconst styles = {\n  root: {\n    padding: \"0.1em 0.25em\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n};\n\nconst SearchTextBox = props => {\n  const { classes } = props;\n  const searchButtonEl = useRef();\n\n  const [state, setState] = useState({ anchorEl: null, query: \"\" });\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId;\n      props.history.push(`/${jobId}`);\n    }\n  }, []);\n\n  const open = Boolean(state.anchorEl);\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget });\n  };\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null });\n  };\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    });\n  };\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    });\n  };\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      // TODO: add validator here\n      handleSearch();\n    }\n  };\n\n  const handleClear = () => {\n    setState({ ...state, query: \"\" });\n  };\n\n  const handleSearch = event => {\n    const genes = state.query;\n    const sources = props.source.sources;\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return;\n    }\n\n    const sourceNames = sources.map(source => source.name);\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/);\n    props.searchActions.setQuery(genes);\n    props.searchActions.searchStarted({ geneList, sourceNames });\n  };\n\n  return (\n    <React.Fragment>\n      <Paper className={\"search-text-box\"} elevation={1}>\n        <IconButton\n          color={\"default\"}\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleClear}\n        >\n          <DeleteIcon />\n        </IconButton>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Enter gene list (or click an example below)\"\n          onChange={handleChange(\"query\")}\n          onKeyDown={handleKeyPress}\n          value={state.query}\n        />\n        <IconButton\n          ref={searchButtonEl}\n          className={classes.iconButton}\n          aria-label=\"Search\"\n          onClick={handleSearch}\n        >\n          <img\n            alt=\"Search icon\"\n            src={searchLogo}\n            style={{ height: \"1.25em\" }}\n          />\n        </IconButton>\n      </Paper>\n      <Typography\n        variant=\"caption\"\n        style={{ paddingTop: \"0.25em\" }}\n        color=\"textSecondary\"\n      >\n        <em>Try this pre-release version, send us </em>\n        <Link href={feedbackURL} target=\"_blank\">\n          <font color=\"#00A1DE\">\n            <em>feedback</em>\n          </font>\n        </Link>\n      </Typography>\n      <Typography\n        align=\"left\"\n        style={{ paddingLeft: \"7.25em\", paddingTop: \"1em\" }}\n      >\n        Query gene set examples:\n      </Typography>\n      <Tooltip title=\"Hypoxia description\" open={false}>\n        <Button onClick={() => handleExample(0)}>\n          <font color=\"#00A1DE\">Hypoxia</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Adenyl cyclase description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(1)}>\n          <font color=\"#00A1DE\">Adenyl Cyclase</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"D4DGI description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(2)}>\n          <font color=\"#00A1DE\">D4DGI</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Angiotensin description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(3)}>\n          <font color=\"#00A1DE\">Angiotensin</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Estrogen description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(4)}>\n          <font color=\"#00A1DE\">Estrogen</font>\n        </Button>\n      </Tooltip>\n    </React.Fragment>\n  );\n};\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SearchTextBox);\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from \"react\";\nimport \"./style.css\";\n\nimport SearchTextBox from \"./SearchTextBox\";\nimport Footer from \"./Footer\";\nimport LoadingPanel from \"../LoadingPanel\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport ndex from \"../../assets/images/ndex-logo.svg\";\nimport queryString from \"query-string\";\nimport { Tooltip } from \"@material-ui/core\";\nimport Link from \"@material-ui/core/Link\";\n\nconst feedbackURL = \"https://home.ndexbio.org/contact-us/\";\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search);\n    const genes = params.genes;\n\n    if (genes !== undefined) {\n      const geneList = genes.split(\",\");\n      props.searchActions.setQuery(genes);\n      props.searchActions.searchStarted({ geneList });\n    }\n\n    props.sourceActions.findSourceStarted();\n\n    return () => {};\n  }, []);\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={\"Searching Remote Database\"}\n        message={<div style={{ color: \"black\" }}>Please wait...</div>}\n      />\n    );\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <div\n          style={{\n            position: \"relative\",\n            paddingTop: \"0.1em\",\n            paddingBottom: \"2em\",\n\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginBottom: \"-0.5em\"\n          }}\n        >\n          <Typography align=\"center\" color=\"textSecondary\">\n            One search finds pathways, queries protein interaction networks,\n          </Typography>\n          <Typography align=\"center\" color=\"textSecondary\">\n            and discovers disease, drug, and tissue associations.\n          </Typography>\n          <Typography align=\"center\" color=\"textSecondary\">\n            Powered by NDEx and integrated with Cytoscape.\n          </Typography>\n        </div>\n        <div align=\"center\" className=\"inlineFlex\">\n          <img\n            className=\"start-logo-main\"\n            src={ndex}\n            alt=\"logo\"\n            style={{ height: \"8.75em\", paddingRight: \"1em\" }}\n          />\n          <div className=\"flex\">\n            <Typography\n              variant=\"h3\"\n              align=\"left\"\n              style={{\n                whiteSpace: \"noWrap\",\n                position: \"relative\",\n                top: \"0.1em\"\n              }}\n            >\n              NDEx Integrated Query\n            </Typography>\n            <Typography\n              align=\"left\"\n              style={{ position: \"relative\", left: \"0.25em\", top: \"-0.1em\" }}\n            >\n              v0.2 Pre-Release.\n            </Typography>\n          </div>\n        </div>\n\n        <div align=\"center\" style={{ paddingBottom: \"3em\", paddingTop: \"1em\" }}>\n          <SearchTextBox {...props} />\n        </div>\n      </div>\n      <div className=\"height\">\n        <div className=\"flex\">\n          <Typography variant=\"caption\" align=\"center\">\n            NDEx Integrated Query uses selected pathway and interactome networks\n            in NDEx to power gene set analysis.\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\">\n            The networks come from many different sources and new networks will\n            be continously added.\n          </Typography>\n          <Typography variant=\"caption\" align=\"center\">\n            Do you have a pathway or an interaction network that you would like\n            to include in these queries? Click{\" \"}\n            <Link href={feedbackURL} target=\"_blank\">\n              <font color=\"#00A1DE\">\n                <em>here</em>\n              </font>\n            </Link>{\" \"}\n            to find out how.\n          </Typography>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default StartPanel;\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell \n    {...props}\n  >\n    <StartPanel\n      {...props}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      {...props}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from \"redux-actions\";\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setSortOrder\n} from \"../actions/uiState\";\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: \"enrichment\",\n  sortOrder: [\"p-Value\", \"Overlap\"]\n};\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log(\"OPEN = \", payload.payload);\n      return { ...state, isSettingsOpen: payload.payload };\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload };\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload };\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload };\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      };\n    }\n  },\n  DEF_STATE\n);\n\nexport default uiState;\n","import { handleActions } from \"redux-actions\";\nimport { CxToJs, CyNetworkUtils } from \"cytoscape-cx2js\";\nimport { MAX_NETWORK_SIZE } from \"../components/Results/CytoscapeViewer\";\nimport * as vs from \"../assets/data/styles.json\";\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  fitNetworkView\n} from \"../actions/network\";\n\nconst defaultState = {\n  isFetching: false,\n  uuid: \"\",\n  jobId: \"\",\n  sourceId: \"\",\n  networkName: \"\",\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0,\n  fit: false\n};\n\nconst utils = new CyNetworkUtils();\nconst cx2js = new CxToJs(utils);\n\nconst PRESET_VS = vs.default[0].style;\n\n// Standard selection\nPRESET_VS.push({\n  selector: \"node:selected\",\n  css: {\n    \"background-color\": \"red\",\n    color: \"#FFFFFF\",\n    \"background-opacity\": 1,\n    \"border-width\": 0,\n    width: 100,\n    height: 100\n  }\n});\n\n// For class-based style update\nconst fadedNode = {\n  selector: \"node.faded\",\n  css: {\n    opacity: 0.9\n  }\n};\n\nconst fadedEdge = {\n  selector: \"edge.faded\",\n  css: {\n    opacity: 0.9\n  }\n};\n\nconst highlight = {\n  selector: \".highlight\",\n  css: {\n    opacity: 1.0,\n    \"overlay-color\": \"#C51162\",\n    \"overlay-padding\": 12,\n    \"overlay-opacity\": 0.5\n  }\n};\n\nconst activeObject = {\n  selector: \"node:active\",\n  css: {\n    \"overlay-color\": \"#FFFF66\",\n    \"overlay-padding\": 25,\n    \"overlay-opacity\": 0.3\n  }\n};\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log(\"Query start: genes = \", payload);\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: \"\",\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0\n      };\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx;\n      let network = {};\n      let backgroundColor = {};\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes);\n          network = cyjsNetwork;\n        } catch (err) {\n          // This is an error state\n          console.warn(\"Could not convert given CX to CYJS:\", err);\n          throw new Error(\"Could not convert given CX to CYJS:\", err);\n        }\n\n        backgroundColor = getBackGround(originalCX);\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      };\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      };\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: \"\",\n        networkName: \"\",\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      };\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      };\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: []\n      };\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      };\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: []\n      };\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      };\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      };\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      };\n    },\n    [fitNetworkView]: (state, payload) => {\n      return {\n        ...state,\n        fit: payload.payload\n      };\n    }\n  },\n  defaultState\n);\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx);\n  const attributeNameMap = {};\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap);\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap);\n\n  const newStyle = styleUpdater(style);\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes);\n  const elements = [...updatedNodes, ...elementsObj.edges];\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  };\n};\n\nconst VS_TAG = \"cyVisualProperties\";\nconst getBackGround = cx => {\n  let color = \"#FFFFFF\";\n\n  const vps = cx.filter(entry => entry[VS_TAG]);\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0];\n    const allVp = vp[VS_TAG];\n    const networkVp = allVp.filter(p => p[\"properties_of\"] === \"network\");\n    return networkVp[0].properties[\"NETWORK_BACKGROUND_PAINT\"];\n  } else {\n    return color;\n  }\n};\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length;\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()));\n\n  while (len--) {\n    const node = nodes[len];\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null;\n    if (upperQuery.has(name)) {\n      node.data[\"query\"] = \"true\";\n    }\n  }\n  return nodes;\n};\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0];\n  if (node.position === undefined) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst styleUpdater = style => {\n  style.push(fadedNode);\n  style.push(fadedEdge);\n  style.push(highlight);\n  style.push(activeObject);\n  return style;\n};\n\nexport default network;\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst cyrest = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default cyrest\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['interactome-ppi']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (\n    sourceNames === undefined ||\n    sourceNames === null ||\n    sourceNames.length === 0\n  ) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n\n      // This will be true if all results are finished (100%)\n      let allDone = false\n\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          allDone = true\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        } else {\n          allDone = false\n        }\n      }\n\n      if (allDone) {\n        break\n      }\n\n      // Wait 1 sec. and try API call again.\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n    const orderedSources = json.results\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  // This is for avoiding too many unnecessary state updates.\n  let currentConnectionState = false\n\n  while (true) {\n    try {\n      yield call(cyrest.status, 1234)\n\n      if (currentConnectionState !== true) {\n        yield put({ type: SET_AVAILABLE, payload: true })\n      }\n    } catch (e) {\n      if (currentConnectionState === true) {\n        yield put({ type: SET_AVAILABLE, payload: false })\n      }\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}