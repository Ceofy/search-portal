{"version":3,"sources":["assets/images/cytoscape-logo.svg","assets/images/ndex-logo-mono.svg","assets/images/cytoscape-logo-mono.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","api/apiConstants.js","api/cyrest.js","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/MessageSnackbar.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","handleClick","geneSymbol","props","searchActions","setSelectedGenes","getChip","value","isValid","classes","hitSets","color","has","symbol","react_default","a","createElement","Chip_default","className","chip","avatar","Avatar_default","label","onClick","variant","key","withStyles","theme","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","sortBySymbol","b","matchedSorted","sort","unmatchedSorted","sorted","concat","Object","toConsumableArray","event","console","log","target","handleClear","map","InputPanel","components_GeneList","Empty","index_es","Warning","cyInstance","PRESET_LAYOUT","name","padding","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","useEffect","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","source","$","addClass","selectEdge","uiStateActions","setHighlights","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","width","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","filter","react_cytoscape_default","style","stylesheet","cy","LoadingPanel","Typography_default","title","message","CircularProgress_default","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","id","tag","curState","_this","setState","defineProperty","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","button","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toLowerCase","get","React","Component","marginLeft","marginTop","paddingLeft","NodeProperties","makeStyles","container","overflow","list","subtitle","TableBrowser_GeneAnnotationList","assign","EdgeProperties","removeHtmlTags","dataType","d","startsWith","originalText","v","replace","NetworkProperties","originalCX","len","networkAttr","networkAttributes","Math","random","n","useStyles","DISABLED_STYLE","TableBrowser","selectedNode","selectedEdge","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","minWidth","cyrest","handleImportNetwork","disabled","uuid","available","disableFocusListener","Button_default","alt","src","logoDisabled","logo","paddingRight","maxWidth","marginRight","_useState","useState","_useState2","slicedToArray","highlight","setHighlight","evt","WbIncandescent_default","ndexSaveActions","setNDExModalOpen","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","saveToNDEx","cx","token","handleClose","networkUrl","_this2","_this$props","ndexSave","profile","authorization","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","type","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","item","xs","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","setProfile","preventDefault","credentialsSignOn","handleOnSuccess","resp","googleSignOn","setErrorMessage","_this$props4","others","objectWithoutProperties","open","ndexModal","onClose","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","toolbar","grow","flexGrow","menuButton","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","paddingBottom","transition","transitions","create","&:focus","buttons","border","openIcon","networkName","noWrap","Ndex_Highlighter","components_NDExSignInModal","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","DEFAULT_RATIO","NetworkView","resized","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","onChange","objectSpread","option","MenuItem_default","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","query","MenuList_default","BASE_URL","importNetwork","cyRESTPort","payload","importNetworkUrl","CYREST_BASE_URL","fetch","method","headers","Accept","Content-Type","body","Ndex","queryList","sourceUUID","jobId","checkCytoscapeConnection","statusUrl","cyRESTApi","port","catch","Error","then","res","handleErrors","running","cyrestActions","setAvailable","updateHistory","networkUUID","searchResults","sourceName","selectedSource","history","Ndex_NetworkList","querySize","networkEntry","edges","imageURL","rank","pVal","PValue","descriptionText","descriptionText2","pValText","toExponential","val","networkFetchStarted","handleFetch","listTitle","Ndex_NetworkView","importNetworkStarted","sourceId","TabContent","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","newValue","setSelectedSource","Results_Empty","selectedSourceName","Tabs_default","networkClear","Tab_default","Results_TabContent","MessageSnackbar","reason","setOpen","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","input","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","setQuery","_useState3","_useState4","loadCSS","document","querySelector","handleSearch","sourceNames","geneListString","split","clearAll","searchStarted","AppShell_MessageSnackbar","Paper_default","elevation","getElementById","execCommand","Icon_default","classNames","icon","Delete_default","InputBase_default","onKeyDown","ref","Search_default","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","Menu_default","AppShell_GeneTextBox","aria-haspopup","Home_default","fontSize","openLink","HELP_URL","Help_default","NDEX_URL","ndexLogo","url","window","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","status","text","index","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","cyrestport","URLSearchParams","location","setPort","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","_props$search","searchResult","components_AppShell","components_Results","components_InputPanel","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","createAction","clearQuery","searchSucceeded","searchFailed","setSearchResult","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","SET_SELECTED_SOURCE","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","networkFetchSucceeded","networkFetchFailed","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","SET_AVAILABLE","SET_NDEX_MODAL_OPEN","SET_PROFILE","CREDENTIALS_SIGN_ON","GOOGLE_SIGN_ON","SAVE_TO_NDEX","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","searchButtonEl","anchorEl","Boolean","repaceDelimiters","currentTarget","core_Menu_default","transformOrigin","example","exampleIdx","CY_URL","UCSD_URL","Footer","cyLogo","ucsdLogo","StartPanel","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","_handleActions","singleResult","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","properties","upperQuery","gene","toUpperCase","source_handleActions","isFetchingSource","cyrest_handleActions","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","searchGenes","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","join","all","myGeneApi","filterGenes","put","uniqueGeneMap","t0","_marked2","sleep","ms","Promise","resolve","setTimeout","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","reducedSources","orderedSources","_context5","includes","firstEl","secondEl","indexOf","_marked5","Map","notfound","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","forEach","aspect","numberVerification","longNumber","cyRestSaga_marked2","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","endsWith","ndexSaveSaga_marked2","user","pwd","auth","responseJson","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e6fcd21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort(sortBySymbol)\n  const unmatchedSorted = unmatched.sort(sortBySymbol)\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>Query Genes</div>\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\n\nimport './style.css'\nimport Warning from './Warning'\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.deselectAll()\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        props.networkActions.selectNode(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n\n        props.networkActions.selectEdge(selected)\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined || targets.length === 0) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    } else {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 10\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: 'teal'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    console.log('OPEN === ', id)\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toLowerCase()\n    console.log('** LIST = ', symbol, geneList)\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>G</Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    console.log('PW===', pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    height: '100%',\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    height: '100%',\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst NodeProperties = props => {\n  const { node } = props\n  const keys = Object.keys(node)\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst LIST_DATA_PREFIX = 'list_of'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let len = originalCX.length\n  let networkAttr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry.networkAttributes) {\n      networkAttr = entry.networkAttributes\n      break\n    }\n  }\n\n  if (networkAttr === null) {\n    return\n  }\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={Math.random()}>\n          <ListItemText\n            inset\n            primary={removeHtmlTags(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst removeHtmlTags = entry => {\n  let dataType = entry.d\n\n  if (dataType === undefined) {\n    dataType = 'string'\n  }\n\n  if (dataType.startsWith(LIST_DATA_PREFIX)) {\n    return '(list not supported)'\n  }\n\n  const originalText = entry.v\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    width: '5em',\n    minWidth: '5em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  const { classes, cyrest, handleImportNetwork } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) || !cyrest.available\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open this network in Cytoscape Desktop\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img\n            alt=\"Cytoscape logo\"\n            src={disabled ? logoDisabled : logo}\n            className={classes.buttonIcon}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)\n","import React, { useState } from 'react'\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    paddingRight: '0.2em'\n  },\n  button: {\n    height: '3em',\n    maxWidth: '13em',\n    minWidth: '13em',\n    marginRight: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n\n  const [highlight, setHighlight] = useState(true)\n\n  const handleChange = evt => {\n    setHighlight(!highlight)\n    props.uiStateActions.setHighlights(!highlight)\n  }\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"outlined\"\n      color={highlight ? 'secondary' : 'default'}\n      onClick={handleChange}\n    >\n      <HighlightIcon\n        className={classes.buttonIcon}\n        color={highlight ? 'secondary' : 'disabled'}\n      />\n      Highlight Genes\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(Highlighter)\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    width: '5em',\n    marginRight: '0.5em',\n    minWidth: '5em'\n  }\n})\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInNDExButton)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { ndexSave, network } = this.props\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    console.log('NDExSave render token' + token)\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button href={networkUrl} target=\"_blank\">\n              Open in NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default withStyles(styles)(NDExSave)\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nconst styles = theme => ({})\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const { ndexSave } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...others} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NDExSignInModal)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport Highlighter from './Highlighter'\nimport { Tooltip } from '@material-ui/core'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <NDExSignInModal {...others}>\n        <NDExSave {...others} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...others} />\n      <OpenInCytoscapeButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network, search } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const query = search.results.genes\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(query.size, entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\nexport const BASE_URL = 'http://dev.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport { ListItem } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Paper from '@material-ui/core/Paper'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const checkCytoscapeConnection = props => {\n    cyRESTApi\n      .status(props.cyrest.port)\n      .catch(e => {\n        throw Error(e)\n      })\n      .then(res => handleErrors(res))\n      .then(running => {\n        props.cyrestActions.setAvailable(true)\n      })\n      .catch(error => {\n        props.cyrestActions.setAvailable(false)\n      })\n  }\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    const pVal = details.PValue\n    let descriptionText =\n      'N: ' +\n      nodes +\n      ', E: ' +\n      edges +\n      ',  Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let descriptionText2 = ''\n\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(5)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      descriptionText2 = 'P-value = ' + pValText\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography component=\"span\" variant=\"caption\">\n                {'Rank ' + (rank+1)}\n              </Typography>\n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant={'caption'}>\n                  {descriptionText}\n                </Typography>\n              </Tooltip>\n              <Typography component=\"span\" variant={'caption'}>\n                {descriptionText2}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\nimport Ndex from './Ndex'\n\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const { results } = props\n\n  if (results === null || results === undefined) {\n    return <LoadingPanel title={'Loading results'} message={'Please wait...'} />\n  } else {\n    const { sourceUUID } = results\n    return <Ndex hits={results.results} sourceUUID={sourceUUID} {...props} />\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, idx)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  const { classes, ...others } = props\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const { searchResults } = props.search\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    props.setOpen(false)\n  }\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.open}\n      autoHideDuration={4000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">Genes are copied to clipboard!</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/ /)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar open={open} setOpen={setOpen} />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo-mono.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport HomeIcon from '@material-ui/icons/Home'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  ndexLogo: {\n    height: '1em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n\n\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={this.handleHomeButton}\n            >\n              <HomeIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              color=\"default\"\n              aria-label=\"Home\"\n              onClick={() => openLink(NDEX_URL)}\n            >\n              <img alt=\"NDEx logo\" src={logo} className={classes.ndexLogo} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const { isFetching, searchResult } = props.search\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\nexport const setAvailable = createAction(SET_AVAILABLE)\n","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx],\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                Gene List {idx + 1}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: ''\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  setAvailable,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState = {\n  available: false,\n  port: 1234,\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: payload.payload }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n    console.log('responseJson', responseJson)\n\n    console.log('headers', resp.headers.get('Authorization'))\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID } from './analytics'\n\nReactGA.initialize(GA_DEV_ID, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // Production\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}