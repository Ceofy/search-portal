{"version":3,"sources":["assets/images/cytoscape-logo.svg","assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/ndex-logo-mono.svg","assets/images/cytoscape-logo-mono.svg","assets/images/nrnb-logo.svg","assets/images/wp-logo.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setActualResults","setSettingsOpen","setServicesListOpen","setHighlights","setZoomed","setSelectedSource","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","setPort","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","makeStyles","theme","chip","margin","backgroundColor","listPadding","paddingTop","paddingBottom","padding","borderRadius","height","borderWidth","selectedButtonStyle","selectedChipStyle","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","classes","props","hitSets","color","found","has","symbol","Chip","className","avatar","Avatar","variant","key","selected","style","clickable","connect","state","search_results","search","results","search_selectedGenes","selectedGenes","network_hitGenes","network","hitGenes","dispatch","searchActions_clearSelectedGenes","payload","searchActions_setSelectedGenes","hits","Set","handleChange","event","newAlignment","geneList","genes","matched","unmatched","values","push","matchedSorted","sort","reverse","unmatchedSorted","sorted","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","InputPanel","Empty","Typography","Warning","cyInstance","PRESET_LAYOUT","name","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","uiState_zoomed","uiState","zoomed","uiState_highlights","highlights","network_nodeCount","nodeCount","network_edgeCount","edgeCount","network_backgroundColor","network_network","uiStateActions_setZoomed","uiStateActions_setHighlights","networkActions_changeTab","networkActions_selectNodes","networkActions_unselectNodes","networkActions_selectEdges","networkActions_unselectEdges","useEffect","nodeTimeout","nodeUnselectTimeout","edgeTimeout","undefined","on","nodes","removeClass","target","console","log","e","warn","this","data","source","$","addClass","clearTimeout","setTimeout","forEach","element","edges","edgeUnselectTimeout","targets","elements","length","animate","zoom","center","eles","duration","fit","cyjs","networkAreaStyle","width","background","isLayoutAvailable","isLayout","layout","resize","filter","stylesheet","cy","LoadingPanel","title","message","CircularProgress","size","network_isFetching","isFetching","resized","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","entry","toString","findAttributes","originalCX","attrType","len","attr","index","useStyles","container","overflow","boxSizing","paddingLeft","lessPadding","ExpansionPanel","root","boxShadow","borderBottom","display","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","marginTop","marginLeft","marginRight","MuiExpansionPanelSummary","extractContent","modifiedText","v","Array","isArray","join","extractTitle","n","formatPrimary","startsWith","endsWith","parse","newTab","formatContext","splitResults","split","item","network_originalCX","networkAttr","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","displayed","rightDisplay","list","currentEntry","secondaryString","primaryString","ListItemText","primary","Fragment","leftDisplay","component","expandIcon","ExpansionPanelDetails","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","id","tag","curState","setState","getListItem","geneEntry","description","summary","alignItems","_id","onClick","ListItemAvatar","secondary","inline","ListItemSecondaryAction","linkIcon","IconButton","aria-label","href","Tooltip","placement","getListChildren","pathway","pathwaySources","Object","keys","Collapse","in","getPathwayStateTag","timeout","unmountOnExit","disablePadding","dbName","pathways","pwEntry","button","nested","ListItemIcon","inset","getNotFound","notFound","Divider","getUnmatchedListItem","geneSymbol","get","React","Component","spacing","unit","noPadding","justifyContent","wideList","lessListPadding","table","tableLayout","paddingRight","network_selectedNodes","selectedNodes","useState","defaultExpanded","setDefaultExpanded","entityProperties","nodeProperties","displayItems","sortedNodes","a","b","topDisplay","geneAnnotation","colSpan","valign","disableGutters","displayCol1","displayCol2","findNode","nodeId","nodeArray","isNaN","network_selectedEdges","selectedEdges","nodeList","edgeProperties","sortedEdges","aScore","bScore","c","lassName","subtitle","TabContent","DISABLED_STYLE","network_tableDisplayTab","tableDisplayTab","i","Tabs","newValue","Tab","MessageSnackbar","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","action","BootstrapButton","borderColor","Button","cyrest_available","cyrest","available","cyrest_isLoadingNetwork","isLoadingNetwork","cyrest_lastResponse","lastResponse","network_uuid","uuid","cyrestActions_startCyrestPolling","cyrestActions_stopCyrestPolling","buttonIcon","minWidth","disabled","setMessage","cycleId","type","currentId","disableFocusListener","handleImportNetwork","alt","src","logoDisabled","logo","disabledLogo","textAlign","lignHeight","position","top","highlight","evt","ndexSaveActions_setNDExModalOpen","NDExSave","cx","token","ndexSaveActions_saveToNDEx","networkUrl","ndexSave_profile","authorization","ndexSave_networkUrl","DialogContentText","DialogActions","ndexSave","profile","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","err","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","clientId","render","renderProps","buttonText","CredentialsSignOn","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","handleError","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal","onLogout","ndexSaveActions_setProfile","preventDefault","ndexSaveActions_credentialsSignOn","handleOnSuccess","resp","ndexSaveActions_googleSignOn","ndexSaveActions_setErrorMessage","Dialog","ndexSave_ndexModal","aria-labelledby","image","ndexSave_errorMessage","ndexModal","errorMessage","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","fontSize","network_networkName","networkName","toolbar","grow","flexGrow","menuButton","breakpoints","up","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","buttons","border","openIcon","noWrap","DEFAULT_RATIO","NetworkView","setResize","direction","onDragEnd","BootstrapInput","input","textColor","InputBase","formStyle","left","divStyle","typeStyle","selectStyle","uiState_selectedSource","selectedSource","uiStateActions_setSortOrder","sortPValueOn","setSortPValueOn","Select","displayEmpty","MenuItem","uiState_sortOrder","sortOrder","network_listIndex","listIndex","search_results_genes","search_actualResults","actualResults","searchActions_setActualResults","networkActions_changeListIndex","networkAvatar","menuItem","menuText","plot","sortFunction","PValue","newHits","handleListItemClick","selectedIndex","query","renderNetworkListItem","MenuList","network_sourceId","sourceId","search_queryList","queryList","search_searchResults","searchResults","networkActions_networkFetchStarted","cyrestActions_importNetworkStarted","sourceUUID","jobId","updateHistory","networkUUID","sourceName","history","querySize","networkEntry","imageURL","rank","topDescription","bottomDescription1","bottomDescription2","pVal","pValText","toExponential","handleFetch","listTitle","getSourceName","sources","idx","findResult","resultArray","currentResult","source_sources","networkActions_networkClear","uiStateActions_setSelectedSource","tabs","setSelectedTabIndex","selectedSourceName","search_queryGenes","queryGenes","searchActions_clearAll","searchActions_setQuery","searchActions_searchStarted","flex","iconButton","divider","geneTextRef","useRef","queryText","loadCSS","document","querySelector","handleSearch","sourceNames","elevation","getElementById","select","execCommand","Icon","classNames","icon","onKeyDown","ref","titleStyle","TitleBar","handleMenu","uiStateActions_setSettingsOpen","uiState_isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","textBox","aria-haspopup","openLink","HELP_URL","NDEX_URL","CYTOSCAPE_URL","cytoLogo","NRNB_URL","nrnbLogo","WP_URL","wpLogo","isSettingsOpen","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","uiState_servicesListOpen","uiStateActions_setServicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","sourceEntry","version","status","text","LINKS","link","github","flexShrink","cyrestActions_setPort","drawerHeader","mixins","contentShift","cyrestport","URLSearchParams","history_location_search","CssBaseline","children","search_isFetching","search_searchResult","searchResult","searchActions_fetchResultStarted","onpopstate","onBackButtonEvent","location","MainContainer","listen","pathname","ReactGA","set","page","pageview","EXAMPLES","examples","searchButtonEl","anchorEl","Boolean","currentTarget","transformOrigin","example","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","search_isSearching","isSearching","sourceActions_findSourceStarted","queryString","location_search","ndex","TopPage","TopPageContainer","Top","App","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","singleResult","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","fadedNode","opacity","fadedEdge","activeObject","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","p","upperQuery","gene","isFetchingSource","currentSource","port","isFetchingAvailable","isPollingAvailable","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","takeLatest","call","cySearchApi","sourceJson","geneListString","all","myGeneApi","geneRes","searchRes","geneJson","resultLocation","parts","filtered","filterGenes","put","uniqueGeneMap","sleep","ms","Promise","resolve","statusRes","statusJson","progress","resultRes","resultJson","json","params","api","reducedSources","includes","orderedSources","firstEl","secondEl","indexOf","Map","notfound","cyRESTPort","statusUrl","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","getCyRESTPort","addNumberVerification","aspect","patchedCX","numberVerification","longNumber","concat","responseJson","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","take","race","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","user","basicAuthSignIn","accountName","pwd","password","auth","btoa","firstName","responseText","networkURL","initialize","gaOptions","siteSpeedSampleRate","EventActions","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","next","run","cyRestSaga","cyRestStatusSaga","basename","process","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05ec6940.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\nexport const SET_ZOOMED = 'SET_ZOOMED'\nexport const setZoomed = createAction(SET_ZOOMED)\n\nexport const RESET_ZOOMED = 'RESET_ZOOMED'\nexport const resetZoomed = createAction(RESET_ZOOMED)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport { clearSelectedGenes, setSelectedGenes } from '../../actions/search';\n\nconst useStyles = makeStyles(theme => ({\n  chip: {\n    margin: '0',\n    backgroundColor: '#000000'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '22'\n  },\n}))\n\nconst buttonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: '#FFFFFF'\n}\n\nconst selectedButtonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: 'rgb(252, 235, 242)',\n}\n\nconst selectedChipStyle = {\n  margin: '0',\n  borderRadius: '20px',\n}\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: 'transparent'\n}\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: 'transparent',\n  },\n})(MuiToggleButton);\n\n/*\nconst handleClear = (event, props) => {\n  console.log('#### Clear selection', event.target.value)\n  props.searchActions_clearSelectedGenes()\n  //props.searchActions.setSelectedGenes([])\n}\n*/\nconst GeneList = props => {\n  const classes = withStyles()\n\n  const results = props.search_results\n  const hits = props.network_hitGenes\n  const hitSets = new Set(hits)\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search_selectedGenes[0]) {\n      props.searchActions_clearSelectedGenes()\n    } else {\n      props.searchActions_setSelectedGenes(newAlignment)\n    }\n  }\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort().reverse()\n  const unmatchedSorted = unmatched.sort().reverse()\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup \n              value={props.search_selectedGenes} \n              exclusive \n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton \n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) && props.search_selectedGenes[0] === geneValue.symbol ?\n                    selectedButtonStyle\n                  : \n                    buttonStyle\n                }\n                className={classes.label}\n              >\n                {getChip(geneValue, true, classes, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>{found ? <CheckIcon /> : '-'}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        key={value}\n        clickable={true}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    search_results: state.search.results,\n    search_selectedGenes: state.search.selectedGenes,\n    network_hitGenes: state.network.hitGenes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_clearSelectedGenes: (payload) => dispatch(clearSelectedGenes(payload)),\n    searchActions_setSelectedGenes: (payload) => dispatch(setSelectedGenes(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GeneList)","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>Query Genes</div>\n      <GeneList />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\nimport './style.css'\nimport Warning from './Warning'\nimport { connect } from 'react-redux'\nimport { setZoomed, setHighlights } from '../../../actions/uiState'\nimport { changeTab, selectNodes, unselectNodes, selectEdges, unselectEdges } from '../../../actions/network'\nimport { clearSelectedGenes } from '../../../actions/search'\n\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst COCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const highlights = props.uiState_highlights\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions_changeTab(0)\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    let nodeTimeout\n    cyInstance.on('select', 'node', function() {\n      clearTimeout(nodeTimeout)\n      nodeTimeout = setTimeout(function() {\n        const nodes = []\n        const selectedNodes = cyInstance.$('node:selected')\n        selectedNodes.forEach(element => {\n          if (element.data().name != '') {\n            nodes.push(element.data())\n          }\n        })\n        props.networkActions_selectNodes(nodes)\n      }, 1)\n    })\n\n    let nodeUnselectTimeout\n    cyInstance.on('unselect', 'node', function() {\n      clearTimeout(nodeUnselectTimeout)\n      nodeUnselectTimeout = setTimeout(function() {\n        const nodes = []\n        const selectedNodes = cyInstance.$('node:selected')\n        selectedNodes.forEach(element => {\n          if (element.data().name != '') {\n            nodes.push(element.data())\n          }\n        })\n        props.networkActions_unselectNodes(nodes)\n      }, 1)\n    })\n\n    let edgeTimeout\n    cyInstance.on('select', 'edge', function() {\n      clearTimeout(edgeTimeout)\n      edgeTimeout = setTimeout(function() {\n        const edges = []\n        const selectedEdges = cyInstance.$('edge:selected')\n        selectedEdges.forEach(element => {\n          edges.push(element.data())\n        })\n        props.networkActions_selectEdges(edges)\n      }, 1)\n    })\n\n    let edgeUnselectTimeout\n    cyInstance.on('unselect', 'edge', function() {\n      clearTimeout(edgeUnselectTimeout)\n      edgeTimeout = setTimeout(function() {\n        const edges = []\n        const selectedEdges = cyInstance.$('edge:selected')\n        selectedEdges.forEach(element => {\n          edges.push(element.data())\n        })\n        props.networkActions_unselectEdges(edges)\n      }, 1)\n    })\n\n    // Reset the UI state (hilight)\n    props.uiStateActions_setHighlights(true)\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search_selectedGenes\n    if (targets === null || targets === undefined) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n\n    if (targets.length === 0) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search_selectedGenes])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const zoom = props.uiState_zoomed\n    if (zoom === null || zoom === undefined) {\n      return\n    }\n\n    if (zoom) {\n      props.searchActions_clearSelectedGenes()\n      props.uiStateActions_setZoomed(false)\n    }\n  }, [props.uiState_zoomed])\n\n  const numObjects = props.network_nodeCount + props.network_edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning />\n  }\n\n  const cyjs = props.network_network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network_backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = COCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_zoomed: state.uiState.zoomed,\n    uiState_highlights: state.uiState.highlights,\n\n    network_nodeCount: state.network.nodeCount,\n    network_edgeCount: state.network.edgeCount,\n    network_backgroundColor: state.network.backgroundColor,\n    network_network: state.network.network,\n\n    search_selectedGenes: state.search.selectedGenes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uiStateActions_setZoomed: (payload) => dispatch(setZoomed(payload)),\n    uiStateActions_setHighlights: (payload) => dispatch(setHighlights(payload)),\n\n    networkActions_changeTab: (payload) => dispatch(changeTab(payload)),\n    networkActions_selectNodes: (payload) => dispatch(selectNodes(payload)),\n    networkActions_unselectNodes: (payload) => dispatch(unselectNodes(payload)),\n    networkActions_selectEdges: (payload) => dispatch(selectEdges(payload)),\n    networkActions_unselectEdges: (payload) => dispatch(unselectEdges(payload)),\n\n    searchActions_clearSelectedGenes: (payload) => dispatch(clearSelectedGenes(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (CytoscapeViewer)\n\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\nimport { connect } from 'react-redux'\n\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network_isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer \n        resized={props.resized}\n      />\n    )}\n  </div>\n)\n\nconst mapStateToProps = state => {\n  return {\n    network_isFetching: state.network.isFetching\n  }\n}\n\nexport default connect(\n  mapStateToProps\n) (NetworkViewer)\n","export const camelCaseToTitleCase = (camelCaseString) => {\n    if (camelCaseString.slice(0, 4) === \"http\" ||\n        camelCaseString.slice(0, 5) === 'Prov:') {\n        return camelCaseString\n    }\n    let result = camelCaseString\n        .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")           \n        .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")           \n        .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")          \n        .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")     \n        .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")  \n        .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n        .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\") \n        .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")      \n        .trim();\n    result = result.charAt(0).toUpperCase() + result.slice(1)\n    result = result.replace('Wiki Pathways', 'WikiPathways')\n        .replace('Wikipathways', 'WikiPathways')\n        .replace('Sbo ', 'SBO ')\n    return result\n  }","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","import React from 'react'\nimport Split from 'react-split'\nimport { connect } from 'react-redux'\n\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { stripScripts }  from './strip-scripts-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '16px',\n    paddingTop: '12px'\n  },\n  lessPadding: {\n    paddingTop: '2.49px'\n  }\n}))\n\n//Expansion panel styling\nconst ExpansionPanel = withStyles({\n  root: {\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: '10px',\n    height: '26px',\n    minHeight: 0,\n    '&$expanded': {\n      minHeight: 0,\n    },\n  },\n  content: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '-9px',\n    marginRight: 0,\n    '&$expanded': {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: '-9px',\n      marginRight: 0,\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.network_originalCX\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = [\n    'Name',\n    'Description',\n    'Reference',\n    '@context'\n  ]\n  const properties = [\n    'Organism',\n    'Cell',\n    'Disease'\n  ]\n  const contributors = [\n    'Author',\n    'Reviewers',\n    'Rights Holder',\n    'Rights',\n  ]\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const networkInformation = [\n    'Version',\n    'Network Type',\n    'Labels'\n  ]\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ]\n  \n\n  //Filter properties\n  const attributes = []\n  let content;\n  let title;\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      attributes.push({\n        title: camelCaseToTitleCase(title),\n        content: content,\n        displayed: false\n      })\n    } else if (title === 'name') {\n      attributes.push({\n        title: 'Name',\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null){\n        primaryString += \n          currentEntry.title + \n          \": \" + \n          currentEntry.content + \n          \"<br>\"\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch(list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n      }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString != '') {\n      rightDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <React.Fragment>\n            <div className={classes.padding}>\n            <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n              @context\n            </Typography>\n            </div>\n            <ExpansionPanel>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon/>}\n              >\n                <Typography component=\"span\" variant=\"body2\">\n                  Click to view the namespaces associated with this network\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n                  {primaryString}\n                </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n\n      <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n        <div className={'network-info-panel'}>\n          <List className={classes.lessPadding}>\n            \n              {leftDisplay}\n            \n          </List>\n        </div>\n        <div className={'network-info-panel'}>\n          <List className={classes.lessPadding}>\n            \n              {rightDisplay}\n            \n          </List>\n        </div>\n      </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return <Linkify key={'link' + index++} newTab={true}>{modifiedText}</Linkify>\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  let splitResults\n  let result = '<table>'\n  elements.forEach(item => {\n    splitResults = item.split(\"\\\"\")\n    result += \n      '<tr><td>' +\n      splitResults[1] +\n      '</td><td>' +\n      splitResults [3] +\n      '</td></tr>'    \n  })\n  result += '</table>'\n  return formatPrimary(result)\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_originalCX: state.network.originalCX\n  }\n}\n\nexport default connect(\n  mapStateToProps\n) (NetworkProperties)","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n            >\n              {geneEntry.symbol}\n            </Typography>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                variant=\"caption\"\n              >\n                {camelCaseToTitleCase(geneEntry.name)}\n              </Typography>\n              <Typography variant=\"body2\" color='textPrimary'>\n                {description}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport isEqual from 'lodash.isequal'\nimport { connect } from 'react-redux'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nimport GeneAnnotationList from './GeneAnnotationList'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0',\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    width: '100%',\n    padding: '0 0 0 0'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '16px'\n  },\n  lessListPadding: {\n    paddingTop: '0',\n    paddingBottom: '4px'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nconst ExpansionPanel = withStyles({\n  root: {\n    borderBottom: '1px solid rgba(239, 239, 239, 1)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: -1,\n    minHeight: 35,\n    '&$expanded': {\n      minHeight: 35,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n  const nodes = props.network_selectedNodes\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Name',\n    'HGNC',\n    'Ensembl',\n    'Type',\n  ]\n\n  const nodeProperties = [\n    'Height',\n    'Width',\n    'Shape',\n    'Is GPML Shape',\n    'Color',\n    'Fill Color',\n    'Transparent',\n    'Border Thickness',\n    'Border Style',\n    'Label Size',\n    'Label Font',\n    'Id'\n  ]\n\n  const displayItems = [\n    entityProperties,\n    nodeProperties\n  ]\n\n  const sortedNodes = nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedNodes.forEach(node => {\n  \n    //Filter properties\n    const attributes = []\n    let content;\n    let title;\n    let geneAnnotation = null\n    let inset = false\n    if (\n      props.search_results != null &&\n      props.search_results.genes.get(node.name) != null\n    ) {\n      inset = true\n      geneAnnotation = (\n        <tr>\n          <td colSpan={2} valign={'top'}>\n            <List className={classes.noPadding}>\n              <ListItem \n                key={index++} \n                className={classes.lessListPadding} \n                disableGutters={true}\n              >\n                <GeneAnnotationList \n                  search_results={props.search_results}\n                  geneSymbol={node.name} \n                />\n              </ListItem>\n            </List>\n          </td>\n        </tr>\n      )\n    }\n    for (let key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== '') {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString += \n            currentEntry.title + \n            \": \" +\n            currentEntry.content +\n            \"<br>\"\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString != '') {\n        switch(list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem \n                key={index++} \n                className={classes.listPadding}\n              >\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">\n                          {primaryString}\n                        </Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n          break\n          case nodeProperties:\n            secondaryString = 'Node Properties'\n            displayCol2.push(\n              <ListItem \n                key={index++} \n                className={classes.listPadding} \n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">\n                          {primaryString}\n                        </Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n          break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString +=\n          entry.title +\n          \": \" +\n          entry.content +\n          \"<br>\"\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = \"Additional properties\"\n\n    if (primaryString != '') {\n      displayCol1.push(\n        <ListItem \n          key={index++} \n          className={classes.listPadding}\n        >\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  \n    topDisplay.push(\n      <ListItem \n        key={node.id} \n        disableGutters={true} \n        className={classes.noPadding}\n      >\n        <ListItemText\n          className={classes.wideList}\n          primary={\n            <ExpansionPanel \n              defaultExpanded={defaultExpanded}\n              setDefaultExpanded={setDefaultExpanded}\n            >\n              <ExpansionPanelSummary \n                expandIcon={<ExpandMoreIcon/>}\n              >\n                <Typography variant=\"body2\">\n                  {node.name}\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails \n                className={classes.noPadding}\n              >\n                <table className={classes.table}>\n                  {geneAnnotation}\n                  <tr>\n                    <td valign={'top'}>\n                      {displayCol1}\n                    </td>\n                    <td valign={'top'}>\n                      {displayCol2}\n                    </td>\n                  </tr>\n                </table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          }\n        />\n      </ListItem>\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length == 0) {\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length == 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>\n            {topDisplay}\n          </List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>\n              {topDisplay}\n            </List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return <Linkify key={'link' + index++} newTab={true}>{modifiedText}</Linkify>\n}\n\n/*const MemoNodeProperties = React.memo(NodeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network_selectedNodes, newProps.network_selectedNodes)\n})*/\n\nconst mapStateToProps = state => {\n  return {\n    network_selectedNodes: state.network.selectedNodes,\n    search_results: state.search.results\n  }\n}\n\nexport default connect(\n  mapStateToProps\n) (NodeProperties)","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport isEqual from 'lodash.isequal'\nimport { connect } from 'react-redux'\n\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  padding: {\n    paddingTop: '0',\n    paddingBottom: '0',\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    width: '100%',\n    padding: '0 0 0 0'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '16px'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nconst ExpansionPanel = withStyles({\n  root: {\n    borderBottom: '1px solid rgba(239, 239, 239, 1)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: -1,\n    minHeight: 35,\n    '&$expanded': {\n      minHeight: 35,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  const edges = props.network_selectedEdges\n  const nodes = props.nodeList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Source',\n    'Target',\n    'Type',\n    'SBO Type',\n    'Interaction',\n    'Throughput',\n    'Location'\n  ]\n\n  const edgeProperties = [\n    'Start Arrow',\n    'End Arrow',\n    'Connector Type',\n    'Line Thickness',\n    'Line Style',\n    'Color',\n    'Id'\n  ]\n\n  const displayItems = [\n    entityProperties,\n    edgeProperties\n  ]\n\n  //Find sources and targets\n  edges.forEach(edge => {\n    for (let key in edge) {\n      if (extractTitle(key) === 'source') {\n        edge[key] = findNode(extractContent(edge[key]), nodes)\n      } else if (extractTitle(key) === 'target') {\n        edge[key] = findNode(extractContent(edge[key]), nodes)\n      }\n    }\n  })\n\n  const sortedEdges = edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    if (a.source != '') {\n      aScore++\n    }\n    if (a.target != '') {\n      aScore++\n    }\n    if (b.source != '') {\n      bScore++\n    }\n    if (b.target != '') {\n      bScore++\n    }\n    if (bScore - aScore != 0) {\n      return bScore - aScore\n    } else if (a.source === '') {\n      return 1\n    } else if (b.source === '') {\n      return -1\n    }\n\n    if (a.source.toUpperCase() > b.source.toUpperCase()) {\n      return 1\n    } else if (a.source.toUpperCase() < b.source.toUpperCase()) {\n      return -1\n    } else if (a.target.toUpperCase() > b.target.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedEdges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content;\n    let title;\n    for (let key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== '') {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString += \n            currentEntry.title + \n            \": \" +\n            currentEntry.content +\n            \"<br>\"\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString != '') {\n        switch(list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem \n                key={index++} \n                className={classes.listPadding}\n              >\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">\n                          {primaryString}\n                        </Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n          break\n          case edgeProperties:\n            secondaryString = 'Edge Properties'\n            displayCol2.push(\n              <ListItem \n                key={index++} \n                className={classes.listPadding} \n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">\n                          {primaryString}\n                        </Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n          break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString +=\n          entry.title +\n          \": \" +\n          entry.content +\n          \"<br>\"\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = \"Additional properties\"\n\n    if (primaryString != '') {\n      displayCol1.push(\n        <ListItem \n          key={index++} c\n          lassName={classes.listPadding}\n        >\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    topDisplay.push(\n      <ListItem \n        key={edge.id} \n        disableGutters={true} \n        className={classes.padding}\n      >\n        <ListItemText\n          className={classes.wideList}\n          primary={\n            <ExpansionPanel\n              defaultExpanded={defaultExpanded}\n              setDefaultExpanded={setDefaultExpanded}\n            >\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon/>}\n              >\n                <Typography variant=\"body2\">\n                  {edge.source + \" -> \" + edge.target}\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails\n                className={classes.noPadding}\n              >\n                <table className={classes.table}>\n                  <tr>\n                    <td valign={'top'}>\n                      {displayCol1}\n                    </td>\n                    <td valign={'top'}>\n                      {displayCol2}\n                    </td>\n                  </tr>\n                </table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          }\n        />\n      </ListItem>\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length == 0) {\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={classes.center}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length == 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.padding}>\n            {topDisplay}\n          </List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.padding}>\n              {topDisplay}\n            </List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return <Linkify key={'link' + index++} newTab={true}>{modifiedText}</Linkify>\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === '') {\n    return nodeId\n  }\n  return nodeArray.filter(item => (\n    item['@id'].toString() === nodeId.toString()\n  ))[0].n\n}\n\n/*\nconst MemoEdgeProperties = React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network_selectedEdges, newProps.network_selectedEdges)\n})\n*/\n\nconst mapStateToProps = state => {\n  return {\n    network_selectedEdges: state.network.selectedEdges\n  }\n}\n\nexport default connect(\n  mapStateToProps\n) (EdgeProperties)","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles } from '@material-ui/styles'\nimport { connect } from 'react-redux'\n\nimport NetworkProperties from './NetworkProperties'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\n\nimport {changeTab} from '../../../actions/network'\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  root: {\n    minHeight: 0,\n  }\n}))\n\nconst TabContent = props => {\n  const { value } = props\n  if (value === 0) {\n    return (\n      <NetworkProperties />\n    )\n  } else if (value === 1) {\n    return (\n      <NodeProperties />\n    )\n  } else {\n    return (\n      <EdgeProperties \n        nodeList={props.nodeList} \n      />\n    )\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\nconst TableBrowserPanel = props => {\n\n  //const network = props.network\n  const classes = useStyles();\n  let value = props.network_tableDisplayTab\n/*\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n*/\n  const originalCX = props.network_originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions_changeTab(newValue)\n  }\n\n  let nodeList\n  for (let i = 0; i < props.network_originalCX.length; i++) {\n    if (props.network_originalCX[i].nodes != null) {\n      nodeList = props.network_originalCX[i].nodes\n      break\n    }\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs \n        value={value} \n        onChange={handleChange}\n        className={classes.root}\n        buttonStyle={{height: '28px'}}\n      >\n        <Tab \n          className={classes.root}\n          key={\"network-tab\"}\n          label={\"Network\"}\n          buttonStyle={{height: '28px'}}\n        />\n        <Tab\n          className={classes.root}\n          key={\"nodes-tab\"}\n          label={\"Nodes\"}\n          buttonStyle={{height: '28px'}}\n        />\n        <Tab\n          className={classes.root}\n          key={'edges-tab'}\n          label={\"Edges\"}\n          buttonStyle={{height: '28px'}}\n        />\n      </Tabs>\n      <TabContent \n        value={value} \n        nodeList={nodeList} \n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_originalCX: state.network.originalCX,\n    network_tableDisplayTab: state.network.tableDisplayTab\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    networkActions_changeTab: (payload) => dispatch(changeTab(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (TableBrowserPanel)","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport { connect } from 'react-redux'\nimport TableBrowserPanel from './TableBrowserPanel'\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  \n  /*\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n  */\n\n  if (props.network_originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  return (\n    <div className={'table-browser'}>\n      <TableBrowserPanel />\n    </div>\n  ) \n}\n\nconst mapStateToProps = state => {\n  return {\n    network_originalCX: state.network.originalCX\n  }\n}\n\nexport default connect (\n  mapStateToProps\n) (TableBrowser)\n","import React, {useState} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const [isOpen, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    props.setOpen(false)\n  }\n  \n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nimport { startCyRestPolling, stopCyRestPolling } from '../../../actions/cyrest'\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: '0.5em',\n    borderColor: '#EA9123',\n    '&:active': {\n      borderColor: '#EA9123',\n    }\n  },\n})(Button);\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions_startCyrestPolling()\n    return () => {\n      props.cyrestActions_stopCyrestPolling()\n    }\n  }, [])\n\n  const { classes } = props\n\n  const disabled =\n    !(props.network_uuid && props.network_uuid.length > 0) || \n    !props.cyrest_available\n\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest_isLoadingNetwork\n  const lastResponse = props.cyrest_lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || \n    state === 'closeLoading') && \n    lastResponse != null\n    ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={'right'}\n        vertical={'bottom'}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    cyrest_available: state.cyrest.available,\n    cyrest_isLoadingNetwork: state.cyrest.isLoadingNetwork,\n    cyrest_lastResponse: state.cyrest.lastResponse,\n\n    network_uuid: state.network.uuid\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    cyrestActions_startCyrestPolling: (payload) => dispatch(startCyRestPolling(payload)),\n    cyrestActions_stopCyrestPolling: (payload) => dispatch(stopCyRestPolling(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(OpenInCytoscapeButton))","import React from 'react'\nimport './style.css'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core'\n\nimport logo from '../../../assets/images/zoom-logo.svg'\nimport disabledLogo from '../../../assets/images/zoom-logo-mono.svg'\n\nimport { setZoomed } from '../../../actions/uiState'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '1.75em'\n  },\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    borderColor: '#000000',\n    color: '#000000',\n    '&:active': {\n      borderColor: '#000000',\n      color: '#000000'\n    },\n  },\n})(Button);\n\nconst ResetZoomButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network_uuid && props.network_uuid.length > 0)\n\n  const handleClick = () => {\n    props.uiStateActions_setZoomed(true)\n  }\n\n  return (\n    <Tooltip title=\"Zoom out\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img alt=\"Zoom logo\" src={disabled ? disabledLogo : logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_uuid: state.network.uuid\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uiStateActions_setZoomed: (payload) => dispatch(setZoomed(payload)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(ResetZoomButton))\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { setHighlights } from '../../../actions/uiState'\n\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: 'center',\n    lignHeight: '50%',\n    position: 'relative',\n    top: '1px'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n  const disabled = !(props.network_uuid && props.network_uuid.length > 0)\n\n  let highlight = props.uiState_highlights\n  \n  const handleChange = evt => {\n    if (props.network_uuid && props.network_uuid.length > 0) {\n      highlight = !highlight\n      props.uiStateActions_setHighlights(highlight)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement='bottom'>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? 'secondary' : 'default'}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? 'secondary' : 'disabled'}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_uuid: state.network.uuid,\n    uiState_highlights: state.uiState.highlights\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uiStateActions_setHighlights: (payload) => dispatch(setHighlights(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(Highlighter))\n\n","import React from 'react'\nimport './style.css'\nimport { connect } from 'react-redux'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { setNDExModalOpen } from '../../../actions/ndexSave'\n\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n  },\n})(Button);\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions_setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network_uuid && props.network_uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_uuid: state.network.uuid\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ndexSaveActions_setNDExModalOpen: (payload) => dispatch(setNDExModalOpen(payload)),\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(OpenInNDExButton))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { setNDExModalOpen, saveToNDEx } from '../../actions/ndexSave'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions_saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions_setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes } = this.props\n    const token = this.props.ndexSave_profile ? this.props.ndexSave_profile.authorization.token : null\n    const cx = this.props.network_originalCX\n\n    const networkUrl = this.props.ndexSave_networkUrl\n\n    return this.props.ndexSave_profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ndexSave_networkUrl: state.ndexSave.networkUrl,\n    ndexSave_profile: state.ndexSave.profile,\n    network_originalCX: state.network.originalCX\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ndexSaveActions_setNDExModalOpen: (payload) => dispatch(setNDExModalOpen(payload)),\n    ndexSaveActions_saveToNDEx: (payload) => dispatch(saveToNDEx(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(NDExSave))\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { connect } from 'react-redux'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nimport { setProfile, setNDExModalOpen, credentialsSignOn, googleSignOn, setErrorMessage } from '../../actions/ndexSave'\n\nconst styles = theme => ({})\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions_setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions_setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions_credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions_googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions_setErrorMessage(error)\n  }\n\n  render() {\n    const { classes } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave_ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave_profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave_profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave_profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave_errorMessage}\n            />\n          )}\n          <NDExSave />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ndexSave_ndexModal: state.ndexSave.ndexModal,\n    ndexSave_profile: state.ndexSave.profile,\n    ndexSave_errorMessage: state.ndexSave.errorMessage\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    ndexSaveActions_setProfile: (payload) => dispatch(setProfile(payload)),\n    ndexSaveActions_setNDExModalOpen: (payload) => dispatch(setNDExModalOpen(payload)),\n    ndexSaveActions_credentialsSignOn: (payload) => dispatch(credentialsSignOn(payload)),\n    ndexSaveActions_googleSignOn: (payload) => dispatch(googleSignOn(payload)),\n    ndexSaveActions_setErrorMessage: (payload) => dispatch(setErrorMessage(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(NDExSignInModal))\n\n\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport { connect } from 'react-redux'\n\n\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network_uuid && props.network_uuid.length > 0)\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: '4.3em',\n      borderColor: '#000000',\n      color: '#000000',\n      '&:active': {\n        borderColor: '#000000',\n        color: '#000000'\n      },\n    },\n  })(Button);\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network_uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_uuid: state.network.uuid\n  }\n}\n\nexport default connect(\n  mapStateToProps\n) (withStyles(styles)(OpenOriginalNetworkButton))\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Tooltip } from '@material-ui/core'\n\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport ResetZoomButton from './ResetZoomButton'\nimport Highlighter from './Highlighter'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    paddingTop: '0',\n    paddingBottom: '0',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network_networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network_networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton />\n      <Highlighter />\n      <NDExSignInModal>\n        <NDExSave />\n      </NDExSignInModal>\n      <OpenInNDExButton />\n      <OpenInCytoscapeButton\n        handleImportNetwork={props.handleImportNetwork} \n      />\n      <OpenOriginalNetworkButton />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    network_networkName: state.network.networkName\n  }\n}\n\nexport default connect(\n  mapStateToProps\n) (withStyles(styles)(NetworkToolbar))\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar\n        handleImportNetwork={props.handleImportNetwork} \n      />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n        />\n        <TableBrowser />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\nimport {connect} from 'react-redux'\n\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nimport {setSortOrder} from '../../../actions/uiState'\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0',\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    },\n  },\n}))(InputBase);\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n}\n\nconst typeStyle = {\n  position: 'relative',\n  top: '14.5px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === 'p-Value') {\n      setSortPValueOn(true)\n      props.uiStateActions_setSortOrder(['p-Value', 'Overlap'])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions_setSortOrder(['Overlap', 'p-Value'])\n    }\n  }\n  \n  if (props.uiState_selectedSource === 'enrichment') {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? 'p-Value' : 'Overlap'}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={'p-Value'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={'Overlap'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_selectedSource: state.uiState.selectedSource\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uiStateActions_setSortOrder: (payload) => dispatch(setSortOrder(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (SortPanel)\n            ","import React, { useEffect } from 'react'\nimport {connect} from 'react-redux'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport Typography from '@material-ui/core/Typography'\n\nimport SortPanel from './SortPanel'\n\nimport {setActualResults} from '../../../actions/search'\nimport {changeListIndex} from '../../../actions/network'\n\nimport './style.css'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0',\n  },\n  center: {\n    justifyContent: 'center',\n    position: 'relative',\n    top: '25%',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n})\n\nconst findSort = (sortOrder) => {\n  if (sortOrder[0] === 'p-Value') {\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else {\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  }\n}\n\nconst NetworkList = props => {\n  const hits = props.hits\n\n  //Sort hits\n  useEffect(() => {\n    const sortFunction = findSort(props.uiState_sortOrder)\n    const newHits = hits.sort(sortFunction)\n    props.searchActions_setActualResults(newHits)\n  }, [props.uiState_sortOrder, props.uiState_selectedSource])\n  \n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  let index = 1\n\n  function handleListItemClick(event, index) {\n    props.networkActions_changeListIndex(index);\n  }\n\n  const selectedIndex = props.network_listIndex\n\n  const query = props.search_results_genes\n\n  \n\n  const result = props.search_actualResults.map(entry => props.renderNetworkListItem(\n    query.size, \n    entry, \n    props.classes, \n    handleListItemClick, \n    selectedIndex, \n    index++))\n\n  if (result.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel />\n        <div className=\"network-list\">\n          <MenuList className={props.classes.noPadding}>\n            {result}\n          </MenuList>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography \n            variant={'subtitle1'}\n            color={'textSecondary'}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_sortOrder: state.uiState.sortOrder,\n    uiState_selectedSource: state.uiState.selectedSource,\n\n    network_listIndex: state.network.listIndex,\n    \n    search_results_genes: state.search.results.genes,\n    search_actualResults: state.search.actualResults\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_setActualResults: (payload) => dispatch(setActualResults(payload)),\n    networkActions_changeListIndex: (payload) => dispatch(changeListIndex(payload))\n  }\n}\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(NetworkList))\n","import React from 'react'\nimport './style.css'\nimport {connect} from 'react-redux'\n\nimport Split from 'react-split'\n\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport { ListItem } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport {clearSelectedGenes} from '../../../actions/search'\nimport {networkFetchStarted} from '../../../actions/network'\nimport {setHighlights} from '../../../actions/uiState'\nimport {importNetworkStarted} from '../../../actions/cyrest'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search_queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search_results.jobId\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions_clearSelectedGenes()\n\n    props.networkActions_networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search_results.jobId\n    const searchResults = props.search_searchResults\n    const sourceName = props.uiState_selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions_setHighlights(true)\n\n    props.cyrestActions_importNetworkStarted({\n      cx: props.network_originalCX,\n      source: props.network_sourceId,\n      uuid: props.network_uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes, handleListItemClick, selectedIndex, index) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    // console.log('Entry:', networkEntry)\n\n    const topDescription = \n      'N: ' +\n      nodes + \n      ', E: ' +\n      edges\n      \n    const bottomDescription1 = \n      'Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let bottomDescription2 = ''\n    const pVal = details.PValue\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(5)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      bottomDescription2 = 'P-value = ' + pValText\n    }\n\n    return (\n      //<MenuItem>\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={event => {\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n          handleListItemClick(event, index)\n        }}\n        selected={selectedIndex === index}\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              \n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {topDescription}\n                </Typography>\n              </Tooltip>\n              <div>\n                <Typography component=\"span\" variant={'caption'}>\n                  {bottomDescription1}\n                </Typography>\n                </div>\n              <div>\n                <Typography component=\"span\" variant={'caption'}>\n                  {bottomDescription2}\n                </Typography>\n              </div>\n            </React.Fragment>\n          }\n        />\n        </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList \n        renderNetworkListItem={renderNetworkListItem} \n        hits={props.hits}\n      />\n      <NetworkView \n        handleImportNetwork={handleImportNetwork} \n      />\n    </Split>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_selectedSource: state.uiState.selectedSource,\n    network_originalCX: state.network.originalCX,\n    network_sourceId: state.network.sourceId,\n    network_uuid: state.network.uuid,\n    search_results: state.search.results,\n    search_queryList: state.search.queryList,\n    search_searchResults: state.search.searchResults\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_clearSelectedGenes: () => dispatch(clearSelectedGenes()),\n    networkActions_networkFetchStarted: (payload) => dispatch(networkFetchStarted(payload)),\n    cyrestActions_importNetworkStarted: (payload) => dispatch(importNetworkStarted(payload)),\n    uiStateActions_setHighlights: (payload) => dispatch(setHighlights(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Ndex)\n","import React from 'react'\n\nimport Ndex from './Ndex'\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const results = props.results\n\n  if (results === null || results === undefined) {\n    return (\n      <LoadingPanel \n        title={'Loading results'} \n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  } else {\n    return (\n      <Ndex \n        hits={results.results} \n        sourceUUID={results.sourceUUID}\n        history={props.history}\n      />\n    )\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport {connect} from 'react-redux'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nimport {networkClear, changeListIndex} from '../../actions/network'\nimport {setSelectedSource} from '../../actions/uiState'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions_networkClear()\n    props.networkActions_changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search_results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search_searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions_setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source_sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const searchResults = props.search_searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name === \"enrichment\" ? \"Gene Enrichment\" : \n                                          source.name === \"interactome\" ? \"Gene Neighborhood\" : source.name} />\n          ))}\n        </Tabs>\n        <TabContent \n          results={results}\n          history={props.history}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nconst mapStateToProps = state => {\n  return {\n    search_results: state.search.results,\n    search_searchResults: state.search.searchResults,\n    source_sources: state.source.sources\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    networkActions_networkClear: (payload) => dispatch(networkClear(payload)),\n    networkActions_changeListIndex: (payload) => dispatch(changeListIndex(payload)),\n    uiStateActions_setSelectedSource: (payload) => dispatch(setSelectedSource(payload))\n  }\n}\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(Results))","import React, { useState, useEffect, useRef } from 'react'\nimport {connect} from 'react-redux'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nimport {clearAll, setQuery, searchStarted} from '../../actions/search'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search_queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source_sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/)\n\n    props.searchActions_clearAll()\n    props.history.push('/')\n    props.searchActions_setQuery(geneList)\n    props.searchActions_searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar \n        open={open} \n        setOpen={setOpen}\n        message={'Genes are copied to clipboard!'}\n        autoHideDuration={4000}\n        horizontal={'left'}\n        vertical={'bottom'}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    source_sources: state.source.sources,\n    search_queryGenes: state.search.queryGenes\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_clearAll: (payload) => dispatch(clearAll(payload)),\n    searchActions_setQuery: (payload) => dispatch(setQuery(payload)),\n    searchActions_searchStarted: (payload) => dispatch(searchStarted(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n) (withStyles(styles)(GeneTextBox))\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo-mono.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo.svg'\nimport wpLogo from '../../assets/images/wp-logo.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nimport {setSettingsOpen} from '../../actions/uiState'\nimport {clearAll} from '../../actions/search'\nimport {networkClear} from '../../actions/network'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    position: 'relative',\n    left: '16px'\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '16px'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions_setSettingsOpen(\n      !this.props.uiState_isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions_clearAll()\n    this.props.networkActions_networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes } = this.props\n    const open = this.props.uiState_isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\" style={titleStyle}>\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search_results === null ? (\n            <div />\n          ) : (\n            <div className={classes.textBox}>\n              <GeneTextBox \n                history={this.props.history}\n              />\n             </div>\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n              \n            <Tooltip title=\"Help\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={() => openLink(HELP_URL)}\n              >\n                <HelpIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NDEx\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NDEX_URL)}\n              >\n                <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_isSettingsOpen: state.uiState.isSettingsOpen,\n    search_results: state.search.results\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uiStateActions_setSettingsOpen: (payload) => dispatch(setSettingsOpen(payload)),\n    searchActions_clearAll: (payload) => dispatch(clearAll(payload)),\n    networkActions_networkClear: (payload) => dispatch(networkClear(payload))\n  }\n}\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, { withTheme: true})(TitleBar))","import React from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nimport {setServicesListOpen, setSettingsOpen} from '../../actions/uiState'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState_servicesListOpen\n    this.props.uiStateActions_setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState_isSettingsOpen\n    this.props.uiStateActions_setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState_isSettingsOpen\n    const sources = this.props.source_sources\n    const servicesListOpen = this.props.uiState_servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_servicesListOpen: state.uiState.servicesListOpen,\n    uiState_isSettingsOpen: state.uiState.isSettingsOpen,\n    source_sources: state.source.sources\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    uiStateActions_setServicesListOpen: (payload) => dispatch(setServicesListOpen(payload)),\n    uiStateActions_setSettingsOpen: (payload) => dispatch(setServicesListOpen(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport './style.css'\n\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport classNames from 'classnames'\n\nimport {setPort} from '../../actions/cyrest'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin',\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history_location_search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions_setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes } = props\n\n  const open = props.uiState_isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar\n        history={props.history}\n      />\n      <SettingsPanel />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    uiState_isSettingsOpen: state.uiState.isSettingsOpen\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    cyrestActions_setPort: (payload) => dispatch(setPort(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, {withTheme: true})(AppShell))","import React, { useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nimport {fetchResultStarted} from '../../actions/search'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search_results !== null) {\n      const jobId = props.search_results.jobId\n      props.searchActions_fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions_clearAll()\n    props.history.push('/')\n  }\n\n  const isFetching = props.search_isFetching\n  const searchResult = props.search_searchResult\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell\n        history_location_search={props.history.location.search}\n      >\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell \n      history_location_search={props.history.location.search}\n    >\n      <div className=\"container\">\n        <Results\n          history={props.history}\n        />\n        <InputPanel />\n      </div>\n    </AppShell>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    search_isFetching: state.search.isFetching,\n    search_searchResult: state.search.searchResult,\n    search_results: state.search.results\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_fetchResultStarted: (payload) => dispatch(fetchResultStarted(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps \n)(HomePanel)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel\n      history={props.history}\n    />\n  )\n}\n\n/*\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n*/\nexport default MainContainer\n","import React, { useState, useEffect, useRef } from 'react'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nimport {setQuery, searchStarted} from '../../actions/search'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search_results !== null) {\n      const jobId = props.search_results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source_sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n  \n    const sourceNames = sources.map(source => source.name)\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/)\n    props.searchActions_setQuery(genes)\n    props.searchActions_searchStarted({ geneList, sourceNames })\n    \n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(/,/g, ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    search_results: state.search.results,\n    source_sources: state.source.sources\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_setQuery: (payload) => dispatch(setQuery(payload)),\n    searchActions_searchStarted: (payload) => dispatch(searchStarted(payload))\n  }\n}\n\nexport default connect (\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(SearchTextBox))","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport {connect} from 'react-redux'\nimport './style.css'\n\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\nimport LoadingPanel from '../LoadingPanel'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport queryString from 'query-string'\nimport { searchStarted, setQuery } from '../../actions/search';\nimport {findSourceStarted} from '../../actions/source'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location_search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions_setQuery(genes)\n      props.searchActions_searchStarted({ geneList })\n    }\n\n    props.sourceActions_findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search_isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox \n        history={props.history}\n      />\n      <Footer />\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    search_isSearching: state.search.isSearching\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchActions_searchStarted: (payload) => dispatch(searchStarted(payload)),\n    searchActions_setQuery: (payload) => dispatch(setQuery(payload)),\n    sourceActions_findSourceStarted: (payload) => dispatch(findSourceStarted(payload))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StartPanel)","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell \n    history_location_search={props.history.location.search}\n  >\n    <StartPanel\n      location_search={props.location_search}\n      history={props.history}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      location_search={props.location.search}\n      history={props.history}\n    />\n  )\n}\n\n/*\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n*/\n\nexport default (TopPageContainer)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setZoomed,\n  setSortOrder,\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: 'enrichment',\n  zoomed: false,\n  sortOrder: ['p-Value', 'Overlap'],\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    },\n    [setZoomed]: (state, payload) => {\n      return {\n        ...state,\n        zoomed: payload.payload\n      }\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      }\n    },\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex\n} from '../actions/network'\n\nimport {\n  setZoomed\n} from '../actions/uiState'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      setZoomed(true)\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false,\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      }\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: payload.payload\n      }\n    },\n    [selectEdges]: (state, payload) => {     \n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      }\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: payload.payload\n      }\n    },\n    [deselectAll]: (state, payload) => {\n      return { \n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [], \n        selectedEdges: [] }\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state, \n        tableDisplayTab: payload.payload\n      }\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 5000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}