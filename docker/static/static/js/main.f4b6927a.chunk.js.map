{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/ndex-logo-mono-dark.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_ZOOMED","setZoomed","RESET_ZOOMED","resetZoomed","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_ORDER","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","FIT_NETWORK_VIEW","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","fitNetworkView","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","makeStyles","theme","chip","margin","backgroundColor","listPadding","paddingTop","paddingBottom","padding","borderRadius","height","borderWidth","selectedButtonStyle","selectedChipStyle","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","classes","props","hitSets","color","found","has","symbol","Chip","className","avatar","Avatar","variant","key","selected","style","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","selectedGenes","searchActions","geneList","genes","matched","unmatched","values","push","matchedSorted","sort","reverse","unmatchedSorted","sorted","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","InputPanel","queryList","length","Empty","Typography","MessageSnackbar","useState","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","message","id","action","IconButton","aria-label","onClick","logo","button","display","marginLeft","marginRight","position","top","outer","justifyContent","alignItems","inner","marginTop","width","isLoadingNetwork","cyrest","lastResponse","state","setState","setMessage","cycleId","type","currentId","setTimeout","uuid","available","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","align","cyInstance","PRESET_LAYOUT","name","CONCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","fit","useEffect","undefined","on","target","networkActions","console","log","e","warn","selectEdge","edges","$","forEach","element","data","selectNode","nodes","selectedNodes","uiStateActions","targets","elements","animate","zoom","center","eles","duration","nodeCount","edgeCount","cyjs","networkAreaStyle","background","isLayoutAvailable","isLayout","layout","resize","addClass","filter","removeClass","stylesheet","cy","LoadingPanel","CircularProgress","size","NetworkViewer","isFetching","resized","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","entry","toString","findAttributes","originalCX","attrType","len","attr","index","updates","useStyles","container","overflow","boxSizing","paddingLeft","lessPadding","ExpansionPanel","root","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","extractContent","modifiedText","v","Array","isArray","join","extractTitle","n","formatPrimary","startsWith","endsWith","parse","newTab","formatContext","splitResults","split","item","MemoNetworkProperties","networkAttr","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","displayed","rightDisplay","list","currentEntry","secondaryString","primaryString","ListItemText","primary","leftDisplay","component","expandIcon","ExpansionPanelDetails","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","getListItem","geneEntry","description","summary","_id","ListItemAvatar","secondary","inline","ListItemSecondaryAction","linkIcon","href","getListChildren","pathway","pathwaySources","Object","keys","Collapse","in","getPathwayStateTag","timeout","unmountOnExit","disablePadding","dbName","pathways","pwEntry","nested","ListItemIcon","inset","getNotFound","notFound","Divider","getUnmatchedListItem","this","search_results","geneSymbol","get","React","Component","spacing","unit","noPadding","wideList","lessListPadding","table","tableLayout","moreListPadding","borderTop","paddingRight","MuiExpansionPanelDetails","MemoNodeProperties","defaultExpanded","setDefaultExpanded","entityProperties","nodeProperties","displayItems","sortedNodes","a","b","topDisplay","geneAnnotation","disableGutters","displayCol1","displayCol2","colspan","valign","findNode","nodeId","nodeArray","isNaN","returnNode","MemoEdgeProperties","selectedEdges","nodeList","edgeProperties","sortedEdges","aScore","bScore","source","c","lassName","subtitle","TabContent","DISABLED_STYLE","MemoTableBrowserPanel","tableDisplayTab","i","Tabs","newValue","Tab","MemoTableBrowser","BootstrapButton","borderColor","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","logoDisabled","disabledLogo","textAlign","lignHeight","highlight","evt","ndexSaveActions","NDExSave","cx","token","networkUrl","ndexSave","profile","authorization","DialogContentText","DialogActions","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","err","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","clientId","render","renderProps","buttonText","CredentialsSignOn","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","handleError","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal","onLogout","preventDefault","handleOnSuccess","resp","Dialog","ndexModal","aria-labelledby","image","errorMessage","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","fontSize","toolbar","grow","flexGrow","menuButton","breakpoints","up","shape","fade","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","buttons","border","openIcon","other","networkName","noWrap","DEFAULT_RATIO","NetworkView","setResize","direction","onDragEnd","BootstrapInput","input","textColor","InputBase","formStyle","left","divStyle","typeStyle","selectStyle","SortPanel","sortPValueOn","setSortPValueOn","selectedSource","Select","displayEmpty","MenuItem","networkAvatar","menuItem","menuText","plot","openFirst","first","handleFetch","networkUUID","sortFunction","sortOrder","PValue","newHits","handleListItemClick","selectedIndex","listIndex","actualResults","MenuList","renderNetworkListItem","Ndex","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","querySize","networkEntry","imageURL","rank","topDescription","bottomDescription1","bottomDescription2","pVal","pValText","toExponential","listTitle","sourceId","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","selectedSourceName","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","loadCSS","document","querySelector","handleSearch","sourceNames","sourcessetQuery","elevation","getElementById","select","execCommand","Icon","classNames","icon","onKeyDown","ref","titleStyle","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","textBox","openLink","HELP_URL","IL_URL","idekerLogo","NDEX_URL","CYTOSCAPE_URL","NRNB_URL","nrnbLogo","WP_URL","wpLogo","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","sourceEntry","version","status","text","LINKS","link","github","flexShrink","drawerHeader","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","children","HomePanel","onpopstate","onBackButtonEvent","searchResult","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","pathname","ReactGA","set","page","pageview","EXAMPLES","examples","searchButtonEl","anchorEl","query","Boolean","currentTarget","transformOrigin","example","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","ndex","TopPage","Top","App","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","payload","singleResult","zoomed","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","fadedNode","opacity","fadedEdge","activeObject","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","p","upperQuery","gene","isFetchingSource","currentSource","port","isFetchingAvailable","isPollingAvailable","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","takeLatest","call","cySearchApi","sourceJson","geneListString","all","myGeneApi","geneRes","searchRes","geneJson","resultLocation","parts","filtered","filterGenes","put","uniqueGeneMap","sleep","ms","Promise","resolve","statusRes","statusJson","progress","resultRes","resultJson","json","params","api","reducedSources","includes","orderedSources","firstEl","secondEl","indexOf","Map","notfound","cyRESTPort","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","getCyRESTPort","addNumberVerification","aspect","patchedCX","numberVerification","longNumber","concat","responseJson","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","take","race","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","user","basicAuthSignIn","accountName","pwd","password","auth","btoa","firstName","responseText","networkURL","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","next","run","cyRestSaga","cyRestStatusSaga","basename","process","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4b6927a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-dark.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\nexport const SET_ZOOMED = 'SET_ZOOMED'\nexport const setZoomed = createAction(SET_ZOOMED)\n\nexport const RESET_ZOOMED = 'RESET_ZOOMED'\nexport const resetZoomed = createAction(RESET_ZOOMED)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const FIT_NETWORK_VIEW = 'FIT_NETWORK_VIEW'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nconst useStyles = makeStyles(theme => ({\n  chip: {\n    margin: '0',\n    backgroundColor: '#000000'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '22'\n  },\n}))\n\nconst buttonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: '#FFFFFF'\n}\n\nconst selectedButtonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: 'rgb(252, 235, 242)',\n}\n\nconst selectedChipStyle = {\n  margin: '0',\n  borderRadius: '20px',\n}\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: 'transparent'\n}\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: 'transparent',\n  },\n})(MuiToggleButton);\n\nconst GeneList = props => {\n  const classes = withStyles()\n\n  const results = props.search.results\n  const hits = props.network.hitGenes\n  const hitSets = new Set(hits)\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search.selectedGenes[0]) {\n      props.searchActions.clearSelectedGenes()\n    } else {\n      props.searchActions.setSelectedGenes(newAlignment)\n    }\n  }\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort().reverse()\n  const unmatchedSorted = unmatched.sort().reverse()\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup \n              value={props.search.selectedGenes} \n              exclusive \n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton \n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) && props.search.selectedGenes[0] === geneValue.symbol ?\n                    selectedButtonStyle\n                  : \n                    buttonStyle\n                }\n                className={classes.label}\n              >\n                {getChip(geneValue, true, classes, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>{found ? <CheckIcon /> : '-'}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        key={value}\n        clickable={true}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (GeneList)","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>\n        Query Genes ({props.search.queryList.length}) \n      </div>\n      <GeneList {...props}/>\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, {useState} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const [isOpen, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    props.setOpen(false)\n  }\n  \n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, {useState} from 'react'\nimport { Typography } from '@material-ui/core'\nimport cytoLogo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core/styles'\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport './style.css'\nimport { resetWarningCache } from 'prop-types';\n\nconst styles = theme => ({\n  logo: {\n\n  },\n  button: {\n    height: '50%',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    position: 'relative',\n    top: '15%'\n  },\n  outer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inner: {\n    position: 'relative',\n    marginTop: '15%',\n    width: '100%'\n  }\n})\n\nconst Warning = props => {\n  const { classes } = props\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork\n  const lastResponse = props.cyrest.lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || \n    state === 'closeLoading') && \n    lastResponse != null\n    ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  if (props.network.uuid && props.network.uuid.length > 0 && props.cyrest.available) {\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color='textSecondary'>\n              Network is too big for interactive view. <br/>\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={'right'}\n          vertical={'bottom'}\n          handleClose={handleClose}\n      />\n    </React.Fragment>\n    )\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n        <Typography variant=\"subtitle2\" color='textSecondary' align='center'>\n            Network is too big for interactive view, <br/>\n            but may be viewed in Cytoscape Desktop\n            </Typography>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Warning))\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\nimport './style.css'\nimport Warning from './Warning'\n\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst CONCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n  const { fit } = props.network\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    cyInstance.on('tap', function(event) {\n      try {\n       // cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.changeTab(0)\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    const selectEdge = () => {\n      setTimeout(() => {\n        const edges = []\n        const selectedEdges = cyInstance.$('edge:selected')\n        selectedEdges.forEach(element => {\n          edges.push(element.data())\n        })\n        props.networkActions.selectEdges(edges)\n      }, 10)\n    }\n\n    const selectNode = () => {\n      setTimeout(() => {\n        const nodes = []\n        const selectedNodes = cyInstance.$('node:selected')\n        selectedNodes.forEach(element => {\n          if (element.data().name != '') {\n            nodes.push(element.data())\n          }\n        })\n        console.log('nodes: ', nodes, selectedNodes)\n        props.networkActions.selectNodes(nodes)\n      }, 10)\n    }\n\n    cyInstance.on('tap', 'node', function() {\n      /*try {\n        cyInstance.nodes().removeClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }*/\n      selectNode()\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      /*try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }*/\n      selectEdge()\n    })\n\n    cyInstance.on('boxend', function(event) {\n      selectEdge()\n      selectNode()\n    })\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n\n    if (targets.length === 0) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    if (fit) {\n      console.log('fit effect:', fit)\n      cyInstance.fit()\n      setTimeout(() => {\n        props.networkActions.fitNetworkView(false)\n      }, 1000)\n    }\n  }, [fit])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning {...props} />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = CONCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer \n        resized={props.resized}\n        {...props}\n      />\n    )}\n  </div>\n)\n\nexport default (NetworkViewer)\n","export const camelCaseToTitleCase = (camelCaseString) => {\n    if (camelCaseString.slice(0, 4) === \"http\" ||\n        camelCaseString.slice(0, 5) === 'Prov:') {\n        return camelCaseString\n    }\n    let result = camelCaseString\n        .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")           \n        .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")           \n        .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")          \n        .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")     \n        .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")  \n        .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n        .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\") \n        .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")      \n        .trim();\n    result = result.charAt(0).toUpperCase() + result.slice(1)\n    result = result.replace('Wiki Pathways', 'WikiPathways')\n        .replace('Wikipathways', 'WikiPathways')\n        .replace('Sbo ', 'SBO ')\n    return result\n  }","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","import React from 'react'\nimport Split from 'react-split'\nimport {isEqual} from 'lodash'\n\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { stripScripts }  from './strip-scripts-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\n\nlet index = 0\nlet updates = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '16px',\n    paddingTop: '12px'\n  },\n  lessPadding: {\n    paddingTop: '2.49px'\n  }\n}))\n\n//Expansion panel styling\nconst ExpansionPanel = withStyles({\n  root: {\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: '10px',\n    height: '26px',\n    minHeight: 0,\n    '&$expanded': {\n      minHeight: 0,\n    },\n  },\n  content: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '-9px',\n    marginRight: 0,\n    '&$expanded': {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: '-9px',\n      marginRight: 0,\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.originalCX//props.network.originalCX\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = [\n    'Name',\n    'Description',\n    'Reference',\n    '@context'\n  ]\n  const properties = [\n    'Organism',\n    'Cell',\n    'Disease'\n  ]\n  const contributors = [\n    'Author',\n    'Reviewers',\n    'Rights Holder',\n    'Rights',\n  ]\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const networkInformation = [\n    'Version',\n    'Network Type',\n    'Labels'\n  ]\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ]\n  \n\n  //Filter properties\n  const attributes = []\n  let content;\n  let title;\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      attributes.push({\n        title: camelCaseToTitleCase(title),\n        content: content,\n        displayed: false\n      })\n    } else if (title === 'name') {\n      attributes.push({\n        title: 'Name',\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null){\n        primaryString += \n          currentEntry.title + \n          \": \" + \n          currentEntry.content + \n          \"<br>\"\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch(list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n      }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString != '') {\n      rightDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <React.Fragment>\n            <div className={classes.padding}>\n            <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n              @context\n            </Typography>\n            </div>\n            <ExpansionPanel>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon/>}\n              >\n                <Typography component=\"span\" variant=\"body2\">\n                  Click to view the namespaces associated with this network\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n                  {primaryString}\n                </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n    <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>\n          Updates: {updates++}\n          {leftDisplay}\n        </List>\n      </div>\n      <div className={'network-info-panel'}>\n        <List className={classes.lessPadding}>\n          {rightDisplay}\n        </List>\n      </div>\n    </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return <Linkify key={'link' + index++} newTab={true}>{modifiedText}</Linkify>\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  let splitResults\n  let result = '<table><tbody>'\n  elements.forEach(item => {\n    splitResults = item.split(\"\\\"\")\n    result += \n      '<tr><td>' +\n      splitResults[1] +\n      '</td><td>' +\n      splitResults [3] +\n      '</td></tr>'    \n  })\n  result += '</tbody></table>'\n  return formatPrimary(result)\n}\n\nconst MemoNetworkProperties = NetworkProperties/*React.memo(NetworkProperties, (prevProps, newProps) => {\n  return true\n})*/\n\nexport default (MemoNetworkProperties)","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\nlet updates = 0\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n            >\n              Updates: {updates++}\n              {geneEntry.symbol}\n            </Typography>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                variant=\"caption\"\n              >\n                {camelCaseToTitleCase(geneEntry.name)}\n              </Typography>\n              <Typography variant=\"body2\" color='textPrimary'>\n                {description}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport {isEqual} from 'lodash'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nimport GeneAnnotationList from './GeneAnnotationList'\n\nlet index = 0\nlet updates = 0\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '16px'\n  },\n  lessListPadding: {\n    paddingTop: '0',\n    paddingBottom: '4px'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed',\n    marginTop: '-36px'\n  },\n  moreListPadding: {\n    paddingTop: '0',\n    paddingBottom: '8px',\n  }\n}))\n\nconst ExpansionPanel = withStyles({\n  root: {\n    alignItems: 'flexStart',\n    borderTop: '1px solid rgba(239, 239, 239, 1)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    alignItems: 'flexStart',\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: -6,\n    minHeight: 36,\n    '&$expanded': {\n      minHeight: 36\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    paddingTop: '36px',\n  }\n})(MuiExpansionPanelDetails)\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n  const nodes = props.network.selectedNodes\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = ['Name', 'HGNC', 'Ensembl', 'Type']\n\n  const nodeProperties = [\n    'Height',\n    'Width',\n    'Shape',\n    'Is GPML Shape',\n    'Color',\n    'Fill Color',\n    'Transparent',\n    'Border Thickness',\n    'Border Style',\n    'Label Size',\n    'Label Font',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, nodeProperties]\n\n  const sortedNodes = nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedNodes.forEach(node => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let geneAnnotation = null\n    let inset = false\n    if (\n      props.search.results != null &&\n      props.search.results.genes.get(node.name) != null\n    ) {\n      inset = true\n      geneAnnotation = (\n        <List className={classes.noPadding}>\n          <ListItem\n            key={index++}\n            className={classes.lessListPadding}\n            disableGutters={true}\n          >\n            <GeneAnnotationList\n              {...props}\n              search_results={props.search.results}\n              geneSymbol={node.name}\n            />\n          </ListItem>\n        </List>\n      )\n    }\n    for (let key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString != '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={index++} className={classes.listPadding}>\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case nodeProperties:\n            secondaryString = 'Node Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString != '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.listPadding}>\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    topDisplay.push(\n      <ListItem\n        key={node.id}\n        disableGutters={true}\n        className={classes.noPadding}\n      >\n        <ListItemText\n          className={classes.wideList}\n          primary={\n            <ExpansionPanel\n              defaultExpanded={defaultExpanded}\n              setDefaultExpanded={setDefaultExpanded}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} >\n                <Typography variant=\"body2\">{node.name}</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.noPadding}>\n                <table className={classes.table}>\n                  <tbody>\n                    <tr>\n                      <td colspan='2' valign='top'>{geneAnnotation}</td>\n                      </tr>\n                    <tr>\n                      <td valign={'top'}>{displayCol1}</td>\n                      <td valign={'top'}>{displayCol2}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          }\n        />\n      </ListItem>\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length == 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n        Updates: {updates++}\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length == 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n        Updates: {updates++}\n          <List className={classes.moreListPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n          Updates: {updates++}\n            <List className={classes.moreListPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link' + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst MemoNodeProperties = NodeProperties/*React.memo(NodeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network.selectedNodes, newProps.network.selectedNodes)\n})*/\n\nexport default (MemoNodeProperties)\n","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\nimport {isEqual} from 'lodash'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nlet index = 0\nlet updates = 0\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    marginTop: '0',\n    width: '100%',\n    padding: '0'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '16px'\n  },\n  lessListPadding: {\n    paddingTop: '0',\n    paddingBottom: '4px'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed',\n    marginTop: '-36px'\n  },\n  moreListPadding: {\n    paddingTop: '0',\n    paddingBottom: '8px'\n  }\n}))\n\nconst ExpansionPanel = withStyles({\n  root: {\n    borderTop: '1px solid rgba(239, 239, 239, 1)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    display: 'inlineBlock',\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: -6,\n    minHeight: 36,\n    '&$expanded': {\n      minHeight: 36\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst ExpansionPanelDetails = withStyles({\n  root: {\n    paddingTop: '36px',\n  }\n})(MuiExpansionPanelDetails)\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  const edges = props.network.selectedEdges\n  const nodes = props.nodeList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Source',\n    'Target',\n    'Type',\n    'SBO Type',\n    'Interaction',\n    'Throughput',\n    'Location'\n  ]\n\n  const edgeProperties = [\n    'Start Arrow',\n    'End Arrow',\n    'Connector Type',\n    'Line Thickness',\n    'Line Style',\n    'Color',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, edgeProperties]\n\n  //Find sources and targets\n  edges.forEach(edge => {\n    for (let key in edge) {\n      if (extractTitle(key) === 'source') {\n        edge[key] = findNode(extractContent(edge[key]), nodes)\n      } else if (extractTitle(key) === 'target') {\n        edge[key] = findNode(extractContent(edge[key]), nodes)\n      }\n    }\n  })\n\n  const sortedEdges = edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    if (a.source != '') {\n      aScore++\n    }\n    if (a.target != '') {\n      aScore++\n    }\n    if (b.source != '') {\n      bScore++\n    }\n    if (b.target != '') {\n      bScore++\n    }\n    if (bScore - aScore != 0) {\n      return bScore - aScore\n    } else if (a.source === '') {\n      return 1\n    } else if (b.source === '') {\n      return -1\n    }\n\n    if (a.source.toUpperCase() > b.source.toUpperCase()) {\n      return 1\n    } else if (a.source.toUpperCase() < b.source.toUpperCase()) {\n      return -1\n    } else if (a.target.toUpperCase() > b.target.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedEdges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    for (let key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString != '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={index++} className={classes.listPadding}>\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case edgeProperties:\n            secondaryString = 'Edge Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString != '') {\n      displayCol1.push(\n        <ListItem key={index++} c lassName={classes.listPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    topDisplay.push(\n      <ListItem \n        key={edge.id} \n        disableGutters={true} \n        className={classes.noPadding}\n      >\n        <ListItemText\n          className={classes.wideList}\n          primary={\n            <ExpansionPanel\n              defaultExpanded={defaultExpanded}\n              setDefaultExpanded={setDefaultExpanded}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"body2\">\n                  {edge.source + ' -> ' + edge.target}\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.noPadding}>\n                <table className={classes.table}>\n                  <tbody>\n                    <tr>\n                      <td valign={'top'}>{displayCol1}</td>\n                      <td valign={'top'}>{displayCol2}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          }\n        />\n      </ListItem>\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length == 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n        Updates: {updates++}\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length == 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          Updates: {updates++}\n          <List className={classes.moreListPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            Updates: {updates++}\n            <List className={classes.moreListPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link' + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === '') {\n    return nodeId\n  }\n  const returnNode = nodeArray.filter(\n    item => item['@id'].toString() === nodeId.toString()\n  )[0]\n\n  if (returnNode != null) {\n    return returnNode.n\n  } else {\n    return ''\n  }\n}\n\nconst MemoEdgeProperties = EdgeProperties/*React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network.selectedEdges, newProps.network.selectedEdges)\n})*/\n\nexport default (MemoEdgeProperties)\n","import React from 'react'\nimport {isEqual} from 'lodash'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles } from '@material-ui/styles'\n\nimport MemoNetworkProperties from './NetworkProperties'\nimport MemoNodeProperties from './NodeProperties'\nimport MemoEdgeProperties from './EdgeProperties'\n\nlet update = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  root: {\n    minHeight: 0,\n  }\n}))\n\nconst TabContent = props => {\n  const { value } = props\n  if (value === 0) {\n    return (\n      <MemoNetworkProperties originalCX={props.network.originalCX}/>\n    )\n  } else if (value === 1) {\n    return (\n      <MemoNodeProperties {...props}/>\n    )\n  } else {\n    return (\n      <MemoEdgeProperties {...props} />\n    )\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\nconst TableBrowserPanel = props => {\n\n  //const network = props.network\n  const classes = useStyles();\n  let value = props.network.tableDisplayTab\n/*\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n*/\n  const originalCX = props.network.originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue)\n  }\n\n  let nodeList\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes\n      break\n    }\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs \n        value={value} \n        onChange={handleChange}\n        className={classes.root}\n        buttonStyle={{height: '28px'}}\n      >\n        <Tab \n          className={classes.root}\n          key={\"network-tab\"}\n          label={\"Network\"}\n          buttonStyle={{height: '28px'}}\n        />\n        <Tab\n          className={classes.root}\n          key={\"nodes-tab\"}\n          label={\"Nodes\"}\n          buttonStyle={{height: '28px'}}\n        />\n        <Tab\n          className={classes.root}\n          key={'edges-tab'}\n          label={\"Edges\"}\n          buttonStyle={{height: '28px'}}\n        />\n      </Tabs>\n      <TabContent \n        value={value} \n        nodeList={nodeList} \n        {...props}\n      />\n    </div>\n  )\n}\n\nconst MemoTableBrowserPanel = TableBrowserPanel/*React.memo(TableBrowserPanel, (prevProps, newProps) => {\n  return isEqual(prevProps.network.tableDisplayTab, newProps.network.tableDisplayTab)\n})*/\n\nexport default (MemoTableBrowserPanel)","import React from 'react'\nimport {isEqual} from 'lodash'\nimport { makeStyles } from '@material-ui/styles'\n\nimport MemoTableBrowserPanel from './TableBrowserPanel'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  \n\n  if (props.network.originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  return (\n    <div className={'table-browser'}>\n      <MemoTableBrowserPanel {...props} />\n    </div>\n  ) \n}\n\nconst MemoTableBrowser = TableBrowser /*React.memo(TableBrowser, (prevProps, newProps) => {\n  return isEqual(prevProps.network.isFetching, newProps.network.isFetching)\n})*/\n\nexport default (MemoTableBrowser)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: '0.5em',\n    borderColor: '#EA9123',\n    '&:active': {\n      borderColor: '#EA9123',\n    }\n  },\n})(Button);\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling()\n    return () => {\n      props.cyrestActions.stopCyRestPolling()\n    }\n  }, [])\n\n  const { classes } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) || \n    !props.cyrest.available\n\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork\n  const lastResponse = props.cyrest.lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || \n    state === 'closeLoading') && \n    lastResponse != null\n    ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={'right'}\n        vertical={'bottom'}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default (withStyles(styles)(OpenInCytoscapeButton))","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core'\n\nimport logo from '../../../assets/images/zoom-logo.svg'\nimport disabledLogo from '../../../assets/images/zoom-logo-mono.svg'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '1.75em'\n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    borderColor: '#000000',\n    color: '#000000',\n    '&:active': {\n      borderColor: '#000000',\n      color: '#000000'\n    }\n  }\n})(Button)\n\nconst ResetZoomButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const handleClick = () => {\n    props.networkActions.fitNetworkView(true)\n  }\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(ResetZoomButton)\n","import React, { useState } from 'react'\n\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: 'center',\n    lignHeight: '50%',\n    position: 'relative',\n    top: '1px'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  let highlight = props.uiState.highlights\n  \n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight\n      props.uiStateActions.setHighlights(highlight)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement='bottom'>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? 'secondary' : 'default'}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? 'secondary' : 'disabled'}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(Highlighter))\n\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n  },\n})(Button);\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(OpenInNDExButton))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes } = this.props\n    const token = this.props.ndexSave.profile ? this.props.ndexSave.profile.authorization.token : null\n    const cx = this.props.network.originalCX\n\n    const networkUrl = this.props.ndexSave.networkUrl\n\n    return this.props.ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default (withStyles(styles)(NDExSave))\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default (NDExSignInModal)\n\n\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\n\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: '4.3em',\n      borderColor: '#000000',\n      color: '#000000',\n      '&:active': {\n        borderColor: '#000000',\n        color: '#000000'\n      },\n    },\n  })(Button);\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default (withStyles(styles)(OpenOriginalNetworkButton))\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Tooltip } from '@material-ui/core'\n\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport ResetZoomButton from './ResetZoomButton'\nimport Highlighter from './Highlighter'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    paddingTop: '0',\n    paddingBottom: '0',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...other} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport MemoTableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <MemoTableBrowser {...props}/>\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0',\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    },\n  },\n}))(InputBase);\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n}\n\nconst typeStyle = {\n  position: 'relative',\n  top: '14.5px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === 'p-Value') {\n      setSortPValueOn(true)\n      props.uiStateActions.setSortOrder(['p-Value', 'Overlap'])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions.setSortOrder(['Overlap', 'p-Value'])\n    }\n  }\n  \n  if (props.uiState.selectedSource === 'enrichment') {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? 'p-Value' : 'Overlap'}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={'p-Value'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={'Overlap'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default (SortPanel)\n            ","import React, { useEffect } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport Typography from '@material-ui/core/Typography'\n\nimport SortPanel from './SortPanel'\n\nimport './style.css'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0',\n  },\n  center: {\n    justifyContent: 'center',\n    position: 'relative',\n    top: '25%',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n})\n\nconst findSort = (sortOrder) => {\n  if (sortOrder[0] === 'p-Value') {\n    console.log('p-Value')\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else {\n    console.log('overlap')\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  }\n}\n\nconst NetworkList = props => {\n  const hits = props.hits\n  \n  const openFirst = (first) => {\n    if (first != null) {\n      console.log(first)\n      props.handleFetch(first.networkUUID, first.description, first.nodes, first.edges, first.hitGenes)\n    }\n  }\n\n  //Sort hits\n  useEffect(() => {\n    const sortFunction = findSort(props.uiState.sortOrder)\n    console.log(props.uiState.sortOrder)\n    const newHits = hits.sort(sortFunction)\n    props.searchActions.setActualResults(newHits)\n    openFirst(newHits[0])\n    props.networkActions.changeListIndex(1)\n  }, [props.uiState.sortOrder, props.uiState.selectedSource])\n\n  useEffect(() => {\n    //Open first hit\n    openFirst()\n  }, [props.uiState.selectedSource])\n  \n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  let index = 1\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index);\n  }\n\n  const selectedIndex = props.network.listIndex\n\n  const query = props.search.results.genes\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\">\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry => props.renderNetworkListItem(\n              props.search.queryList.length, \n              entry, \n              props.classes, \n              handleListItemClick, \n              selectedIndex, \n              index++\n              ))\n            }\n          </MenuList>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography \n            variant={'subtitle1'}\n            color={'textSecondary'}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default (withStyles(styles)(NetworkList))\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\n\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport { ListItem } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes()\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes, handleListItemClick, selectedIndex, index) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    // console.log('Entry:', networkEntry)\n\n    const topDescription = \n      'N: ' +\n      nodes + \n      ', E: ' +\n      edges\n      \n    const bottomDescription1 = \n      'Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let bottomDescription2 = ''\n    const pVal = details.PValue\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(2)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      bottomDescription2 = 'P-value = ' + pValText\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={event => {\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n          handleListItemClick(event, index)\n        }}\n        selected={selectedIndex === index}\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              \n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {topDescription}\n                </Typography>\n              </Tooltip>\n              <div>\n                <Typography component=\"span\" variant={'caption'}>\n                  {bottomDescription1}\n                </Typography>\n                </div>\n              <div>\n                <Typography component=\"span\" variant={'caption'}>\n                  {bottomDescription2}\n                </Typography>\n              </div>\n            </React.Fragment>\n          }\n        />\n        </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList \n        renderNetworkListItem={renderNetworkListItem} \n        handleFetch={handleFetch}\n        hits={props.hits}\n        {...props}\n      />\n      <NetworkView \n        handleImportNetwork={handleImportNetwork} \n        {...props}\n      />\n    </Split>\n  )\n}\n\nexport default (Ndex)\n","import React from 'react'\n\nimport Ndex from './Ndex'\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const results = props.results\n\n  if (results === null || results === undefined) {\n    return (\n      <LoadingPanel \n        title={'Loading results'} \n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  } else {\n    return (\n      <Ndex \n        hits={results.results} \n        sourceUUID={results.sourceUUID}\n        {...props}\n      />\n    )\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    backgroundColor: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  }\n})\n\nconst Results = props => {\n  const {classes} = props\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n    props.networkActions.changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const searchResults = props.search.searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name === \"enrichment\" ? \"Gene Enrichment\" : \n                                          source.name === \"interactome\" ? \"Gene Neighborhood\" : source.name} />\n          ))}\n        </Tabs>\n        <TabContent \n          results={results}\n          {...props} \n        />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default (withStyles(styles)(Results))","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.sourcessetQuery(geneList)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar \n        open={open} \n        setOpen={setOpen}\n        message={'Genes are copied to clipboard!'}\n        autoHideDuration={4000}\n        horizontal={'left'}\n        vertical={'bottom'}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default (withStyles(styles)(GeneTextBox))\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo-mono-dark.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono-dark.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo-mono-dark.svg'\nimport wpLogo from '../../assets/images/wp-logo-mono-dark.svg'\nimport idekerLogo from '../../assets/images/ideker-logo-mono-dark.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    position: 'relative',\n    left: '16px'\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '16px'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\" style={titleStyle}>\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <div className={classes.textBox}>\n              <GeneTextBox {...props} />\n             </div>\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n              \n            <Tooltip title=\"Help\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={() => openLink(HELP_URL)}\n              >\n                <HelpIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NDEx\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NDEX_URL)}\n              >\n                <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\nconst IL_URL = 'http://idekerlab.ucsd.edu/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, { withTheme: true})(TitleBar))","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin',\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...props} />\n      <SettingsPanel {...props}/>\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default (withStyles(styles, {withTheme: true})(AppShell))","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const isFetching = props.search.isFetching\n  const searchResult = props.search.searchResult\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props} >\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props} >\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props}/>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default (HomePanel)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel {...props} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n  \n    const sourceNames = sources.map(source => source.name)\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/)\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n    \n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(/,/g, ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles)(SearchTextBox))","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\nimport LoadingPanel from '../LoadingPanel'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox \n        {...props}\n      />\n      <Footer />\n    </div>\n  )\n}\n\nexport default (StartPanel)","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell \n    {...props}\n  >\n    <StartPanel\n      {...props}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      {...props}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setZoomed,\n  setSortOrder,\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: 'enrichment',\n  zoomed: false,\n  sortOrder: ['p-Value', 'Overlap'],\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    },\n    [setZoomed]: (state, payload) => {\n      return {\n        ...state,\n        zoomed: payload.payload\n      }\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      }\n    },\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  fitNetworkView\n} from '../actions/network'\n\nimport { setZoomed } from '../actions/uiState'\n\nimport { clearSelectedGenes } from '../actions/search'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0,\n  fit: false\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue',\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      setZoomed(true)\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      }\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: payload.payload\n      }\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      }\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: payload.payload\n      }\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      }\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      }\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      }\n    },\n    [fitNetworkView]: (state, payload) => {\n      console.log('Fit network called:', payload.payload)\n      return {\n        ...state,\n        fit: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst cyrest = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default cyrest\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}