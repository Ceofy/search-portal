{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/ndex-logo-mono-dark.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/cytoscape-logo.svg","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_ZOOMED","setZoomed","RESET_ZOOMED","resetZoomed","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_ORDER","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","FIT_NETWORK_VIEW","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","fitNetworkView","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","makeStyles","theme","chip","margin","backgroundColor","listPadding","paddingTop","paddingBottom","padding","borderRadius","height","borderWidth","selectedButtonStyle","selectedChipStyle","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","classes","props","hitSets","color","found","has","symbol","react_default","a","createElement","Chip","className","avatar","Avatar","Check_default","variant","key","selected","style","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","selectedGenes","searchActions","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","matchedSorted","sort","reverse","unmatchedSorted","sorted","concat","Object","toConsumableArray","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","GeneList_ToggleButton","InputPanel","components_GeneList","Empty","Typography","MessageSnackbar","_useState","useState","_useState2","slicedToArray","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","IconButton","aria-label","onClick","Close_default","logo","button","display","marginLeft","marginRight","position","top","outer","justifyContent","alignItems","inner","marginTop","width","isLoadingNetwork","cyrest","lastResponse","_useState3","_useState4","state","setState","_useState5","_useState6","setMessage","cycleId","type","currentId","setTimeout","uuid","length","available","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","AppShell_MessageSnackbar","align","cyInstance","PRESET_LAYOUT","name","CONCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","CytoscapeViewer","highlights","uiState","fit","useEffect","on","nodes","removeClass","target","networkActions","console","log","e","warn","selectEdge","edges","$","forEach","element","data","selectNode","selectedNodes","this","source","addClass","uiStateActions","targets","elements","animate","zoom","center","eles","duration","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","background","isLayoutAvailable","isLayout","layout","resize","filter","react_cytoscape_default","stylesheet","cy","LoadingPanel","CircularProgress","size","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","assign","resized","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","entry","toString","findAttributes","originalCX","attrType","len","attr","index","useStyles","container","overflow","boxSizing","paddingLeft","lessPadding","ExpansionPanel","root","boxShadow","&:not(:last-child)","borderBottom","&:before","&$expanded","expanded","MuiExpansionPanel","ExpansionPanelSummary","marginBottom","minHeight","content","MuiExpansionPanelSummary","extractContent","modifiedText","v","Array","isArray","join","extractTitle","n","formatPrimary","startsWith","endsWith","parse","linkifyjs_react_default","newTab","formatContext","splitResults","split","item","NetworkProperties","networkAttr","properties","contributors","wikiPathways","networkInformation","rightDisplayItems","attributes","displayed","rightDisplay","list","currentEntry","secondaryString","primaryString","ListItemText","primary","leftDisplay","component","NetworkProperties_ExpansionPanel","NetworkProperties_ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","react_split_es","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","_this","defineProperty","getListItem","geneEntry","description","summary","_id","ListItemAvatar","secondary","inline","ListItemSecondaryAction","linkIcon","href","Launch_default","getListChildren","pathway","pathwaySources","keys","Collapse","in","getPathwayStateTag","timeout","unmountOnExit","disablePadding","dbName","pathways","pwEntry","nested","ListItemIcon","Info_default","inset","getNotFound","notFound","Divider","getUnmatchedListItem","Error_default","search_results","geneSymbol","get","React","Component","spacing","unit","noPadding","wideList","lessListPadding","table","tableLayout","paddingRight","NodeProperties","defaultExpanded","setDefaultExpanded","entityProperties","nodeProperties","displayItems","sortedNodes","b","topDisplay","geneAnnotation","colSpan","valign","disableGutters","TableBrowser_GeneAnnotationList","displayCol1","displayCol2","NodeProperties_ExpansionPanel","NodeProperties_ExpansionPanelSummary","findNode","nodeId","nodeArray","isNaN","EdgeProperties","selectedEdges","nodeList","edgeProperties","sortedEdges","aScore","bScore","c","lassName","EdgeProperties_ExpansionPanel","EdgeProperties_ExpansionPanelSummary","subtitle","TabContent","TableBrowser_NetworkProperties","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","DISABLED_STYLE","TableBrowserPanel","tableDisplayTab","i","Tabs","newValue","Tab","TableBrowserPanel_TabContent","TableBrowser","TableBrowser_TableBrowserPanel","BootstrapButton","borderColor","&:active","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","OpenInCytoscapeButton_BootstrapButton","logoDisabled","ResetZoomButton_BootstrapButton","disabledLogo","textAlign","lignHeight","highlight","evt","WbIncandescent_default","OpenInNDExButton_BootstrapButton","ndexSaveActions","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","cx","token","networkUrl","_this2","ndexSave","profile","authorization","DialogContentText","DialogActions","text-transform","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","details","error","JSON","stringify","onError","_this$props","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","preventDefault","handleOnSuccess","resp","_this$props4","Dialog","ndexModal","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","OpenInBrowser_default","fontSize","toolbar","grow","flexGrow","menuButton","breakpoints","up","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","&:focus","buttons","border","openIcon","other","objectWithoutProperties","networkName","noWrap","Ndex_ResetZoomButton","Ndex_Highlighter","components_NDExSignInModal","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","Ndex_OpenOriginalNetworkButton","DEFAULT_RATIO","NetworkView","setResize","Ndex_NetworkToolbar","direction","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","BootstrapInput","label + &","input","textColor","InputBase","formStyle","left","divStyle","typeStyle","selectStyle","SortPanel","sortPValueOn","setSortPValueOn","selectedSource","Select","uiStateAction","displayEmpty","MenuItem","networkAvatar","menuItem","menuText","plot","openFirst","first","handleFetch","networkUUID","sortFunction","sortOrder","PValue","newHits","handleListItemClick","selectedIndex","listIndex","query","actualResults","Ndex_SortPanel","MenuList","renderNetworkListItem","Ndex","queryList","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","Ndex_NetworkList","querySize","networkEntry","imageURL","rank","topDescription","bottomDescription1","bottomDescription2","pVal","pValText","toExponential","listTitle","Ndex_NetworkView","sourceId","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","Results_Empty","selectedSourceName","Results_TabContent","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","loadCSS","document","querySelector","handleSearch","sourceNames","sourcessetQuery","elevation","getElementById","select","execCommand","Icon","classNames","icon","Delete_default","onKeyDown","ref","Search_default","titleStyle","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","textBox","AppShell_GeneTextBox","Home_default","openLink","HELP_URL","Help_default","IL_URL","idekerLogo","NDEX_URL","CYTOSCAPE_URL","NRNB_URL","nrnbLogo","WP_URL","wpLogo","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","sourceEntry","version","status","text","Settings_default","LINKS","link","github","flexShrink","drawerHeader","objectSpread","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","onpopstate","onBackButtonEvent","searchResult","components_AppShell","components_Results","components_InputPanel","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","searchButtonEl","anchorEl","Boolean","currentTarget","Menu_default","Menu_Menu","transformOrigin","example","exampleIdx","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","_handleActions","payload","singleResult","uiState_handleActions","zoomed","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","Error","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","upperQuery","gene","source_handleActions","isFetchingSource","currentSource","cyrest_handleActions","port","isFetchingAvailable","isPollingAvailable","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","Content-Type","searchGenes","MYGENE_BASE_URL","getSource","mode","then","response","ok","catch","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","geneListString","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","all","myGeneApi","filterGenes","put","uniqueGeneMap","t0","_marked2","sleep","ms","Promise","resolve","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","reducedSources","orderedSources","_context5","includes","firstEl","secondEl","indexOf","_marked5","Map","notfound","cyRESTPort","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","responseJson","aspect","numberVerification","longNumber","cyRestSaga_marked2","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","statusResponse","cyRestStatusSaga_marked","take","race","cyRestStatusSaga_marked2","cyRestStatusSaga_marked3","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","ndexSaveSaga_marked2","user","pwd","auth","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","cyRestStatusSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dc9bed8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-dark.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\nexport const CLEAR_SELECTED_GENES = 'CLEAR_SELECTED_GENES'\n\nexport const SET_SEARCH_RESULT_ORDER = 'SET_SEARCH_RESULT_ORDER'\nexport const SET_ACTUAL_RESULTS = 'SET_ACUTAL_RESULTS'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\nexport const SET_ZOOMED = 'SET_ZOOMED'\nexport const setZoomed = createAction(SET_ZOOMED)\n\nexport const RESET_ZOOMED = 'RESET_ZOOMED'\nexport const resetZoomed = createAction(RESET_ZOOMED)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = 'SET_SORT_ORDER'\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODES = 'SELECT_NODES'\nexport const UNSELECT_NODES = 'UNSELECT_NODES'\nexport const SELECT_EDGES = 'SELECT_EDGES'\nexport const UNSELECT_EDGES = 'UNSELECT_EDGES'\nexport const DESELECT_ALL = 'DESELECT_ALL'\nexport const CHANGE_TAB = 'CHANGE_TAB'\nexport const CHANGE_LIST_INDEX = 'CHANGE_LIST_INDEX'\n\nexport const FIT_NETWORK_VIEW = 'FIT_NETWORK_VIEW'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\nexport const SET_CURRENT_SOURCE = 'SET_CURRENT_SOURCE'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = 'FETCH_AVAILABLE'\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = 'START_CYREST_POLLING'\nexport const STOP_CYREST_POLLING = 'STOP_CYREST_POLLING'\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport MuiToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\n\nconst useStyles = makeStyles(theme => ({\n  chip: {\n    margin: '0',\n    backgroundColor: '#000000'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '22'\n  },\n}))\n\nconst buttonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: '#FFFFFF'\n}\n\nconst selectedButtonStyle = {\n  padding: '0',\n  borderRadius: '20px',\n  height: '32px',\n  borderWidth: '0',\n  backgroundColor: 'rgb(252, 235, 242)',\n}\n\nconst selectedChipStyle = {\n  margin: '0',\n  borderRadius: '20px',\n}\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: 'transparent'\n}\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: 'transparent',\n  },\n})(MuiToggleButton);\n\nconst GeneList = props => {\n  const classes = withStyles()\n\n  const results = props.search.results\n  const hits = props.network.hitGenes\n  const hitSets = new Set(hits)\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search.selectedGenes[0]) {\n      props.searchActions.clearSelectedGenes()\n    } else {\n      props.searchActions.setSelectedGenes(newAlignment)\n    }\n  }\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort().reverse()\n  const unmatchedSorted = unmatched.sort().reverse()\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup \n              value={props.search.selectedGenes} \n              exclusive \n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton \n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) && props.search.selectedGenes[0] === geneValue.symbol ?\n                    selectedButtonStyle\n                  : \n                    buttonStyle\n                }\n                className={classes.label}\n              >\n                {getChip(geneValue, true, classes, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>{found ? <CheckIcon /> : '-'}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        key={value}\n        clickable={true}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (GeneList)","import React from 'react'\nimport './style.css'\n\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>Query Genes</div>\n      <GeneList {...props}/>\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, {useState} from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const [isOpen, setOpen] = useState(false)\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    props.setOpen(false)\n  }\n  \n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, {useState} from 'react'\nimport { Typography } from '@material-ui/core'\nimport cytoLogo from '../../../assets/images/cytoscape-logo.svg'\nimport { withStyles } from '@material-ui/core/styles'\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport './style.css'\nimport { resetWarningCache } from 'prop-types';\n\nconst styles = theme => ({\n  logo: {\n\n  },\n  button: {\n    height: '50%',\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    position: 'relative',\n    top: '15%'\n  },\n  outer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  inner: {\n    position: 'relative',\n    marginTop: '15%',\n    width: '100%'\n  }\n})\n\nconst Warning = props => {\n  const { classes } = props\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork\n  const lastResponse = props.cyrest.lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || \n    state === 'closeLoading') && \n    lastResponse != null\n    ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  if (props.network.uuid && props.network.uuid.length > 0 && props.cyrest.available) {\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color='textSecondary'>\n              Network is too big for interactive view. <br/>\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={'right'}\n          vertical={'bottom'}\n          handleClose={handleClose}\n      />\n    </React.Fragment>\n    )\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n        <Typography variant=\"subtitle2\" color='textSecondary' align='center'>\n            Network is too big for interactive view, <br/>\n            but may be viewed in Cytoscape Desktop\n            </Typography>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default (withStyles(styles)(Warning))\n","import React, { useEffect, useState } from 'react'\nimport CytoscapeComponent from 'react-cytoscapejs'\nimport './style.css'\nimport Warning from './Warning'\n\nlet cyInstance = null\n\nconst PRESET_LAYOUT = {\n  name: 'preset',\n  padding: 6\n}\n\nconst CONCENTRIC_LAYOUT = {\n  name: 'concentric',\n  padding: 6,\n  minNodeSpacing: 100\n}\n\nconst COSE_SETTING = {\n  name: 'cose',\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  }\n}\n\nexport const MAX_NETWORK_SIZE = 5000\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n  const { fit } = props.network\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    cyInstance.on('tap', function(event) {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const target = event.target\n        if (target === cyInstance) {\n          props.networkActions.changeTab(0)\n          console.log('UNSELECT')\n        }\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    const selectEdge = () => {\n      setTimeout(() => {\n        const edges = []\n        const selectedEdges = cyInstance.$('edge:selected')\n        selectedEdges.forEach(element => {\n          edges.push(element.data())\n        })\n        props.networkActions.selectEdges(edges)\n      }, 10)\n    }\n\n    const selectNode = () => {\n      setTimeout(() => {\n        const nodes = []\n        const selectedNodes = cyInstance.$('node:selected')\n        selectedNodes.forEach(element => {\n          if (element.data().name != '') {\n            nodes.push(element.data())\n          }\n        })\n        console.log('nodes: ', nodes, selectedNodes)\n        props.networkActions.selectNodes(nodes)\n      }, 10)\n    }\n\n    cyInstance.on('tap', 'node', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }\n      selectNode()\n    })\n\n    cyInstance.on('tap', 'edge', function() {\n      try {\n        cyInstance.nodes().removeClass('connected')\n        const selected = this.data()\n        const { source, target } = selected\n        cyInstance.$('#' + source + ', #' + target).addClass('connected')\n      } catch (e) {\n        console.warn(e)\n      }\n      selectEdge()\n    })\n\n    cyInstance.on('boxend', function(event) {\n      selectEdge()\n      selectNode()\n    })\n\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    return () => {\n      console.log('Network viewer unmounted')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined) {\n      return\n    }\n\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n\n    if (targets.length === 0) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    if (fit) {\n      console.log('fit effect:', fit)\n      cyInstance.fit()\n      setTimeout(() => {\n        props.networkActions.fitNetworkView(false)\n      }, 1000)\n    }\n  }, [fit])\n\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning {...props} />\n  }\n\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  const networkAreaStyle = {\n    width: '100%',\n    height: '100%',\n    background: props.network.backgroundColor\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_SETTING\n  } else if (!isLayoutAvailable) {\n    layout = CONCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (highlights) {\n      cyInstance.elements().addClass('faded')\n      const query = cyInstance.filter('node[querynode = \"true\"]')\n      query.addClass('highlight')\n    } else {\n      cyInstance\n        .elements()\n        .removeClass('faded')\n        .removeClass('highlight')\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => (cyInstance = cy)}\n    />\n  )\n}\n\nexport default CytoscapeViewer\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer \n        resized={props.resized}\n        {...props}\n      />\n    )}\n  </div>\n)\n\nexport default (NetworkViewer)\n","export const camelCaseToTitleCase = (camelCaseString) => {\n    if (camelCaseString.slice(0, 4) === \"http\" ||\n        camelCaseString.slice(0, 5) === 'Prov:') {\n        return camelCaseString\n    }\n    let result = camelCaseString\n        .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")           \n        .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")           \n        .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")          \n        .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")     \n        .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")  \n        .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n        .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\") \n        .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")      \n        .trim();\n    result = result.charAt(0).toUpperCase() + result.slice(1)\n    result = result.replace('Wiki Pathways', 'WikiPathways')\n        .replace('Wikipathways', 'WikiPathways')\n        .replace('Sbo ', 'SBO ')\n    return result\n  }","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, '')\n}","// List attributes starts with this prefix.\nconst LIST_PREFIX = 'list_of_'\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","import React from 'react'\nimport Split from 'react-split'\n\nimport { makeStyles, withStyles } from '@material-ui/styles'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport { camelCaseToTitleCase } from './camel-case-util'\nimport { stripScripts }  from './strip-scripts-util'\nimport { findAttributes } from './attribute-util'\n\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto',\n    height: '100%',\n    boxSizing: 'content-box'\n  },\n  padding: {\n    paddingLeft: '16px',\n    paddingTop: '12px'\n  },\n  lessPadding: {\n    paddingTop: '2.49px'\n  }\n}))\n\n//Expansion panel styling\nconst ExpansionPanel = withStyles({\n  root: {\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: '10px',\n    height: '26px',\n    minHeight: 0,\n    '&$expanded': {\n      minHeight: 0,\n    },\n  },\n  content: {\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: '-9px',\n    marginRight: 0,\n    '&$expanded': {\n      marginTop: 0,\n      marginBottom: 0,\n      marginLeft: '-9px',\n      marginRight: 0,\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.network.originalCX\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = [\n    'Name',\n    'Description',\n    'Reference',\n    '@context'\n  ]\n  const properties = [\n    'Organism',\n    'Cell',\n    'Disease'\n  ]\n  const contributors = [\n    'Author',\n    'Reviewers',\n    'Rights Holder',\n    'Rights',\n  ]\n  const wikiPathways = [\n    'WikiPathways ID',\n    'WikiPathways Version',\n    'WikiPathways IRI'\n  ]\n  const networkInformation = [\n    'Version',\n    'Network Type',\n    'Labels'\n  ]\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    networkInformation\n  ]\n  \n\n  //Filter properties\n  const attributes = []\n  let content;\n  let title;\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith('__') && content != null && content !== '') {\n      attributes.push({\n        title: camelCaseToTitleCase(title),\n        content: content,\n        displayed: false\n      })\n    } else if (title === 'name') {\n      attributes.push({\n        title: 'Name',\n        content: 'Untitled',\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = ''\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null){\n        primaryString += \n          currentEntry.title + \n          \": \" + \n          currentEntry.content + \n          \"<br>\"\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch(list) {\n      case properties:\n        secondaryString = 'Properties'\n        break\n      case contributors:\n        secondaryString = 'Contributors'\n        break\n      case wikiPathways:\n        secondaryString = 'WikiPathways'\n        break\n      case networkInformation:\n        secondaryString = 'Network Information'\n        break\n      }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString != '') {\n      rightDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === '@context') {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <React.Fragment>\n            <div className={classes.padding}>\n            <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n              @context\n            </Typography>\n            </div>\n            <ExpansionPanel>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon/>}\n              >\n                <Typography component=\"span\" variant=\"body2\">\n                  Click to view the namespaces associated with this network\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <Typography variant=\"body2\">\n                  {primaryString}\n                </Typography>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n\n      <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n        <div className={'network-info-panel'}>\n          <List className={classes.lessPadding}>\n            \n              {leftDisplay}\n            \n          </List>\n        </div>\n        <div className={'network-info-panel'}>\n          <List className={classes.lessPadding}>\n            \n              {rightDisplay}\n            \n          </List>\n        </div>\n      </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = ''\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return <Linkify key={'link' + index++} newTab={true}>{modifiedText}</Linkify>\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(',')\n  let splitResults\n  let result = '<table>'\n  elements.forEach(item => {\n    splitResults = item.split(\"\\\"\")\n    result += \n      '<tr><td>' +\n      splitResults[1] +\n      '</td><td>' +\n      splitResults [3] +\n      '</td></tr>'    \n  })\n  result += '</table>'\n  return formatPrimary(result)\n}\n\nexport default (NetworkProperties)","import React from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport CheckIcon from '@material-ui/icons/Check'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport './style.css'\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n            >\n              {geneEntry.symbol}\n            </Typography>\n          }\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                variant=\"caption\"\n              >\n                {camelCaseToTitleCase(geneEntry.name)}\n              </Typography>\n              <Typography variant=\"body2\" color='textPrimary'>\n                {description}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nimport GeneAnnotationList from './GeneAnnotationList'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    width: '100%',\n    padding: '0 0 0 0'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '16px'\n  },\n  lessListPadding: {\n    paddingTop: '0',\n    paddingBottom: '4px'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nconst ExpansionPanel = withStyles({\n  root: {\n    borderBottom: '1px solid rgba(239, 239, 239, 1)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    display: 'inlineBlock',\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: -1,\n    minHeight: 35,\n    '&$expanded': {\n      minHeight: 35\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n  const nodes = props.network.selectedNodes\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = ['Name', 'HGNC', 'Ensembl', 'Type']\n\n  const nodeProperties = [\n    'Height',\n    'Width',\n    'Shape',\n    'Is GPML Shape',\n    'Color',\n    'Fill Color',\n    'Transparent',\n    'Border Thickness',\n    'Border Style',\n    'Label Size',\n    'Label Font',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, nodeProperties]\n\n  const sortedNodes = nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedNodes.forEach(node => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let geneAnnotation = null\n    let inset = false\n    if (\n      props.search.results != null &&\n      props.search.results.genes.get(node.name) != null\n    ) {\n      inset = true\n      geneAnnotation = (\n        <tr>\n          <td colSpan={2} valign={'top'}>\n            <List className={classes.noPadding}>\n              <ListItem\n                key={index++}\n                className={classes.lessListPadding}\n                disableGutters={true}\n              >\n                <GeneAnnotationList\n                  search_results={props.search.results}\n                  geneSymbol={node.name}\n                />\n              </ListItem>\n            </List>\n          </td>\n        </tr>\n      )\n    }\n    for (let key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString != '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={index++} className={classes.listPadding}>\n                <ListItemText\n                  inset={inset}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case nodeProperties:\n            secondaryString = 'Node Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString != '') {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.listPadding}>\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    topDisplay.push(\n      <ListItem\n        key={node.id}\n        disableGutters={true}\n        className={classes.noPadding}\n      >\n        <ListItemText\n          className={classes.wideList}\n          primary={\n            <ExpansionPanel\n              defaultExpanded={defaultExpanded}\n              setDefaultExpanded={setDefaultExpanded}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"body2\">{node.name}</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.noPadding}>\n                <table className={classes.table}>\n                  {geneAnnotation}\n                  <tr>\n                    <td valign={'top'}>{displayCol1}</td>\n                    <td valign={'top'}>{displayCol2}</td>\n                  </tr>\n                </table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          }\n        />\n      </ListItem>\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length == 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length == 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link' + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\n/*const MemoNodeProperties = React.memo(NodeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network_selectedNodes, newProps.network_selectedNodes)\n})*/\n\nexport default (NodeProperties)\n","import React, { useState } from 'react'\nimport Linkify from 'linkifyjs/react'\nimport parse from 'html-react-parser'\n\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel'\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, withStyles } from '@material-ui/styles'\n\nimport { camelCaseToTitleCase } from './camel-case-util.js'\nimport { stripScripts } from './strip-scripts-util.js'\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  padding: {\n    paddingTop: '0',\n    paddingBottom: '0'\n  },\n  center: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    width: '100%'\n  },\n  wideList: {\n    width: '100%',\n    padding: '0 0 0 0'\n  },\n  listPadding: {\n    paddingTop: '0',\n    paddingBottom: '16px'\n  },\n  table: {\n    width: '100%',\n    tableLayout: 'fixed'\n  }\n}))\n\nconst ExpansionPanel = withStyles({\n  root: {\n    borderBottom: '1px solid rgba(239, 239, 239, 1)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanel)\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    paddingLeft: '16px',\n    paddingRight: '16px',\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    marginBottom: -1,\n    minHeight: 35,\n    '&$expanded': {\n      minHeight: 35\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiExpansionPanelSummary)\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  const edges = props.network.selectedEdges\n  const nodes = props.nodeList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    'Source',\n    'Target',\n    'Type',\n    'SBO Type',\n    'Interaction',\n    'Throughput',\n    'Location'\n  ]\n\n  const edgeProperties = [\n    'Start Arrow',\n    'End Arrow',\n    'Connector Type',\n    'Line Thickness',\n    'Line Style',\n    'Color',\n    'Id'\n  ]\n\n  const displayItems = [entityProperties, edgeProperties]\n\n  //Find sources and targets\n  edges.forEach(edge => {\n    for (let key in edge) {\n      if (extractTitle(key) === 'source') {\n        edge[key] = findNode(extractContent(edge[key]), nodes)\n      } else if (extractTitle(key) === 'target') {\n        edge[key] = findNode(extractContent(edge[key]), nodes)\n      }\n    }\n  })\n\n  const sortedEdges = edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    if (a.source != '') {\n      aScore++\n    }\n    if (a.target != '') {\n      aScore++\n    }\n    if (b.source != '') {\n      bScore++\n    }\n    if (b.target != '') {\n      bScore++\n    }\n    if (bScore - aScore != 0) {\n      return bScore - aScore\n    } else if (a.source === '') {\n      return 1\n    } else if (b.source === '') {\n      return -1\n    }\n\n    if (a.source.toUpperCase() > b.source.toUpperCase()) {\n      return 1\n    } else if (a.source.toUpperCase() < b.source.toUpperCase()) {\n      return -1\n    } else if (a.target.toUpperCase() > b.target.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  sortedEdges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    for (let key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith('__') &&\n        content != null &&\n        content !== 'null' &&\n        content !== ''\n      ) {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = ''\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + ': ' + currentEntry.content + '<br>'\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString != '') {\n        switch (list) {\n          case entityProperties:\n            secondaryString = 'Entity Properties'\n            displayCol1.push(\n              <ListItem key={index++} className={classes.listPadding}>\n                <ListItemText\n                  inset={false}\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n          case edgeProperties:\n            secondaryString = 'Edge Properties'\n            displayCol2.push(\n              <ListItem\n                key={index++}\n                className={classes.listPadding}\n                disableGutters={true}\n              >\n                <ListItemText\n                  primary={\n                    <React.Fragment>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {secondaryString}\n                      </Typography>\n                      <div>\n                        <Typography variant=\"body2\">{primaryString}</Typography>\n                      </div>\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n            )\n            break\n        }\n      }\n    })\n\n    primaryString = ''\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + ': ' + entry.content + '<br>'\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = 'Additional properties'\n\n    if (primaryString != '') {\n      displayCol1.push(\n        <ListItem key={index++} c lassName={classes.listPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    topDisplay.push(\n      <ListItem key={edge.id} disableGutters={true} className={classes.padding}>\n        <ListItemText\n          className={classes.wideList}\n          primary={\n            <ExpansionPanel\n              defaultExpanded={defaultExpanded}\n              setDefaultExpanded={setDefaultExpanded}\n            >\n              <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography variant=\"body2\">\n                  {edge.source + ' -> ' + edge.target}\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.noPadding}>\n                <table className={classes.table}>\n                  <tr>\n                    <td valign={'top'}>{displayCol1}</td>\n                    <td valign={'top'}>{displayCol2}</td>\n                  </tr>\n                </table>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          }\n        />\n      </ListItem>\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length == 0) {\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={classes.center}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length == 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <List className={classes.padding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={'outer-rectangle'}>\n        <div className={'inner-rectangle'}>\n          <div>\n            <List className={classes.padding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return ''\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === '') {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, '<br>')\n    .replace(/(<\\/?br\\/?>)+/gi, '<br>')\n    .replace(/(\\n)+/gi, '\\n')\n    .replace(/<a\\s+href=/gi, '<a target=\"_blank\" href=')\n    .trim()\n  if (modifiedText.startsWith('<br>')) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith('<br>')) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={'link' + index++} newTab={true}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === '') {\n    return nodeId\n  }\n  return nodeArray.filter(\n    item => item['@id'].toString() === nodeId.toString()\n  )[0].n\n}\n\n/*\nconst MemoEdgeProperties = React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network_selectedEdges, newProps.network_selectedEdges)\n})\n*/\n\nexport default (EdgeProperties)\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { makeStyles } from '@material-ui/styles'\n\nimport NetworkProperties from './NetworkProperties'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  root: {\n    minHeight: 0,\n  }\n}))\n\nconst TabContent = props => {\n  const { value } = props\n  if (value === 0) {\n    return (\n      <NetworkProperties {...props}/>\n    )\n  } else if (value === 1) {\n    return (\n      <NodeProperties {...props}/>\n    )\n  } else {\n    return (\n      <EdgeProperties {...props} />\n    )\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n\nconst TableBrowserPanel = props => {\n\n  //const network = props.network\n  const classes = useStyles();\n  let value = props.network.tableDisplayTab\n/*\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n*/\n  const originalCX = props.network.originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue)\n  }\n\n  let nodeList\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes\n      break\n    }\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs \n        value={value} \n        onChange={handleChange}\n        className={classes.root}\n        buttonStyle={{height: '28px'}}\n      >\n        <Tab \n          className={classes.root}\n          key={\"network-tab\"}\n          label={\"Network\"}\n          buttonStyle={{height: '28px'}}\n        />\n        <Tab\n          className={classes.root}\n          key={\"nodes-tab\"}\n          label={\"Nodes\"}\n          buttonStyle={{height: '28px'}}\n        />\n        <Tab\n          className={classes.root}\n          key={'edges-tab'}\n          label={\"Edges\"}\n          buttonStyle={{height: '28px'}}\n        />\n      </Tabs>\n      <TabContent \n        value={value} \n        nodeList={nodeList} \n        {...props}\n      />\n    </div>\n  )\n}\n\nexport default (TableBrowserPanel)","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nimport TableBrowserPanel from './TableBrowserPanel'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n\n  if (props.network.originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  return (\n    <div className={'table-browser'}>\n      <TableBrowserPanel {...props} />\n    </div>\n  ) \n}\n\nexport default (TableBrowser)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport MessageSnackbar from '../../AppShell/MessageSnackbar.jsx'\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: '0.5em',\n    borderColor: '#EA9123',\n    '&:active': {\n      borderColor: '#EA9123',\n    }\n  },\n})(Button);\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling()\n    return () => {\n      props.cyrestActions.stopCyRestPolling()\n    }\n  }, [])\n\n  const { classes } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) || \n    !props.cyrest.available\n\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork\n  const lastResponse = props.cyrest.lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState('dormant')\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n\n  if (state === 'dormant' && isLoadingNetwork) {\n    setMessage('Opening network in Cytoscape Desktop . . .')\n    setState('openLoading')\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === 'openLoading' || \n    state === 'closeLoading') && \n    lastResponse != null\n    ) {\n    setState('openResult')\n    if (lastResponse.type === 'IMPORT_NETWORK_SUCCEEDED') {\n      setMessage('Network opened in Cytoscape Desktop!')\n    } else {\n      setMessage('Network failed to open in Cytoscape Desktop')\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === 'openResult' && !open) {\n    setOpen(true)\n  }\n  if (state === 'openResult' && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === 'openResult' && currentId === cycleId) {\n        setState('dormant')\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    if (state === 'openLoading') {\n      setState('closeLoading')\n    } else if (state === 'openResult') {\n      setState('dormant')\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={'right'}\n        vertical={'bottom'}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default (withStyles(styles)(OpenInCytoscapeButton))","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { withStyles } from '@material-ui/core'\n\nimport logo from '../../../assets/images/zoom-logo.svg'\nimport disabledLogo from '../../../assets/images/zoom-logo-mono.svg'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '1.75em'\n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    borderColor: '#000000',\n    color: '#000000',\n    '&:active': {\n      borderColor: '#000000',\n      color: '#000000'\n    }\n  }\n})(Button)\n\nconst ResetZoomButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const handleClick = () => {\n    props.networkActions.fitNetworkView(true)\n  }\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(ResetZoomButton)\n","import React, { useState } from 'react'\n\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: 'center',\n    lignHeight: '50%',\n    position: 'relative',\n    top: '1px'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  let highlight = props.uiState.highlights\n  \n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight\n      props.uiStateActions.setHighlights(highlight)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement='bottom'>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? 'secondary' : 'default'}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? 'secondary' : 'disabled'}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(Highlighter))\n\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono-light.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em',\n    color: '#4DA1DE'\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: '4.3em',\n    borderColor: '#4DA1DE',\n    color: '#4DA1DE',\n    '&:active': {\n      borderColor: '#4DA1DE',\n      color: '#4DA1DE'\n    },\n  },\n})(Button);\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(OpenInNDExButton))","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes } = this.props\n    const token = this.props.ndexSave.profile ? this.props.ndexSave.profile.authorization.token : null\n    const cx = this.props.network.originalCX\n\n    const networkUrl = this.props.ndexSave.networkUrl\n\n    return this.props.ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default (withStyles(styles)(NDExSave))\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default (NDExSignInModal)\n\n\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\n\n\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: '4.3em',\n      borderColor: '#000000',\n      color: '#000000',\n      '&:active': {\n        borderColor: '#000000',\n        color: '#000000'\n      },\n    },\n  })(Button);\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default (withStyles(styles)(OpenOriginalNetworkButton))\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Tooltip } from '@material-ui/core'\n\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport ResetZoomButton from './ResetZoomButton'\nimport Highlighter from './Highlighter'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    paddingTop: '0',\n    paddingBottom: '0',\n    paddingLeft: '0.5em',\n    paddingRight: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...other} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props}/>\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from 'react'\n\nimport { withStyles } from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from '@material-ui/core/InputBase';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: '0',\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: '#FFFFFF',\n    border: '1px solid #ced4da',\n    textColor: '#757575',\n    padding: '5px 26px 5px 12px',\n    '&:focus': {\n      borderRadius: 4,\n      backgroundColor: '#FFFFFF'\n    },\n  },\n}))(InputBase);\n\nconst formStyle = {\n  position: 'relative',\n  left: '11px',\n  marginTop: '8px',\n  marginBottom: '8px'\n}\n\nconst divStyle = {\n  paddingLeft: '16px',\n  borderBottom: '1px solid rgba(239, 239, 239, 1)',\n}\n\nconst typeStyle = {\n  position: 'relative',\n  top: '14.5px'\n}\n\nconst selectStyle = {\n  color: 'secondary'\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === 'p-Value') {\n      setSortPValueOn(true)\n      props.uiStateAction.setSortOrder(['p-Value', 'Overlap'])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions.setSortOrder(['Overlap', 'p-Value'])\n    }\n  }\n  \n  if (props.uiState.selectedSource === 'enrichment') {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? 'p-Value' : 'Overlap'}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={'p-Value'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={'Overlap'}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default (SortPanel)\n            ","import React, { useEffect } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\nimport Typography from '@material-ui/core/Typography'\n\nimport SortPanel from './SortPanel'\n\nimport './style.css'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  },\n  noPadding: {\n    paddingTop: '0',\n    paddingBottom: '0',\n  },\n  center: {\n    justifyContent: 'center',\n    position: 'relative',\n    top: '25%',\n    display: 'flex',\n    width: '100%',\n    height: '100%'\n  },\n})\n\nconst findSort = (sortOrder) => {\n  if (sortOrder[0] === 'p-Value') {\n    console.log('p-Value')\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else {\n    console.log('overlap')\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  }\n}\n\nconst NetworkList = props => {\n  const hits = props.hits\n  \n  const openFirst = (first) => {\n    if (first != null) {\n      console.log(first)\n      props.handleFetch(first.networkUUID, first.description, first.nodes, first.edges, first.hitGenes)\n    }\n  }\n\n  //Sort hits\n  useEffect(() => {\n    const sortFunction = findSort(props.uiState.sortOrder)\n    console.log(props.uiState.sortOrder)\n    const newHits = hits.sort(sortFunction)\n    props.searchActions.setActualResults(newHits)\n    openFirst(newHits[0])\n    props.networkActions.changeListIndex(1)\n  }, [props.uiState.sortOrder, props.uiState.selectedSource])\n\n  useEffect(() => {\n    //Open first hit\n    openFirst()\n  }, [props.uiState.selectedSource])\n  \n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  let index = 1\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index);\n  }\n\n  const selectedIndex = props.network.listIndex\n\n  const query = props.search.results.genes\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\">\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry => props.renderNetworkListItem(\n              query.size, \n              entry, \n              props.classes, \n              handleListItemClick, \n              selectedIndex, \n              index++\n              ))\n            }\n          </MenuList>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography \n            variant={'subtitle1'}\n            color={'textSecondary'}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default (withStyles(styles)(NetworkList))\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\n\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport Typography from '@material-ui/core/Typography'\nimport { ListItem } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes()\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes, handleListItemClick, selectedIndex, index) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    // console.log('Entry:', networkEntry)\n\n    const topDescription = \n      'N: ' +\n      nodes + \n      ', E: ' +\n      edges\n      \n    const bottomDescription1 = \n      'Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let bottomDescription2 = ''\n    const pVal = details.PValue\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(2)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      bottomDescription2 = 'P-value = ' + pValText\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={event => {\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n          handleListItemClick(event, index)\n        }}\n        selected={selectedIndex === index}\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              \n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n                  {topDescription}\n                </Typography>\n              </Tooltip>\n              <div>\n                <Typography component=\"span\" variant={'caption'}>\n                  {bottomDescription1}\n                </Typography>\n                </div>\n              <div>\n                <Typography component=\"span\" variant={'caption'}>\n                  {bottomDescription2}\n                </Typography>\n              </div>\n            </React.Fragment>\n          }\n        />\n        </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList \n        renderNetworkListItem={renderNetworkListItem} \n        handleFetch={handleFetch}\n        hits={props.hits}\n        {...props}\n      />\n      <NetworkView \n        handleImportNetwork={handleImportNetwork} \n        {...props}\n      />\n    </Split>\n  )\n}\n\nexport default (Ndex)\n","import React from 'react'\n\nimport Ndex from './Ndex'\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const results = props.results\n\n  if (results === null || results === undefined) {\n    return (\n      <LoadingPanel \n        title={'Loading results'} \n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  } else {\n    return (\n      <Ndex \n        hits={results.results} \n        sourceUUID={results.sourceUUID}\n        {...props}\n      />\n    )\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n    props.networkActions.changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const searchResults = props.search.searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name === \"enrichment\" ? \"Gene Enrichment\" : \n                                          source.name === \"interactome\" ? \"Gene Neighborhood\" : source.name} />\n          ))}\n        </Tabs>\n        <TabContent \n          results={results}\n          {...props} \n        />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default (withStyles(styles)(Results))","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.sourcessetQuery(geneList)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar \n        open={open} \n        setOpen={setOpen}\n        message={'Genes are copied to clipboard!'}\n        autoHideDuration={4000}\n        horizontal={'left'}\n        vertical={'bottom'}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default (withStyles(styles)(GeneTextBox))\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport classNames from 'classnames'\n\nimport logo from '../../assets/images/ndex-logo-mono-dark.svg'\nimport cytoLogo from '../../assets/images/cytoscape-logo-mono-dark.svg'\nimport nrnbLogo from '../../assets/images/nrnb-logo-mono-dark.svg'\nimport wpLogo from '../../assets/images/wp-logo-mono-dark.svg'\nimport idekerLogo from '../../assets/images/ideker-logo-mono-dark.svg'\nimport HomeIcon from '@material-ui/icons/Home'\n\nimport GeneTextBox from './GeneTextBox'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: '1em',\n    width: '1.5em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    position: 'relative',\n    left: '16px'\n  }\n})\n\nconst titleStyle = {\n  position: 'relative',\n  left: '16px'\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...props } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\" style={titleStyle}>\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <div className={classes.textBox}>\n              <GeneTextBox {...props} />\n             </div>\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n              \n            <Tooltip title=\"Help\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={() => openLink(HELP_URL)}\n              >\n                <HelpIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NDEx\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NDEX_URL)}\n              >\n                <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst CYTOSCAPE_URL = 'https://cytoscape.org/'\nconst NRNB_URL = 'https://nrnb.org/'\nconst WP_URL = 'https://www.wikipathways.org/'\nconst IL_URL = 'http://idekerlab.ucsd.edu/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, { withTheme: true})(TitleBar))","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport github from '../../assets/images/github.svg'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin',\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...props} />\n      <SettingsPanel {...props}/>\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default (withStyles(styles, {withTheme: true})(AppShell))","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const isFetching = props.search.isFetching\n  const searchResult = props.search.searchResult\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props} >\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props} >\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props}/>\n      </div>\n    </AppShell>\n  )\n}\n\nexport default (HomePanel)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nimport HomePanel from '../../components/HomePanel'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel {...props} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n  \n    const sourceNames = sources.map(source => source.name)\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/)\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n    \n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(/,/g, ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles)(SearchTextBox))","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\n\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\nimport LoadingPanel from '../LoadingPanel'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={\n          <div style={{color: 'black'}}>\n            Please wait...\n          </div>\n        }\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox \n        {...props}\n      />\n      <Footer />\n    </div>\n  )\n}\n\nexport default (StartPanel)","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell \n    {...props}\n  >\n    <StartPanel\n      {...props}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nimport TopPage from '../../components/TopPage'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      {...props}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\n\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setZoomed,\n  setSortOrder,\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: 'enrichment',\n  zoomed: false,\n  sortOrder: ['p-Value', 'Overlap'],\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    },\n    [setZoomed]: (state, payload) => {\n      return {\n        ...state,\n        zoomed: payload.payload\n      }\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      }\n    },\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  fitNetworkView\n} from '../actions/network'\n\nimport { setZoomed } from '../actions/uiState'\n\nimport { clearSelectedGenes } from '../actions/search'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0,\n  fit: false\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue',\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      setZoomed(true)\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      }\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: payload.payload\n      }\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      }\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: payload.payload\n      }\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      }\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      }\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      }\n    },\n    [fitNetworkView]: (state, payload) => {\n      console.log('Fit network called:', payload.payload)\n      return {\n        ...state,\n        fit: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from '../actions/cyrest'\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    '/overlaynetwork?sourceUUID=' +\n    sourceUUID +\n    '&networkUUID=' +\n    networkUUID\n\n  console.log('Calling CX API:', fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, 'json'])\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from 'redux-saga/effects'\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from '../actions/cyrest'\n\nimport * as cyrest from '../api/cyrest'\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  while (true) {\n    try {\n      const statusResponse = yield call(cyrest.status, 1234)\n      const statusJson = yield call([statusResponse, 'json'])\n      yield put({ type: SET_AVAILABLE, payload: true })\n    } catch (e) {\n      //console.log(e)\n      yield put({ type: SET_AVAILABLE, payload: false })\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport cyRestStatusSaga from './sagas/cyRestStatusSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}