{"version":3,"sources":["assets/images/cytoscape-logo.svg","assets/images/ndex-logo-mono.svg","assets/images/cytoscape-logo-mono.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/ucsd-logo.svg","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/Empty.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/Sorter.jsx","components/Results/Ndex/NetworkList.jsx","api/cyrest.js","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/MessageSnackbar.jsx","components/AppShell/GeneTextBox.jsx","actions/network.js","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","actions/search.js","actions/uiState.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","sagas/cyRestSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg"],"names":["module","exports","__webpack_require__","p","handleClick","geneSymbol","props","searchActions","setSelectedGenes","getChip","value","isValid","classes","hitSets","color","found","has","symbol","react_default","a","createElement","Chip_default","className","chip","avatar","Avatar_default","Check_default","label","onClick","variant","key","withStyles","theme","root","display","justifyContent","margin","spacing","unit","search","network","results","hits","hitGenes","Set","geneList","genes","matched","unmatched","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","values","Symbol","iterator","next","done","push","err","return","sortBySymbol","b","matchedSorted","sort","unmatchedSorted","sorted","concat","Object","toConsumableArray","event","console","log","target","handleClear","map","InputPanel","components_GeneList","Empty","index_es","Warning","cyInstance","PRESET_LAYOUT","name","padding","COCENTRIC_LAYOUT","minNodeSpacing","COSE_SETTING","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","edgeCounter","CytoscapeViewer","_useState","useState","_useState2","slicedToArray","collapsedEdges","setCollapsedEdges","highlights","uiState","useEffect","test","tappedBefore","tappedTimeout","on","nodes","removeClass","networkActions","deselectAll","e","warn","selected","this","data","selectNode","tappedNow","clearTimeout","emit","setTimeout","selectEdge","selectedEdge","eData","source","id","currentState","lastState","objectSpread","collapsed","toBeRestored","connectingEdges","remove","add","newState","s","$","t","edgesWith","size","newEdgeId","newEdge","edgeRecord","last","defineProperty","newEdgeInstance","width","style","line-style","text-rotation","text-margin-y","line-color","uiStateActions","setHighlights","targets","selectedGenes","length","elements","animate","zoom","center","eles","duration","fit","nodeCount","edgeCount","CytoscapeViewer_Warning","cyjs","networkAreaStyle","height","background","backgroundColor","isLayoutAvailable","isLayout","layout","resize","addClass","filter","react_cytoscape_default","stylesheet","cy","LoadingPanel","Typography_default","title","message","CircularProgress_default","NetworkViewer","isFetching","components_LoadingPanel","Results_CytoscapeViewer","GENE_CARDS_URL","GeneAnnotationList","state","tag","curState","_this","setState","getListItem","geneEntry","description","summary","ListItem_default","alignItems","_id","ListItemAvatar_default","ListItemText_default","primary","secondary","Fragment","component","inline","ListItemSecondaryAction_default","linkIcon","IconButton_default","aria-label","href","Tooltip_default","placement","Launch_default","getListChildren","entry","pathway","pathwaySources","keys","Collapse_default","in","getPathwayStateTag","timeout","unmountOnExit","List_default","disablePadding","dbName","pathways","Array","isArray","pwEntry","button","nested","ListItemIcon_default","Info_default","inset","getNotFound","notFound","Divider_default","getUnmatchedListItem","Error_default","toUpperCase","get","React","Component","marginLeft","marginTop","paddingLeft","getAttrMap","attrs","listAttrMap","forEach","attr","n","v","findAttributes","originalCX","attrType","len","NodeProperties","listAttr","nodeId","d","startsWith","po","toString","getListNodeAttr","join","TableBrowser_GeneAnnotationList","assign","EdgeProperties","formatValue","modifiedText","removeHtmlTags","text","replace","NetworkProperties","networkAttr","Math","random","useStyles","makeStyles","container","overflow","list","subtitle","DISABLED_STYLE","TableBrowser","selectedNode","TableBrowser_NodeProperties","TableBrowser_EdgeProperties","TableBrowser_NetworkProperties","buttonIcon","minWidth","cyrest","handleImportNetwork","disabled","uuid","available","disableFocusListener","Button_default","alt","src","logoDisabled","logo","paddingRight","maxWidth","marginRight","highlight","setHighlight","evt","WbIncandescent_default","ndexSaveActions","setNDExModalOpen","NDExSave","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","saveToNDEx","cx","token","handleClose","networkUrl","_this2","_this$props","ndexSave","profile","authorization","text-transform","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","details","error","JSON","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","google_login_default","clientId","render","renderProps","buttonText","CredentialsSignOn","_this$props2","handleCredentialsSignOn","button_cls","onSubmit","type","placeholder","required","autoComplete","NDExSignIn","_React$Component3","handleError","inherits","createClass","_this$props3","onLoginSuccess","item","xs","NDExSignInModal_GoogleSignOn","NDExSignInModal_CredentialsSignOn","NDExSignInModal","onLogout","_this3","setProfile","preventDefault","credentialsSignOn","handleOnSuccess","resp","googleSignOn","setErrorMessage","_this$props4","others","objectWithoutProperties","open","ndexModal","onClose","aria-labelledby","image","NDExSignInModal_NDExSignIn","errorMessage","components_NDExSave","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","paddingBottom","OpenInBrowser_default","fontSize","toolbar","grow","flexGrow","menuButton","breakpoints","up","position","borderRadius","shape","fade","palette","common","white","&:hover","searchIcon","pointerEvents","inputRoot","inputInput","paddingTop","transition","transitions","create","&:focus","buttons","border","openIcon","networkName","noWrap","Ndex_Highlighter","components_NDExSignInModal","Ndex_OpenInNDExButton","Ndex_OpenInCytoscapeButton","Ndex_OpenOriginalNetworkButton","DEFAULT_RATIO","NetworkView","resized","setResize","Ndex_NetworkToolbar","react_split_es","sizes","direction","gutterSize","onDragEnd","Ndex_NetworkViewer","Results_TableBrowser","ranges","sortBy","prop","_React$useState","_React$useState2","setValues","TextField_default","select","onChange","option","MenuItem_default","networkAvatar","menuItem","menuText","plot","renderNetworkListItem","query","MenuList_default","importNetwork","cyRESTPort","payload","importNetworkUrl","CYREST_BASE_URL","fetch","method","headers","Accept","Content-Type","body","Ndex","queryList","sourceUUID","jobId","checkCytoscapeConnection","statusUrl","cyRESTApi","port","catch","Error","then","res","handleErrors","running","cyrestActions","setAvailable","updateHistory","networkUUID","searchResults","sourceName","selectedSource","history","Ndex_NetworkList","querySize","networkEntry","edges","imageURL","rank","pVal","PValue","descriptionText","descriptionText2","pValText","toExponential","val","networkFetchStarted","handleFetch","listTitle","Ndex_NetworkView","importNetworkStarted","sourceId","TabContent","Results_Ndex","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","setSelectedTabIndex","newValue","setSelectedSource","Results_Empty","selectedSourceName","Tabs_default","networkClear","Tab_default","Results_TabContent","MessageSnackbar","reason","setOpen","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","input","flex","iconButton","divider","geneTextRef","useRef","queryGenes","queryText","setQuery","_useState3","_useState4","loadCSS","document","querySelector","handleSearch","sourceNames","geneListString","split","clearAll","searchStarted","AppShell_MessageSnackbar","Paper_default","elevation","getElementById","execCommand","Icon_default","classNames","icon","Delete_default","InputBase_default","onKeyDown","ref","Search_default","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODE","SELECT_EDGE","DESELECT_ALL","createAction","networkFetchSucceeded","networkFetchFailed","TitleBar","handleMenu","setSettingsOpen","isSettingsOpen","handleHomeButton","AppBar_default","appBar","appBarShift","Toolbar_default","disableGutters","hide","Menu_default","AppShell_GeneTextBox","aria-haspopup","Home_default","openLink","HELP_URL","Help_default","NDEX_URL","ndexLogo","easing","sharp","leavingScreen","easeOut","enteringScreen","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","setServicesListOpen","handleDrawerClose","isOpen","Drawer_default","drawer","anchor","paper","drawerPaper","ChevronLeft_default","ChevronRight_default","Cloud_default","ExpandLess_default","ExpandMore_default","sourceEntry","version","status","index","Settings_default","LINKS","link","github","flexShrink","drawerHeader","mixins","content","contentShift","cyrestport","URLSearchParams","location","setPort","CssBaseline_default","AppShell_TitleBar","components_SettingsPanel","children","HomePanel","fetchResultStarted","onpopstate","onBackButtonEvent","_props$search","searchResult","components_AppShell","components_Results","components_InputPanel","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","clearQuery","searchSucceeded","searchFailed","setSearchResult","fetchResultSucceeded","fetchResultFailed","SET_SETTINGS_OPEN","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","SET_HIGHLIGHTS","SET_SELECTED_SOURCE","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","findSourceStarted","findSourceSucceeded","findSourceFailed","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkSucceeded","importNetworkFailed","SET_PORT","SET_AVAILABLE","SET_NDEX_MODAL_OPEN","SET_PROFILE","CREDENTIALS_SIGN_ON","GOOGLE_SIGN_ON","SAVE_TO_NDEX","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","_ref","pathname","ReactGA","set","page","pageview","components_HomePanel","EXAMPLES","examples","searchButtonEl","anchorEl","Boolean","repaceDelimiters","currentTarget","core_Menu_default","transformOrigin","example","exampleIdx","CY_URL","UCSD_URL","Footer","cyLogo","ucsdLogo","StartPanel","queryString","parse","isSearching","ndex","TopPage_SearchTextBox","TopPage_Footer","TopPage","TopPage_StartPanel","components_TopPage","Top","containers_TopPageContainer","App","containers_MainContainer","hostname","match","EMPTY_STATE","searchStatus","resultList","handleActions","_handleActions","singleResult","uiState_handleActions","utils","CyNetworkUtils","cx2js","CxToJs","vs","selector","css","background-color","background-opacity","border-width","fadedNode","opacity","fadedEdge","overlay-color","overlay-padding","overlay-opacity","activeObject","network_handleActions","isLayoutComplete","convertCx2cyjs","getBackGround","niceCX","rawCXtoNiceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","properties","upperQuery","gene","source_handleActions","isFetchingSource","cyrest_handleActions","ndexSave_handleActions","rootReducer","combineReducers","fetchNetwork","searchGenes","MYGENE_BASE_URL","getSource","mode","response","ok","checkStatus","getResult","arguments","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","SELECTED_SOURCES","regenerator_default","wrap","_context","prev","takeLatest","stop","_marked","sourceJson","_ref2","geneRes","searchRes","geneJson","resultLocation","parts","filtered","_context2","cySearchApi","sent","all","myGeneApi","filterGenes","put","uniqueGeneMap","t0","_marked2","sleep","ms","Promise","resolve","statusRes","statusJson","_resultRes","_resultJson","_progress","_resultRes2","json","resultRes","resultJson","_context3","progress","abrupt","_marked3","params","_context4","api","_marked4","reducedSources","orderedSources","_context5","includes","firstEl","secondEl","indexOf","_marked5","Map","notfound","cyrestSaga","watchImportNetwork","cyRestSaga_marked","getCyRESTPort","addNumberVerification","patchedCX","aspect","numberVerification","longNumber","cyRestSaga_marked2","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","ndexSaveSaga_marked","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","endsWith","ndexSaveSaga_marked2","user","pwd","auth","responseJson","basicAuthSignIn","accountName","password","btoa","firstName","ndexSaveSaga_marked3","responseText","networkURL","ndexSaveSaga_marked4","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","cyRestSaga","es","react_router_dom","basename","process","react_router","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73be490a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono.e913eb27.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Avatar from '@material-ui/core/Avatar'\nimport Chip from '@material-ui/core/Chip'\nimport CheckIcon from '@material-ui/icons/Check'\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  chip: {\n    margin: theme.spacing.unit\n  }\n})\n\nconst handleClick = (geneSymbol, props) => {\n  props.searchActions.setSelectedGenes([geneSymbol])\n}\n\nconst handleClear = (event) => {\n  console.log('#### Clear selection', event.target.value)\n  // props.searchActions.setSelectedGenes([])\n}\n\nconst GeneList = props => {\n  const { classes, search, network } = props\n\n  const results = search.results\n  const hits = network.hitGenes\n  const hitSets = new Set(hits)\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const sortBySymbol = (a, b) => {\n    if (a.symbol < b.symbol) {\n      return -1\n    }\n    if (a.symbol > b.symbol) {\n      return 1\n    }\n    return 0\n  }\n\n  const matchedSorted = matched.sort(sortBySymbol)\n  const unmatchedSorted = unmatched.sort(sortBySymbol)\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\" onClick={event => handleClear(event)}>\n      {sorted.map(value => getChip(value, true, classes, props, hitSets))}\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, classes, props, hitSets) => {\n  let color = 'default'\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = 'secondary'\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        className={classes.chip}\n        avatar={<Avatar>{found ? <CheckIcon /> : '-'}</Avatar>}\n        label={value.symbol}\n        onClick={() => handleClick(value.symbol, props)}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={'INVALID: ' + value}\n        onClick={handleClick}\n        key={value}\n      />\n    )\n  }\n}\n\nGeneList.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(GeneList)\n","import React from 'react'\nimport './style.css'\nimport GeneList from '../GeneList'\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>Query Genes</div>\n      <GeneList {...props} />\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"title\">{}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\n\nimport './style.css'\n\nconst Warning = props => (\n  <div className=\"warning-container\">\n    <div className=\"warning-message-box\">\n      <Typography variant=\"h6\">\n        Network is too big for interactive view\n      </Typography>\n      <Typography variant=\"subtitle1\" />\n    </div>\n  </div>\n)\n\nexport default Warning\n","import React, { useEffect, useState } from 'react'\r\nimport CytoscapeComponent from 'react-cytoscapejs'\r\n\r\nimport './style.css'\r\nimport Warning from './Warning'\r\nlet cyInstance = null\r\n\r\nconst PRESET_LAYOUT = {\r\n  name: 'preset',\r\n  padding: 6\r\n}\r\n\r\nconst COCENTRIC_LAYOUT = {\r\n  name: 'concentric',\r\n  padding: 6,\r\n  minNodeSpacing: 100\r\n}\r\n\r\nconst COSE_SETTING = {\r\n  name: 'cose',\r\n  padding: 6,\r\n  nodeRepulsion: function(node) {\r\n    return 10080000\r\n  },\r\n  nodeOverlap: 400000,\r\n  idealEdgeLength: function(edge) {\r\n    return 10\r\n  }\r\n}\r\n\r\nexport const MAX_NETWORK_SIZE = 5000\r\n\r\nlet edgeCounter = 0\r\n\r\nlet extState = {}\r\n\r\n/**\r\n *\r\n * Simple wrapper for cytoscape.js react component\r\n *\r\n * @param props\r\n * @returns {*}\r\n * @constructor\r\n */\r\nconst CytoscapeViewer = props => {\r\n  const [collapsedEdges, setCollapsedEdges] = useState({})\r\n  console.log('=================Current state::::', collapsedEdges)\r\n\r\n  const { highlights } = props.uiState\r\n\r\n  useEffect(() => {\r\n    console.log('*****************colUP::::Current state::::', collapsedEdges)\r\n  }, collapsedEdges)\r\n\r\n  useEffect(test => {\r\n    console.log(\r\n      '+++++++++++++++++++++++++++++INSIDE::::Current state::::',\r\n      collapsedEdges,\r\n      test\r\n    )\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n\r\n    cyInstance.on('tap', function(event) {\r\n      try {\r\n        cyInstance.nodes().removeClass('connected')\r\n        const target = event.target\r\n        if (target === cyInstance) {\r\n          props.networkActions.deselectAll()\r\n          console.log('UNSELECT')\r\n        }\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n    })\r\n\r\n    cyInstance.on('tap', 'node', function() {\r\n      try {\r\n        cyInstance.nodes().removeClass('connected')\r\n        const selected = this.data()\r\n        props.networkActions.selectNode(selected)\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n    })\r\n\r\n    let tappedBefore\r\n    let tappedTimeout\r\n\r\n    cyInstance.on('tap', 'edge', event => {\r\n      let tappedNow = event.target\r\n      if (tappedTimeout && tappedBefore) {\r\n        clearTimeout(tappedTimeout)\r\n      }\r\n\r\n      if (tappedBefore === tappedNow) {\r\n        tappedNow.emit('dblTap')\r\n        tappedBefore = null\r\n        return\r\n      } else {\r\n        tappedTimeout = setTimeout(function() {\r\n          tappedBefore = null\r\n        }, 200)\r\n        tappedBefore = tappedNow\r\n      }\r\n\r\n      try {\r\n        const selected = tappedNow.data()\r\n        console.log('Run all ET event:', event, selected)\r\n        // cyInstance.nodes().removeClass('connected')\r\n        // const { source, target } = selected\r\n        // cyInstance.$('#' + source + ', #' + target).addClass('connected')\r\n\r\n        props.networkActions.selectEdge(selected)\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n    })\r\n\r\n    cyInstance.on('dblTap', 'edge', event => {\r\n      const selectedEdge = event.target\r\n      const eData = selectedEdge.data()\r\n      const { source, target, id } = eData\r\n\r\n      let currentState = null\r\n      setCollapsedEdges(lastState => {\r\n        currentState = lastState\r\n        return { ...lastState }\r\n      })\r\n      // Check this edge is collapsed one or not\r\n\r\n      const collapsed = currentState[id]\r\n      console.log(\r\n        '22##Selected edge and state:::',\r\n        currentState,\r\n        event,\r\n        eData,\r\n        collapsedEdges\r\n      )\r\n\r\n      if (collapsed !== undefined) {\r\n        console.log('!!!!!!!!!!!!!!!!!!!!!collapes edge:', eData, collapsed)\r\n        const toBeRestored = collapsed.connectingEdges\r\n        console.log('!!!!!!!!!!!!!!!!!!!!!RESTORE:', toBeRestored)\r\n        cyInstance.remove(selectedEdge)\r\n        cyInstance.add(toBeRestored)\r\n\r\n        setCollapsedEdges(lastState => {\r\n          const newState = { ...lastState }\r\n          delete newState[id]\r\n\r\n          console.log('NEW State:', newState)\r\n          return newState\r\n        })\r\n\r\n        return\r\n      }\r\n\r\n      const s = cyInstance.$('#' + source)\r\n      const t = cyInstance.$('#' + target)\r\n      const connectingEdges = s.edgesWith(t)\r\n\r\n      if (connectingEdges.size() === 1) {\r\n        console.log('# Single Edge = 1', connectingEdges)\r\n        return\r\n      }\r\n\r\n      console.log('-----Connecting Edges', connectingEdges)\r\n\r\n      // Create new collapsed edge\r\n\r\n      const newEdgeId = 'collapsed' + edgeCounter++\r\n      const newEdge = {\r\n        data: {\r\n          source,\r\n          target,\r\n          id: newEdgeId\r\n        }\r\n      }\r\n\r\n      const edgeRecord = {\r\n        selectedEdge,\r\n        connectingEdges\r\n      }\r\n\r\n      setCollapsedEdges(last => ({ ...last, [newEdgeId]: edgeRecord }))\r\n\r\n      cyInstance.remove(connectingEdges)\r\n      const newEdgeInstance = cyInstance.add(newEdge)\r\n\r\n      // Apply custom style\r\n      const width = connectingEdges.size() * 1.5\r\n      newEdgeInstance.style({\r\n        width,\r\n        'line-style': 'dotted',\r\n        'text-rotation': 'autorotate',\r\n        label: 'Bundled ' + connectingEdges.size() + ' Edges',\r\n        color: '#555555',\r\n        'text-margin-y': width + 10,\r\n        'line-color': '#FF0000'\r\n      })\r\n    })\r\n\r\n    // Reset the UI state (hilight)\r\n    props.uiStateActions.setHighlights(true)\r\n\r\n    return () => {\r\n      console.log('Network viewer unmounted')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (cyInstance === undefined || cyInstance === null) {\r\n      return\r\n    }\r\n\r\n    const targets = props.search.selectedGenes\r\n    if (targets === null || targets === undefined || targets.length === 0) {\r\n      return\r\n    }\r\n\r\n    const selected = cyInstance.elements('node[name = \"' + targets[0] + '\"]')\r\n\r\n    if (selected.length !== 0) {\r\n      cyInstance.animate(\r\n        {\r\n          zoom: 2,\r\n          center: {\r\n            eles: selected[0]\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n    } else {\r\n      cyInstance.animate(\r\n        {\r\n          fit: {\r\n            eles: cyInstance.elements(),\r\n            padding: 10\r\n          }\r\n        },\r\n        {\r\n          duration: 500\r\n        }\r\n      )\r\n    }\r\n  }, [props.search.selectedGenes])\r\n\r\n  const numObjects = props.network.nodeCount + props.network.edgeCount\r\n  if (numObjects > MAX_NETWORK_SIZE) {\r\n    return <Warning />\r\n  }\r\n\r\n  const cyjs = props.network.network\r\n  if (cyjs === null || cyjs === undefined) {\r\n    return null\r\n  }\r\n\r\n  const networkAreaStyle = {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: props.network.backgroundColor\r\n  }\r\n\r\n  const isLayoutAvailable = cyjs.isLayout\r\n\r\n  let layout = PRESET_LAYOUT\r\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\r\n    layout = COSE_SETTING\r\n  } else if (!isLayoutAvailable) {\r\n    layout = COCENTRIC_LAYOUT\r\n  }\r\n\r\n  if (cyInstance !== null) {\r\n    cyInstance.resize()\r\n\r\n    if (highlights) {\r\n      cyInstance.elements().addClass('faded')\r\n      const query = cyInstance.filter('node[querynode = \"true\"]')\r\n      query.addClass('highlight')\r\n    } else {\r\n      cyInstance\r\n        .elements()\r\n        .removeClass('faded')\r\n        .removeClass('highlight')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CytoscapeComponent\r\n      elements={cyjs.elements}\r\n      layout={layout}\r\n      style={networkAreaStyle}\r\n      stylesheet={cyjs.style}\r\n      cy={cy => (cyInstance = cy)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CytoscapeViewer\r\n","import React from 'react'\nimport './style.css'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\">\n    <Typography className=\"loading-title\" variant={'h5'} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"default\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from 'react'\nimport './style.css'\nimport CytoscapeViewer from '../CytoscapeViewer'\nimport LoadingPanel from '../../LoadingPanel'\n\nconst NetworkViewer = props => (\n  <div className=\"network-view\">\n\n    {props.network.isFetching ? (\n      <LoadingPanel\n        title=\"Loading Network...\"\n      />\n    ) : (\n      <CytoscapeViewer {...props} />\n    )}\n  </div>\n)\n\nexport default NetworkViewer\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport IconButton from '@material-ui/core/IconButton'\nimport LinkIcon from '@material-ui/icons/Launch'\nimport InfoIcon from '@material-ui/icons/Info'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport './style.css'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Collapse from '@material-ui/core/Collapse'\nimport CheckIcon from '@material-ui/icons/Check'\n\n// For external link\n\nconst GENE_CARDS_URL = 'https://www.genecards.org/cgi-bin/carddisp.pl?gene='\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  title: {\n    marginLeft: '0.5em',\n    marginTop: '0.3em'\n  },\n  description: {\n    marginLeft: '1em',\n    marginTop: '0.3em'\n  },\n  matched: {\n    backgroundColor: '#C51162'\n  },\n  unmatched: {\n    backgroundColor: 'red'\n  },\n  linkIcon: {\n    paddingLeft: '1em'\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = 'pw_' + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search.results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={geneEntry.symbol}\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                {geneEntry.name}\n              </Typography>\n              <Typography variant=\"caption\">{description}</Typography>\n            </React.Fragment>\n          }\n        />\n        <ListItemSecondaryAction className={classes.linkIcon}>\n          <IconButton\n            aria-label=\"Link to GeneCards\"\n            href={GENE_CARDS_URL + geneEntry.symbol}\n            target=\"_blank\"\n          >\n            <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n              <LinkIcon />\n            </Tooltip>\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    )\n  }\n\n  getListChildren = (entry, classes) => {\n    const pathway = entry.pathway\n\n    const pathwaySources = Object.keys(pathway)\n\n    return (\n      <Collapse\n        in={this.state[getPathwayStateTag(entry._id)]}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List component=\"div\" disablePadding>\n          {pathwaySources.map(dbName => {\n            const pathways = pathway[dbName]\n\n            if (!Array.isArray(pathways)) {\n              return (\n                <ListItem button className={classes.nested}>\n                  <ListItemIcon>\n                    <InfoIcon />\n                  </ListItemIcon>\n                  <ListItemText inset primary={pathways.name} />\n                </ListItem>\n              )\n            }\n\n            return (\n              <React.Fragment>\n                {pathways.map(pwEntry => (\n                  <ListItem button className={classes.nested}>\n                    <ListItemIcon>\n                      <InfoIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      inset\n                      primary={dbName + ': ' + pwEntry.id}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                          >\n                            {pwEntry.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          })}\n        </List>\n      </Collapse>\n    )\n  }\n\n  getNotFound = (notFound, classes) => {\n    return (\n      <div>\n        <Divider variant=\"middle\" />\n        <Typography className={classes.title} variant=\"body1\">\n          {'Unmatched: ' + notFound.length}\n        </Typography>\n        <List>\n          {notFound.map(entry => this.getUnmatchedListItem(entry, classes))}\n        </List>\n      </div>\n    )\n  }\n\n  getUnmatchedListItem = geneEntry => {\n    return (\n      <ListItem alignItems=\"flex-start\" key={geneEntry}>\n        <ListItemIcon>\n          <ErrorIcon />\n        </ListItemIcon>\n        <ListItemText inset primary={geneEntry} />\n      </ListItem>\n    )\n  }\n}\n\nconst getPathwayStateTag = id => 'pw_' + id\n\nexport default withStyles(styles)(GeneAnnotationList)\n","// List attributes starts with this prefix.\r\nconst LIST_PREFIX = 'list_of_'\r\n\r\nexport const getListNodeAttr = (originalCX, nodeId) => {\r\n  const nodeAttr = findAttributes(originalCX, 'nodeAttributes')\r\n  const listAttr = nodeAttr.filter(\r\n    attr => attr.d !== undefined && attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\r\n  )\r\n\r\n  return getAttrMap(listAttr)\r\n}\r\n\r\nexport const getListNetworkAttr = originalCX => {\r\n  const networkAttr = findAttributes(originalCX, 'networkAttributes')\r\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\r\n\r\n  return getAttrMap(listAttr)\r\n}\r\n\r\nconst getAttrMap = attrs => {\r\n  const listAttrMap = {}\r\n  attrs.forEach(attr => {\r\n    listAttrMap[attr.n] = attr.v\r\n  })\r\n\r\n  return listAttrMap\r\n}\r\n\r\nexport const findAttributes = (originalCX, attrType) => {\r\n  let len = originalCX.length\r\n  let attr = null\r\n\r\n  while (len--) {\r\n    const entry = originalCX[len]\r\n    if (entry[attrType]) {\r\n      attr = entry[attrType]\r\n      break\r\n    }\r\n  }\r\n\r\n  return attr\r\n}\r\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport GeneAnnotationList from './GeneAnnotationList'\nimport { getListNodeAttr } from './attribute-util'\n\n\nconst NodeProperties = props => {\n  const { node, originalCX } = props\n  const listAttr = getListNodeAttr(originalCX, node.id)\n\n  const keys = Object.keys(node)\n\n  keys.forEach(key => {\n    if (listAttr[key] !== undefined) {\n      node[key] = listAttr[key].join(', ')\n    }\n  })\n\n  return (\n    <React.Fragment>\n      <GeneAnnotationList geneSymbol={node.name} {...props} />\n\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={node[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default NodeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\n\nconst EdgeProperties = props => {\n  const { edge } = props\n\n  const keys = Object.keys(edge)\n\n  return (\n    <React.Fragment>\n      {keys.map(key => (\n        <ListItem key={key}>\n          <ListItemText inset primary={edge[key]} secondary={key} />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default EdgeProperties\n","import React from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { getListNetworkAttr, findAttributes } from './attribute-util'\n\nconst NetworkProperties = props => {\n  const { originalCX } = props\n\n  // Find network props\n  let networkAttr = findAttributes(originalCX, 'networkAttributes')\n  if (networkAttr === null) {\n    return\n  }\n\n  return (\n    <React.Fragment>\n      {networkAttr.map(entry => (\n        <ListItem key={Math.random()}>\n          <ListItemText\n            inset\n            primary={formatValue(entry)}\n            secondary={entry.n}\n          />\n        </ListItem>\n      ))}\n    </React.Fragment>\n  )\n}\n\nconst formatValue = entry => {\n  let modifiedText = entry.v\n\n  if(Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(', ')\n  }\n  return removeHtmlTags(modifiedText.toString())\n}\n\nconst removeHtmlTags = text => {\n  const originalText = text\n  if (originalText === null || originalText === undefined) {\n    return ''\n  } else {\n    return originalText.replace(/<(?:.|\\n)*?>/gm, ' ')\n  }\n}\n\nexport default NetworkProperties\n","import React, { useRef } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport List from '@material-ui/core/List'\nimport NodeProperties from './NodeProperties'\nimport EdgeProperties from './EdgeProperties'\nimport NetworkProperties from './NetworkProperties'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: '0.2em',\n    backgroundColor: '#FFFFFF',\n    overflow: 'auto'\n  },\n  list: {\n    width: '100%'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  }\n}))\n\nconst DISABLED_STYLE = {\n  width: '100%'\n}\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  const classes = useStyles()\n  const network = props.network\n\n  if (network === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const { originalCX } = network\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  const node = network.selectedNode\n  const edge = network.selectedEdge\n\n  if (!node && !edge) {\n    return (\n      <div className={classes.container}>\n        <List component=\"nav\" className={classes.list}>\n          <NetworkProperties originalCX={originalCX} />\n        </List>\n      </div>\n    )\n  }\n\n  return (\n    <div className={classes.container}>\n      <List component=\"nav\" className={classes.list}>\n        {node !== null ? (\n          <NodeProperties node={node} originalCX={originalCX} {...props} />\n        ) : (\n          <EdgeProperties edge={edge} />\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default TableBrowser\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/cytoscape-logo.svg'\nimport logoDisabled from '../../../assets/images/cytoscape-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em'\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  const { classes, cyrest, handleImportNetwork } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) || !cyrest.available\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open this network in Cytoscape Desktop\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img\n            alt=\"Cytoscape logo\"\n            src={disabled ? logoDisabled : logo}\n            className={classes.buttonIcon}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)\n","import React, { useState } from 'react'\nimport HighlightIcon from '@material-ui/icons/WbIncandescent'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  buttonIcon: {\n    paddingRight: '0.2em'\n  },\n  button: {\n    height: '3em',\n    maxWidth: '13em',\n    minWidth: '13em',\n    marginRight: '0.5em'\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n\n  const [highlight, setHighlight] = useState(true)\n\n  const handleChange = evt => {\n    setHighlight(!highlight)\n    props.uiStateActions.setHighlights(!highlight)\n  }\n\n  return (\n    <Button\n      className={classes.button}\n      variant=\"outlined\"\n      color={highlight ? 'secondary' : 'default'}\n      onClick={handleChange}\n    >\n      <HighlightIcon\n        className={classes.buttonIcon}\n        color={highlight ? 'secondary' : 'disabled'}\n      />\n      Highlight Genes\n    </Button>\n  )\n}\n\nexport default withStyles(styles)(Highlighter)\n","import React from 'react'\nimport './style.css'\n\nimport Button from '@material-ui/core/Button'\nimport logo from '../../../assets/images/ndex-logo.svg'\nimport logoDisabled from '../../../assets/images/ndex-logo-mono.svg'\nimport { withStyles } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: '2em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginRight: '0.5em'\n  }\n})\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(OpenInNDExButton)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { DialogContentText, DialogActions, Button } from '@material-ui/core'\n\nimport config from './assets/config'\nimport './style.css'\n\nconst styles = theme => ({\n  button: {\n    'text-transform': 'none'\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: ''\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default withStyles(styles)(NDExSave)\n","const config = {\n    NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n    // testing\n    // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n    // public\n    googleClientId: '802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com',\n}\n\nexport default config;","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from '@material-ui/core'\nimport GoogleLogin from 'react-google-login'\n\nimport GoogleLogo from './assets/images/google-logo.svg'\nimport GoogleLogoDisabled from './assets/images/google-logo-disabled.svg'\n\nimport NDExSave from '../NDExSave'\n\nimport './style.css'\n\nimport config from './assets/config'\n\nconst styles = theme => ({})\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          'Not a valid origin for the client: http://localhost:'\n        )) ||\n      (err.error && err['error']) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? 'google-sign-in-button'\n      : 'google-sign-in-button googleButtonDisabled'\n    const title = googleSSO\n      ? 'Sign in with your Google account'\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        'To use the Google Sign In feature you can do one of two things:' +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? 'btn btn-primary disabled' : 'btn btn-primary'\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const { ndexSave } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...others} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NDExSignInModal)\n","export const METHOD_POST = 'POST'\nexport const METHOD_GET = 'GET'\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = 'http://dev.ndexbio.org/'\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + 'integratedsearch/'\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser'\nimport { SERVICE_SERVER_URL } from '../../../api/apiConstants'\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: '0.1em'\n  },\n  button: {\n    height: '3em',\n    width: '4.3em',\n    minWidth: '4.3em',\n    marginLeft: '0.5em'\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes, network } = props\n\n  const disabled = !(network.uuid && network.uuid.length > 0)\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <Button\n          color={'default'}\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? 'disabled' : 'inherit'}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + '#/network/' + uuid\n\n  console.log('Opening original network entry:', url)\n  window.open(url, '_blank')\n}\n\nexport default withStyles(styles)(OpenOriginalNetworkButton)\n","import './style.css'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport OpenInCytoscapeButton from './OpenInCytoscapeButton'\nimport Highlighter from './Highlighter'\nimport { Tooltip } from '@material-ui/core'\nimport OpenInNDExButton from './OpenInNDExButton'\nimport NDExSignInModal from '../../NDExSignInModal'\nimport NDExSave from '../../NDExSave'\nimport OpenOriginalNetworkButton from './OpenOriginalNetworkButton'\n\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#EFEFEF',\n    height: '4em',\n    padding: '0.5em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: '2.5em',\n    paddingLeft: '0.5em'\n  },\n  buttons: {\n    padding: '0.3em',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    border: 'solid 1px #999999'\n  },\n  openIcon: {\n    marginRight: '0.5em'\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...others } = props\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={props.network.networkName}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {props.network.networkName}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <Highlighter {...others} />\n      <NDExSignInModal {...others}>\n        <NDExSave {...others} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...others} />\n      <OpenInCytoscapeButton {...others} />\n      <OpenOriginalNetworkButton {...others} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from 'react'\nimport './style.css'\nimport Split from 'react-split'\n\nimport NetworkViewer from './NetworkViewer'\nimport TableBrowser from '../TableBrowser'\nimport NetworkToolbar from './NetworkToolbar'\n\nconst DEFAULT_RATIO = [60, 40]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={'network-view-top'}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={6}\n        className={'nv-container'}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <TableBrowser {...props} />\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import './style.css'\nimport React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { fade } from '@material-ui/core/styles/colorManipulator'\nimport { withStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst ranges = [\n  {\n    value: 'rank',\n    label: 'Rank'\n  },\n  {\n    value: 'name',\n    label: 'Name'\n  },\n  {\n    value: 'numNodes',\n    label: 'Number of Nodes'\n  },\n  {\n    value: 'numEdges',\n    label: 'Number of Edges'\n  },\n  {\n    value: 'overlap',\n    label: '% Overlap'\n  }\n]\n\nconst styles = theme => ({\n  toolbar: {\n    background: '#FFFFFF'\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  sortBy: {\n    width: '15em'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit,\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%'\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200\n      }\n    }\n  }\n})\n\nconst Sorter = props => {\n  const { classes } = props\n\n  const [values, setValues] = React.useState({\n    sortBy: 'rank'\n  })\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value })\n  }\n\n  return (\n    <TextField\n      select\n      label=\"Sort by:\"\n      value={values.sortBy}\n      onChange={handleChange('sortBy')}\n      className={classes.sortBy}\n    >\n      {ranges.map(option => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  )\n}\n\nexport default withStyles(styles)(Sorter)\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport MenuList from '@material-ui/core/MenuList'\n\nimport './style.css'\nimport Sorter from './Sorter'\n\nconst styles = theme => ({\n  inline: {\n    display: 'inline'\n  },\n  subtitle: {\n    marginLeft: '1em',\n    marginTop: '0.5em'\n  },\n  networkAvatar: {\n    margin: 5,\n    color: '#fff',\n    backgroundColor: '#FAFAFA'\n  },\n  menuItem: {\n    '&:focus': {\n      backgroundColor: 'rgba(230,230,230,0.6)'\n    }\n  },\n  menuText: {\n    '&:focus': {}\n  },\n  secondary: {\n    width: '15em',\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0.2em'\n  },\n  plot: {\n    width: '80%',\n    background: 'teal'\n  }\n})\n\nconst NetworkList = props => {\n  const { classes, hits, renderNetworkListItem, network, search } = props\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  const query = search.results.genes\n\n  return (\n    <div className=\"network-list-wrapper\">\n      <div className=\"network-list\">\n        <MenuList>\n          {hits.map(entry => renderNetworkListItem(query.size, entry, classes))}\n        </MenuList>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(NetworkList)\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst CYREST_BASE_URL = 'http://127.0.0.1'\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + ':' + cyRESTPort + '/v1'\n\n  console.log('Calling CyREST API:', statusUrl)\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/status'\n\n  console.log('Calling CyREST API:', cyNDExStatusUrl)\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/cx'\n  console.log('Calling CyREST POST:', importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + ':' + cyRESTPort + '/cyndex2/v1/networks/' + suid\n  console.log('Calling CyREST getNetwork:', currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import React from 'react'\nimport './style.css'\n\nimport Split from 'react-split'\nimport NetworkView from './NetworkView'\nimport NetworkList from './NetworkList'\n\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport * as cyRESTApi from '../../../api/cyrest'\nimport { ListItem } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport Paper from '@material-ui/core/Paper'\n\nconst NETWORK_SIZE_TH = 5000\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const geneList = props.search.queryList\n\n  const sourceUUID = props.sourceUUID\n\n  const id = props.search.results.jobId\n\n  const checkCytoscapeConnection = props => {\n    cyRESTApi\n      .status(props.cyrest.port)\n      .catch(e => {\n        throw Error(e)\n      })\n      .then(res => handleErrors(res))\n      .then(running => {\n        props.cyrestActions.setAvailable(true)\n      })\n      .catch(error => {\n        props.cyrestActions.setAvailable(false)\n      })\n  }\n\n  const handleErrors = res => {\n    if (res !== undefined) {\n      return true\n    }\n    return false\n  }\n\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    checkCytoscapeConnection(props)\n\n    // Reset selection\n    props.searchActions.setSelectedGenes([])\n\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log('** network changed:', jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (querySize, networkEntry, classes) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      rank,\n      details\n    } = networkEntry\n\n    // console.log('Entry:', networkEntry)\n\n    const pVal = details.PValue\n    let descriptionText =\n      'N: ' +\n      nodes +\n      ', E: ' +\n      edges +\n      ',  Hit/Query = ' +\n      hitGenes.length +\n      '/' +\n      querySize\n\n    let descriptionText2 = ''\n\n    if (pVal !== undefined) {\n      let pValText = pVal.toExponential(5)\n      if (pVal === 0) {\n        pValText = 0\n      }\n      descriptionText2 = 'P-value = ' + pValText\n    }\n\n    return (\n      <ListItem\n        button\n        className={classes.menuItem}\n        key={networkUUID}\n        onClick={val =>\n          handleFetch(networkUUID, description, nodes, edges, hitGenes)\n        }\n      >\n        <ListItemIcon>\n          <img className=\"list-icon\" src={imageURL} />\n        </ListItemIcon>\n        <ListItemText\n          primary={\n            <React.Fragment>\n              <Typography component=\"span\" variant=\"caption\">\n                {'Rank ' + (rank+1)}\n              </Typography>\n              <div className={classes.listTitle}>\n                {description}\n              </div>\n            </React.Fragment>\n          }\n          secondary={\n            <React.Fragment>\n              <Tooltip title=\"Number of nodes and edges\" placement=\"bottom\">\n                <Typography component=\"span\" variant={'caption'}>\n                  {descriptionText}\n                </Typography>\n              </Tooltip>\n              <Typography component=\"span\" variant={'caption'}>\n                {descriptionText2}\n              </Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    )\n  }\n\n  return (\n    <Split sizes={[35, 65]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList renderNetworkListItem={renderNetworkListItem} {...props} />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\nexport default Ndex\n","import React from 'react'\nimport Ndex from './Ndex'\n\nimport LoadingPanel from '../LoadingPanel'\n\nconst TabContent = props => {\n  const { results } = props\n\n  if (results === null || results === undefined) {\n    return <LoadingPanel title={'Loading results'} message={'Please wait...'} />\n  } else {\n    const { sourceUUID } = results\n    return <Ndex hits={results.results} sourceUUID={sourceUUID} {...props} />\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Empty from './Empty'\nimport TabContent from './TabContent'\n\nconst styles = theme => ({\n  tabs: {\n    width: '100%',\n    backgroundColor: '#FFFFFF'\n  }\n})\n\nconst Results = props => {\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, idx)\n      console.log('** Tab change:', jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  const { classes, ...others } = props\n\n  // Source list is not available.  Just return empty result\n  const sources = props.source.sources\n  if (sources === null || sources === undefined) {\n    return <Empty />\n  }\n\n  const { searchResults } = props.search\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange}>\n          {sources.map(source => (\n            <Tab key={source.uuid} label={source.name} />\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst MessageSnackbar = props => {\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n\n    props.setOpen(false)\n  }\n\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left'\n      }}\n      open={props.open}\n      autoHideDuration={4000}\n      onClose={handleClose}\n      ContentProps={{\n        'aria-describedby': 'message-id'\n      }}\n      message={<span id=\"message-id\">Genes are copied to clipboard!</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState, useEffect, useRef } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\n\nimport { loadCSS } from 'fg-loadcss/src/loadCSS'\nimport Icon from '@material-ui/core/Icon'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport classNames from 'classnames'\nimport IconButton from '@material-ui/core/IconButton'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport MessageSnackbar from './MessageSnackbar'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '50vmin',\n    padding: '0.3em',\n    background: '#f1f1f1',\n    marginLeft: '1em'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = 'original-gene-text'\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef(null)\n\n  const [queryText, setQuery] = useState(props.search.queryGenes)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    loadCSS(\n      'https://use.fontawesome.com/releases/v5.1.0/css/all.css',\n      document.querySelector('#insertion-point-jss')\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand('copy')\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = queryText\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(',', ' ')\n    const geneList = geneListString.split(/ /)\n\n    props.searchActions.clearAll()\n    props.history.push('/')\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = evt => {\n    const value = evt.target.value\n    setQuery(value)\n  }\n\n  const handleClear = evt => {\n    setQuery('')\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch(event)\n    }\n  }\n\n  return (\n    <div>\n      <MessageSnackbar open={open} setOpen={setOpen} />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, 'far fa-clipboard')} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={queryText}\n          onChange={handleChange}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import { createAction } from 'redux-actions'\n\nexport const NETWORK_FETCH_STARTED = 'NETWORK_FETCH_STARTED'\nexport const NETWORK_FETCH_SUCCEEDED = 'NETWORK_FETCH_SUCCEEDED'\nexport const NETWORK_FETCH_FAILED = 'NETWORK_FETCH_FAILED'\n\nexport const NETWORK_CLEAR = 'NETWORK_CLEAR'\n\nexport const SELECT_NODE = 'SELECT_NODE'\nexport const SELECT_EDGE = 'SELECT_EDGE'\nexport const DESELECT_ALL = 'DESELECT_ALL'\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNode = createAction(SELECT_NODE)\nexport const selectEdge = createAction(SELECT_EDGE)\nexport const deselectAll = createAction(DESELECT_ALL)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport HelpIcon from '@material-ui/icons/Help'\nimport classNames from 'classnames'\nimport logo from '../../assets/images/ndex-logo-mono.svg'\nimport GeneTextBox from './GeneTextBox'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport { networkClear } from \"../../actions/network\";\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: 'none'\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  ndexLogo: {\n    height: '1em'\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  }\n})\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.networkActions.networkClear()\n    this.props.history.push('/')\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar disableGutters={!open}>\n          <IconButton\n            className={classNames(classes.menuButton, open && classes.hide)}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={this.handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>\n\n\n          <Tooltip title=\"Search by Pathway Enrichment / Gene Neighborhoods / Keywords\" aria-label=\"NDEx_tooltip\">\n            <div>\n              <Typography variant=\"h6\" color=\"inherit\">\n                NDEx Network Search\n              </Typography>\n            </div>\n          </Tooltip>\n\n          {this.props.search.results === null ? (\n            <div />\n          ) : (\n            <GeneTextBox {...others} />\n          )}\n\n          <div className={classes.grow} />\n\n          <div>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={this.handleHomeButton}\n            >\n              <HomeIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              aria-haspopup=\"true\"\n              color=\"default\"\n              onClick={() => openLink(HELP_URL)}\n            >\n              <HelpIcon fontSize=\"default\" />\n            </IconButton>\n            <IconButton\n              color=\"default\"\n              aria-label=\"Home\"\n              onClick={() => openLink(NDEX_URL)}\n            >\n              <img alt=\"NDEx logo\" src={logo} className={classes.ndexLogo} />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = 'https://github.com/idekerlab/search-portal/wiki'\nconst NDEX_URL = 'https://www.ndexbio.org/'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(TitleBar)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Collapse from '@material-ui/core/Collapse'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SettingIcon from '@material-ui/icons/Settings'\nimport github from '../../assets/images/github.svg'\nimport CloudIcon from '@material-ui/icons/Cloud'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport './style.css'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={'Version: ' + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={' Status: ' + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {['Settings'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" />\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: 'Source Code',\n    url: 'https://github.com/idekerlab/search-portal',\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles, { withTheme: true })(SettingsPanel)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport TitleBar from './TitleBar'\nimport SettingsPanel from '../SettingsPanel'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { withStyles } from '@material-ui/core/styles'\nimport classNames from 'classnames'\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vmin'\n  },\n  drawerHeader: {\n    display: 'flex',\n    padding: '0 8px',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end'\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get('cyrestport')\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport InputPanel from '../InputPanel'\nimport Results from '../Results'\n\nimport AppShell from '../AppShell'\nimport LoadingPanel from '../LoadingPanel'\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push('/')\n  }\n\n  const { isFetching, searchResult } = props.search\n\n  // Still searching and no result is available\n  if (isFetching && searchResult === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import { createAction } from 'redux-actions'\n\nexport const SET_QUERY = 'SET_QUERY'\nexport const CLEAR_QUERY = 'CLEAR_QUERY'\n\nexport const SEARCH_STARTED = 'SEARCH_STARTED'\nexport const SEARCH_SUCCEEDED = 'SEARCH_SUCCEEDED'\nexport const SEARCH_FAILED = 'SEARCH_FAILED'\n\nexport const SET_SEARCH_RESULT = 'SET_SEARCH_RESULT'\n\nexport const FETCH_RESULT_STARTED = 'FETCH_RESULT_STARTED'\nexport const FETCH_RESULT_SUCCEEDED = 'FETCH_RESULT_SUCCEEDED'\nexport const FETCH_RESULT_FAILED = 'FETCH_RESULT_FAILED'\n\nexport const CLEAR_ALL = 'CLEAR_ALL'\n\nexport const SET_SELECTED_GENES = 'SET_SELECTED_GENES'\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\n","import { createAction } from 'redux-actions'\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = 'SET_SETTINGS_OPEN'\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = 'SET_CYTOSCAPE_STATUS'\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = 'SET_SERVICES_LIST_OPEN'\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = 'SET_HIGHLIGHTS'\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = 'SET_SELECTED_SOURCE'\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n","import { createAction } from 'redux-actions'\n\nexport const FIND_SOURCE_STARTED = 'FIND_SOURCE_STARTED'\nexport const FIND_SOURCE_SUCCEEDED = 'FIND_SOURCE_SUCCEEDED'\nexport const FIND_SOURCE_FAILED = 'FIND_SOURCE_FAILED'\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\n","import { createAction } from 'redux-actions'\n\nexport const IMPORT_NETWORK_STARTED = 'IMPORT_NETWORK_STARTED'\nexport const IMPORT_NETWORK_SUCCEEDED = 'IMPORT_NETWORK_SUCCEEDED'\nexport const IMPORT_NETWORK_FAILED = 'IMPORT_NETWORK_FAILED'\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = 'SET_PORT'\nexport const setPort = createAction(SET_PORT)\n\nexport const SET_AVAILABLE = 'SET_AVAILABLE'\nexport const setAvailable = createAction(SET_AVAILABLE)\n","import { createAction } from 'redux-actions'\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = 'SET_NDEX_MODAL_OPEN'\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = 'SET_PROFILE'\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = 'CREDENTIALS_SIGN_ON'\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = 'GOOGLE_SIGN_ON'\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = 'SAVE_TO_NDEX'\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = 'SET_NETWORK_URL'\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = 'SET_ERROR_MESSAGE'\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport HomePanel from '../../components/HomePanel'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\n\nimport ReactGA from 'react-ga'\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <HomePanel {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport InputBase from '@material-ui/core/InputBase'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport * as examples from './example-genes'\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: '' })\n\n  useEffect(() => {\n    if (props.search !== undefined && props.search.results !== null) {\n      const jobId = props.search.results.jobId\n\n      const pathParam = props\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: '' })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = repaceDelimiters(genes)\n    const geneList = geneListString.split(/ /)\n    props.searchActions.setQuery(geneListString)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const repaceDelimiters = query => {\n    // TODO: what's the supported set of delimiters?\n    return query.replace(',', ' ')\n  }\n\n  return (\n    <Paper className={'search-text-box'} elevation={1}>\n      <div>\n        <IconButton\n          className={classes.iconButton}\n          aria-label=\"Menu\"\n          onClick={handleMenu}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          anchorEl={state.anchorEl}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right'\n          }}\n          open={open}\n          onClose={handleClose}\n        >\n          {EXAMPLES.map((example, idx) => {\n            return (\n              <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                {example.name}\n              </MenuItem>\n            )\n          })}\n        </Menu>\n      </div>\n      <Divider className={classes.divider} />\n      <IconButton\n        color={'default'}\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n        onClick={handleClear}\n      >\n        <DeleteIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Enter gene list (...or click menu for examples)\"\n        onChange={handleChange('query')}\n        onKeyDown={handleKeyPress}\n        value={state.query}\n      />\n      <IconButton\n        ref={searchButtonEl}\n        color={'primary'}\n        className={classes.iconButton}\n        aria-label=\"Search\"\n        onClick={handleSearch}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from 'react'\nimport './style.css'\n\n// SVG images for links\nimport cyLogo from '../../assets/images/cytoscape-logo.svg'\nimport ndexLogo from '../../assets/images/ndex-logo.svg'\nimport ucsdLogo from '../../assets/images/ucsd-logo.svg'\n\nimport Typography from '@material-ui/core/Typography'\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = 'https://cytoscape.org/'\nconst NDEX_URL = 'https://www.ndexbio.org/'\nconst UCSD_URL =\n  'https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx'\n\nconst openLink = url => {\n  window.open(url, '_blank')\n}\n\nexport default Footer\n","import React, { useEffect } from 'react'\nimport './style.css'\nimport SearchTextBox from './SearchTextBox'\nimport Footer from './Footer'\n\nimport ndex from '../../assets/images/ndex-logo.svg'\nimport LoadingPanel from '../LoadingPanel'\n\nimport queryString from 'query-string'\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(',')\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {\n    }\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={'Searching Remote Database'}\n        message={'Please wait...'}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <img className=\"start-logo-main\" src={ndex} alt=\"logo\" />\n      </div>\n      <SearchTextBox {...props} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from 'react'\n\nimport AppShell from '../AppShell'\nimport StartPanel from './StartPanel'\n\nconst TopPage = props => (\n  <AppShell {...props}>\n    <StartPanel {...props} />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport TopPage from '../../components/TopPage'\nimport { withRouter } from 'react-router-dom'\n\nimport * as searchActions from '../../actions/search'\nimport * as uiStateActions from '../../actions/uiState'\nimport * as networkActions from '../../actions/network'\nimport * as sourceActions from '../../actions/source'\nimport * as cyrestActions from '../../actions/cyrest'\nimport * as ndexSaveActions from '../../actions/ndexSave'\nimport ReactGA from 'react-ga'\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return <TopPage {...props} />\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from 'react'\nimport MainContainer from './containers/MainContainer'\nimport TopPageContainer from './containers/TopPageContainer'\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from 'redux-actions'\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult\n} from '../actions/search'\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: '',\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: '', queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(' ')\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: payload.payload }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        // searchResults: payload.payload.searchResults,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from 'redux-actions'\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource\n} from '../actions/uiState'\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: true,\n  selectedSource: ''\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log('OPEN = ', payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from 'redux-actions'\nimport { CxToJs, CyNetworkUtils } from 'cytoscape-cx2js'\nimport { MAX_NETWORK_SIZE } from '../components/Results/CytoscapeViewer'\nimport * as vs from '../assets/data/styles.json'\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNode,\n  selectEdge,\n  deselectAll\n} from '../actions/network'\n\nconst LAYOUT_SCALING_FACTOR = 2.0\n\nconst defaultState = {\n  isFetching: false,\n  uuid: '',\n  jobId: '',\n  sourceId: '',\n  networkName: '',\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNode: null,\n  selectedEdge: null\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\nconst SELECTION_COLOR = '#F2355B'\n\n// Standard selection\nPRESET_VS.push({\n  selector: 'node:selected',\n  css: {\n    'background-color': 'red',\n    color: '#FFFFFF',\n    'background-opacity': 1,\n    'border-width': 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: 'node.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: 'edge.faded',\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: '.highlight',\n  css: {\n    opacity: 1.0,\n    'overlay-color': '#C51162',\n    'overlay-padding': 12,\n    'overlay-opacity': 0.5\n  }\n}\n\nconst activeObject = {\n  selector: 'node:active',\n  css: {\n    'overlay-color': '#FFFF66',\n    'overlay-padding': 25,\n    'overlay-opacity': 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log('Query start: genes = ', payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: 'blue'\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn('Could not convert given CX to CYJS:', err)\n          throw new Error('Could not convert given CX to CYJS:', err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: '',\n        networkName: '',\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNode]: (state, payload) => {\n      return { ...state, selectedNode: payload.payload, selectedEdge: null }\n    },\n    [selectEdge]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: payload.payload }\n    },\n    [deselectAll]: (state, payload) => {\n      return { ...state, selectedNode: null, selectedEdge: null }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = 'cyVisualProperties'\nconst getBackGround = cx => {\n  let color = 'pink'\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p['properties_of'] === 'network')\n    return networkVp[0].properties['NETWORK_BACKGROUND_PAINT']\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n    const position = node.position\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data['query'] = 'true'\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from 'redux-actions'\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded\n} from '../actions/source'\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn('Error:', payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  setAvailable,\n  setPort\n} from '../actions/cyrest'\n\nconst defaultState = {\n  available: false,\n  port: 1234,\n  error: null\n}\n\nconst source = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn('Error===', payload.error)\n      return {\n        ...state,\n        error: payload.error\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log('CyREST port = ', payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [setAvailable]: (state, payload) => {\n      console.log('CyREST available = ', payload.payload)\n      return { ...state, available: payload.payload }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from 'redux-actions'\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from '../actions/ndexSave'\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from 'redux'\n\nimport search from './search'\nimport uiState from './uiState'\nimport network from './network'\nimport source from './source'\nimport cyrest from './cyrest'\nimport ndexSave from './ndexSave'\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from './apiConstants'\r\n\r\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  const fetchUrl =\r\n    BASE_URL +\r\n    id +\r\n    '/overlaynetwork?sourceUUID=' +\r\n    sourceUUID +\r\n    '&networkUUID=' +\r\n    networkUUID\r\n\r\n  // const url2 = 'http://public.ndexbio.org/v2/network/b9989f1c-816f-11e8-a4bf-0ac135e8bacf'\r\n\r\n  // console.log('#############Calling CX API:', url2)\r\n\r\n  return fetch(fetchUrl, {\r\n    method: METHOD_GET,\r\n    headers\r\n  })\r\n}\r\n\r\nexport { fetchNetwork }\r\n","import { METHOD_POST } from './apiConstants'\n\nconst MYGENE_BASE_URL = 'http://mygene.info/v3/query'\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    'fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway'\n  const searchUrl =\n    MYGENE_BASE_URL + '?q=' + geneList + '&scopes=symbol&' + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from './apiConstants'\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + 'source'\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: 'cors'\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + '/status'\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch source list:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append('source', sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to fetch search result:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    'Content-Type': 'application/json'\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error('Failed to send query:' + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from 'redux-saga/effects'\nimport * as api from '../api/ndex'\nimport * as myGeneApi from '../api/mygene'\nimport * as cySearchApi from '../api/search'\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from '../actions/search'\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from '../actions/source'\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from '../actions/network'\n\nconst API_CALL_INTERVAL = 1000\n\nconst SELECTED_SOURCES = ['enrichment', 'interactome']\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (sourceNames === undefined || sourceNames === null || sourceNames.length === 0) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, 'json'])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== 'keyword')\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, 'json'])\n    const resultLocation = searchRes.headers.get('Location')\n    const parts = resultLocation.split('/')\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: 'NDEx network search error',\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const currentResult = {}\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, 'json'])\n\n      const { progress } = statusJson\n      if (progress === 100) {\n        // All results are available.  Simply return it.\n        const resultRes = yield call(cySearchApi.getResult, jobId)\n        const resultJson = yield call([resultRes, 'json'])\n        //\n\n        yield put({\n          type: SET_SEARCH_RESULT,\n          payload: {\n            singleResult: resultJson\n          }\n        })\n\n        yield put({\n          type: FETCH_RESULT_SUCCEEDED,\n          payload: {\n            searchResults: resultJson\n          }\n        })\n        return\n      }\n\n      const status = statusJson.sources\n\n      let idx = status.length\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, 'json'])\n\n          currentResult[sourceName] = json\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n        }\n      }\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    const resultRes = yield call(cySearchApi.getResult, jobId)\n    const resultJson = yield call([resultRes, 'json'])\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {\n        searchResults: resultJson\n      }\n    })\n  } catch (e) {\n    console.warn('NDEx search error:', e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: 'Failed to fetch search result',\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, 'json'])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, 'json'])\n\n    const reducedSources = json.results.filter(entry =>\n      SELECTED_SOURCES.includes(entry['name'])\n    )\n\n    const orderedSources = reducedSources.sort(\n      (firstEl, secondEl) =>\n        SELECTED_SOURCES.indexOf(firstEl['name']) -\n        SELECTED_SOURCES.indexOf(secondEl['name'])\n    )\n\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as cyrest from '../api/cyrest'\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED\n} from '../actions/cyrest'\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect['numberVerification']) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n\n    console.log('CyREST response:', response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn('CyREST import network error:', e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: 'CyREST import network error',\n        error: e.message\n      }\n    })\n  }\n}\n","import { METHOD_GET, METHOD_POST } from './apiConstants'\n\nconst NDEX_USER_VALIDATION = 'http://ndexbio.org/v2/user?valid=true'\nconst NDEX_SAVE = 'http://ndexbio.org/v2/network'\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from 'redux-saga/effects'\nimport * as ndexSave from '../api/ndexSave'\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from '../actions/ndexSave'\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + ' ' + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: 'google',\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || 'Failed to verify account. ' + error\n    if (\n      message.startsWith('User with email') &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = 'Basic ' + window.btoa(user + ':' + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, 'json'])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: 'ndex',\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: 'Unknown error'\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    'Content-Type': 'application/json',\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log('resp', resp)\n  console.log('resp.body' + resp.body)\n\n  const responseText = yield call([resp, 'text'])\n\n  const networkURL = responseText.replace('/v2/', '/#/')\n\n  console.log('networkURL', networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from 'react'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport 'typeface-roboto'\nimport { render } from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport createSagaMiddleware from 'redux-saga'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport './index.css'\nimport { App, Top } from './App'\nimport * as serviceWorker from './serviceWorker'\n\n// Import root reducers\nimport rootReducer from './reducers'\nimport rootSaga from './sagas/ndexSaga'\nimport cyRestSaga from './sagas/cyRestSaga'\nimport ndexSaveSaga from './sagas/ndexSaveSaga'\nimport ReactGA from 'react-ga'\n\nimport { SET_QUERY } from './actions/search'\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from './analytics'\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: 'OPEN_IN_CYTOSCAPE',\n  NetworkSelected: 'NETWORK_FETCH_STARTED'\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === 'IMPORT_NETWORK_STARTED') {\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if ('NETWORK_FETCH_STARTED') {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: 'User Action',\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = 'UA-62588031-6' // Dev server\nexport const GA_STAGING_ID = 'UA-62588031-7' // For staging server\nexport const GA_PRODUCTION = 'UA-62588031-8' // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";"],"sourceRoot":""}