{"version":3,"sources":["assets/images/cytoscape-logo-mono-light.svg","assets/images/zoom-logo.svg","assets/images/zoom-logo-mono.svg","assets/images/ndex-logo-mono-light.svg","components/NDExSignInModal/assets/images/google-logo.svg","components/NDExSignInModal/assets/images/google-logo-disabled.svg","assets/images/github.svg","assets/images/search-logo.svg","assets/images/ucsd-logo.svg","assets/images/cytoscape-logo-mono-dark.svg","assets/images/nrnb-logo-mono-dark.svg","assets/images/wp-logo-mono-dark.svg","assets/images/ideker-logo-mono-dark.svg","actions/search.js","actions/uiState.js","actions/network.js","actions/source.js","actions/cyrest.js","actions/ndexSave.js","components/GeneList/index.jsx","components/InputPanel/index.jsx","components/Results/HoverTab.jsx","components/Results/Empty.jsx","components/AppShell/MessageSnackbar.jsx","components/Results/CytoscapeViewer/Warning.jsx","components/Results/CytoscapeViewer/LayoutSettings.js","components/Results/CytoscapeViewer/index.jsx","components/LoadingPanel/index.jsx","components/Results/Ndex/NetworkViewer.jsx","components/Results/TableBrowser/attribute-util.js","components/Results/TableBrowser/camel-case-util.js","components/Results/TableBrowser/strip-scripts-util.js","components/Results/TableBrowser/ExpandPanel.jsx","components/Results/TableBrowser/NetworkProperties.jsx","components/Results/TableBrowser/GeneAnnotationList.jsx","components/Results/TableBrowser/NodeProperties.jsx","components/Results/TableBrowser/EdgeProperties.jsx","components/Results/TableBrowser/TableBrowserPanel.jsx","components/Results/TableBrowser/index.jsx","components/Results/Ndex/color-manipulator-util.js","components/Results/Ndex/OpenInCytoscapeButton.jsx","components/Results/Ndex/ResetZoomButton.jsx","components/Results/Ndex/Highlighter.jsx","components/Results/Ndex/OpenInNDExButton.jsx","components/NDExSave/index.jsx","components/NDExSignInModal/assets/config.js","components/NDExSignInModal/index.jsx","api/apiConstants.js","components/Results/Ndex/OpenOriginalNetworkButton.jsx","components/Results/Ndex/NetworkToolbar.jsx","components/Results/Ndex/NetworkView.jsx","components/Results/Ndex/SortPanel.jsx","components/Results/Ndex/NetworkList.jsx","components/Results/Ndex/index.jsx","components/Results/TabContent.jsx","components/Results/index.jsx","components/AppShell/GeneTextBox.jsx","components/AppShell/TitleBar.jsx","components/SettingsPanel/index.jsx","components/AppShell/index.jsx","components/HomePanel/index.jsx","containers/MainContainer/index.jsx","components/TopPage/SearchTextBox.jsx","components/TopPage/Footer.jsx","components/TopPage/StartPanel.jsx","components/TopPage/index.jsx","containers/TopPageContainer/index.jsx","App.js","serviceWorker.js","reducers/search.js","reducers/uiState.js","reducers/network.js","reducers/source.js","reducers/cyrest.js","reducers/ndexSave.js","reducers/index.js","api/ndex.js","api/mygene.js","api/search.js","sagas/ndexSaga.js","api/cyrest.js","sagas/cyRestSaga.js","sagas/cyRestStatusSaga.js","api/ndexSave.js","sagas/ndexSaveSaga.js","index.js","analytics.js","assets/images/ndex-logo.svg","assets/images/cytoscape-logo.svg"],"names":["module","exports","SET_QUERY","CLEAR_QUERY","SEARCH_STARTED","SEARCH_SUCCEEDED","SEARCH_FAILED","SET_SEARCH_RESULT","FETCH_RESULT_STARTED","FETCH_RESULT_SUCCEEDED","FETCH_RESULT_FAILED","CLEAR_ALL","SET_SELECTED_GENES","CLEAR_SELECTED_GENES","SET_SEARCH_RESULT_ORDER","SET_ACTUAL_RESULTS","setQuery","createAction","clearQuery","searchStarted","searchSucceeded","searchFailed","setSearchResult","fetchResultStarted","fetchResultSucceeded","fetchResultFailed","clearAll","setSelectedGenes","clearSelectedGenes","setSearchResultOrder","setActualResults","SET_SETTINGS_OPEN","setSettingsOpen","SET_CYTOSCAPE_STATUS","setCytoscapeStatus","SET_SERVICES_LIST_OPEN","setServicesListOpen","SET_HIGHLIGHTS","setHighlights","SET_SELECTED_SOURCE","setSelectedSource","SET_SORT_ORDER","setSortOrder","NETWORK_FETCH_STARTED","NETWORK_FETCH_SUCCEEDED","NETWORK_FETCH_FAILED","NETWORK_CLEAR","SELECT_NODES","UNSELECT_NODES","SELECT_EDGES","UNSELECT_EDGES","DESELECT_ALL","CHANGE_TAB","CHANGE_LIST_INDEX","FIT_NETWORK_VIEW","SET_ANNOTATIONS","networkFetchStarted","networkFetchSucceeded","networkFetchFailed","networkClear","selectNodes","unselectNodes","selectEdges","unselectEdges","deselectAll","changeTab","changeListIndex","fitNetworkView","setAnnotations","FIND_SOURCE_STARTED","FIND_SOURCE_SUCCEEDED","FIND_SOURCE_FAILED","SET_CURRENT_SOURCE","findSourceStarted","findSourceSucceeded","findSourceFailed","setCurrentSource","IMPORT_NETWORK_STARTED","IMPORT_NETWORK_SUCCEEDED","IMPORT_NETWORK_FAILED","importNetworkStarted","importNetworkSucceeded","importNetworkFailed","SET_PORT","setPort","FETCH_AVAILABLE","SET_AVAILABLE","fetchAvailable","setAvailable","START_CYREST_POLLING","STOP_CYREST_POLLING","startCyRestPolling","stopCyRestPolling","SET_NDEX_MODAL_OPEN","setNDExModalOpen","SET_PROFILE","setProfile","CREDENTIALS_SIGN_ON","credentialsSignOn","GOOGLE_SIGN_ON","googleSignOn","SAVE_TO_NDEX","saveToNDEx","SET_NETWORK_URL","setNetworkUrl","SET_ERROR_MESSAGE","setErrorMessage","buttonStyle","padding","borderRadius","height","borderWidth","backgroundColor","selectedButtonStyle","selectedChipStyle","margin","toggleButtonGroupStyle","ToggleButton","withStyles","label","MuiToggleButton","getChip","value","isValid","props","hitSets","color","found","has","symbol","Chip","avatar","Avatar","variant","key","selected","style","clickable","GeneList","results","search","hits","network","hitGenes","Set","handleChange","event","newAlignment","selectedGenes","searchActions","className","geneList","genes","matched","unmatched","values","push","matchedSorted","sort","reverse","unmatchedSorted","sorted","List","map","geneValue","ListItem","ToggleButtonGroup","exclusive","onChange","InputPanel","HoverTab","Hover","theme","root","opacity","Tab","Empty","Typography","message","MessageSnackbar","handleClose","reason","setOpen","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","id","action","IconButton","aria-label","onClick","logo","button","display","marginLeft","marginRight","position","top","outer","justifyContent","alignItems","inner","marginTop","width","classes","useState","state","setState","setMessage","uuid","length","cyrest","available","isLoadingNetwork","lastResponse","cycleId","console","log","type","currentId","setTimeout","Fragment","Tooltip","title","placement","aria-haspopup","handleImportNetwork","alt","src","cytoLogo","align","PRESET_LAYOUT","name","animate","CONCENTRIC_LAYOUT","minNodeSpacing","COSE_LAYOUT","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","fit","Cytoscape","use","CyCanvas","cyInstance","annotationRenderer","CxToCyCanvas","CxToJs","utils","CyNetworkUtils","MemoCytoscapeViewer","React","memo","highlights","uiState","originalCX","undefined","useMemo","networkAttr","filter","entry","networkAttributes","firstEntry","annotationEntry","attr","n","nice","rawCXtoNiceCX","Promise","resolve","reject","drawAnnotationsFromNiceCX","drawBackground","then","networkActions","useEffect","on","e","warn","selectEdge","edges","$","forEach","element","data","selectNode","nodes","removeClass","this","source","target","addClass","elements","targets","zoom","center","eles","duration","nodeCount","edgeCount","cyjs","isLayoutAvailable","isLayout","layout","resize","stop","background","stylesheet","cy","oldProps","newProps","annotations","isEqual","LoadingPanel","CircularProgress","size","NetworkViewer","isFetching","actualResults","resized","findAttributes","attrType","len","camelCaseToTitleCase","camelCaseString","slice","result","replace","trim","charAt","toUpperCase","stripScripts","toString","ExpandPanel","defaultExpanded","divider","borderTop","Math","random","ListItemText","primary","summary","Collapse","in","timeout","unmountOnExit","component","disablePadding","details","index","useStyles","makeStyles","container","overflow","boxSizing","paddingLeft","paddingTop","lessPadding","noPadding","paddingBottom","extractContent","modifiedText","v","Array","isArray","join","extractTitle","formatPrimary","startsWith","endsWith","parse","formatContext","splitResults","split","item","NetworkProperties","context","content","leftDisplayItems","properties","contributors","wikiPathways","indraGO","networkInformation","rightDisplayItems","attributes","displayed","selectedSource","newContent","latin","english","newTitle","splice","rightDisplay","list","currentEntry","secondaryString","primaryString","leftDisplay","keyId","sizes","gutterSize","GENE_CARDS_URL","GeneAnnotationList","handleClick","tag","curState","getListItem","geneEntry","description","_id","disableGutters","ListItemAvatar","inline","href","search_results","geneSymbol","get","Component","linkIcon","nested","spacing","unit","wideList","table","tableLayout","icon","weidth","MemoNodeProperties","selectedNodes","elem","nodeData","aliasList","setDefaultExpanded","entityProperties","nodeProperties","displayItems","a","b","topDisplay","geneAnnotation","inset","aliases","represents","prefix","add","aliasLinks","alias","displayCol1","displayCol2","colSpan","valign","findNode","nodeId","nodeArray","isNaN","returnNode","MemoEdgeProperties","selectedEdges","nodeList","edgeProperties","aScore","bScore","aSource","aTarget","bSource","bTarget","listPadding","sourceSymbol","targetSymbol","queryList","includes","prevProps","subtitle","minHeight","TabContent","nodeAttributes","i","JSON","r","d","geneName","po","concat","DISABLED_STYLE","TableBrowserPanel","tableDisplayTab","Tabs","newValue","MemoTableBrowser","fade","decomposeColor","substr","re","RegExp","colors","match","parseInt","hexToRgb","marker","indexOf","substring","Error","parseFloat","min","max","process","clamp","recomposeColor","BootstrapButton","borderColor","Button","buttonIcon","minWidth","cyrestActions","disabled","disableFocusListener","logoDisabled","disabledLogo","textAlign","lignHeight","highlight","evt","uiStateActions","ndexSaveActions","NDExSave","cx","token","networkUrl","ndexSave","profile","authorization","DialogContentText","DialogActions","config","NDEX_USER_VALIDATION","googleClientId","GoogleSignOn","onFailure","err","error","stringify","onError","googleSSO","onSuccess","clsName","GoogleLogo","GoogleLogoDisabled","clientId","render","renderProps","buttonText","CredentialsSignOn","handleCredentialsSignOn","button_cls","onSubmit","FormControl","TextField","placeholder","required","autoComplete","NDExSignIn","handleError","onLoginSuccess","DialogTitle","DialogContent","Grid","xs","Paper","NDExSignInModal","onLogout","preventDefault","handleOnSuccess","resp","Dialog","ndexModal","aria-labelledby","image","errorMessage","BASE_URL","SERVICE_SERVER_URL","handleOpen","url","window","fontSize","toolbar","paddingRight","grow","flexGrow","menuButton","breakpoints","up","shape","palette","common","white","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","buttons","border","openIcon","other","networkName","noWrap","DEFAULT_RATIO","NetworkView","setResize","direction","onDragEnd","BootstrapInput","input","textColor","InputBase","formStyle","left","marginBottom","divStyle","borderBottom","typeStyle","selectStyle","SortPanel","sortPValueOn","setSortPValueOn","Select","displayEmpty","MenuItem","networkAvatar","menuItem","menuText","secondary","plot","sortFunction","sortOrder","PValue","first","handleFetch","networkUUID","handleListItemClick","enrichmentStyle","selectedIndex","listIndex","MenuList","renderNetworkListItem","titleStyle","lineHeight","wordBreak","subtitleStyle","infoStyle","Ndex","sourceUUID","jobId","updateHistory","searchResults","sourceName","history","querySize","networkEntry","imageURL","ListItemIcon","pVal","toExponential","pv","rowSpan","parent_network_nodes","parent_network_edges","sourceId","TAB_LABELS","enrichment","getSourceName","sources","idx","findResult","resultArray","currentResult","tabs","others","setSelectedTabIndex","selectedSourceName","EXAMPLES","examples","flex","iconButton","geneTextRef","useRef","anchorEl","query","queryGenes","menuOpen","Boolean","loadCSS","document","querySelector","handleSearch","sourceNames","elevation","currentTarget","transformOrigin","example","Divider","getElementById","select","execCommand","Icon","classNames","onKeyDown","ref","textTransform","TitleBar","handleMenu","isSettingsOpen","handleHomeButton","AppBar","appBar","appBarShift","Toolbar","homeLogo","textBox","openLink","NDEX_URL","HELP_URL","hide","easing","sharp","leavingScreen","easeOut","enteringScreen","whiteSpace","withTheme","SettingsPanel","handleServicesItemClick","servicesListOpen","handleDrawerClose","isOpen","Drawer","drawer","anchor","paper","drawerPaper","sourceEntry","version","status","text","LINKS","link","github","flexShrink","drawerHeader","mixins","contentShift","cyrestport","URLSearchParams","location","CssBaseline","children","HomePanel","onpopstate","onBackButtonEvent","withRouter","connect","dispatch","bindActionCreators","sourceActions","listen","pathname","ReactGA","set","page","pageview","feedbackURL","searchButtonEl","handleExample","exampleIdx","autoFocus","searchLogo","Link","underline","CY_URL","UCSD_URL","Footer","ndexLogo","cyLogo","ucsdLogo","StartPanel","queryString","isSearching","flexDirection","ndex","TopPage","Top","App","hostname","EMPTY_STATE","searchStatus","resultList","handleActions","payload","singleResult","cx2js","vs","selector","css","fadedNode","fadedEdge","activeObject","isLayoutComplete","convertCx2cyjs","getBackGround","niceCX","attributeNameMap","elementsObj","cyElementsFromNiceCX","cyStyleFromNiceCX","newStyle","styleUpdater","updatedNodes","adjustLayout","checkLayout","vps","p","upperQuery","gene","isFetchingSource","currentSource","port","isFetchingAvailable","isPollingAvailable","rootReducer","combineReducers","fetchNetwork","fetchUrl","fetch","method","headers","searchGenes","MYGENE_BASE_URL","getSource","mode","response","ok","catch","checkStatus","getResult","resultUrl","URL","searchParams","append","postQuery","sourceList","queryObject","header","Headers","body","rootSaga","watchSearch","watchSearchResult","fetchSource","API_CALL_INTERVAL","takeLatest","call","cySearchApi","sourceJson","geneListString","all","myGeneApi","geneRes","searchRes","geneJson","resultLocation","parts","filtered","filterGenes","put","uniqueGeneMap","notFound","sleep","ms","finishedSourceNames","statusRes","statusJson","progress","resultRes","json","finishCount","params","api","orderedSources","Map","notfound","cyRESTPort","CYREST_BASE_URL","importNetwork","importNetworkUrl","Accept","cyrestSaga","watchImportNetwork","getCyRESTPort","addNumberVerification","aspect","patchedCX","numberVerification","longNumber","responseJson","_fetchCyRESTAvailable","_cyRestStatusSaga","delay","currentConnectionState","take","race","ndexValidation","ndexSaveSaga","watchGoogleSignOn","watchCredentialsSignOn","watchSaveToNDEx","tokenObj","token_type","id_token","profileObj","imageUrl","Authorization","user","basicAuthSignIn","accountName","pwd","password","auth","btoa","firstName","responseText","networkURL","initialize","gaOptions","siteSpeedSampleRate","EventActions","SetQuery","OpenInCytoscape","NetworkSelected","handleEvent","eventType","category","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","next","run","cyRestSaga","cyRestStatusSaga","basename","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.944773fc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-light.5b5f28e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo.6a4c26cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/zoom-logo-mono.1cd5bbee.svg\";","module.exports = __webpack_public_path__ + \"static/media/ndex-logo-mono-light.b9de38dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.c21ca9d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo-disabled.02062f61.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.617870e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-logo.19dae5a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ucsd-logo.5838f23e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo-mono-dark.72d0e13b.svg\";","module.exports = __webpack_public_path__ + \"static/media/nrnb-logo-mono-dark.5a41574a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wp-logo-mono-dark.1183f75b.svg\";","module.exports = __webpack_public_path__ + \"static/media/ideker-logo-mono-dark.5722eed3.svg\";","import { createAction } from \"redux-actions\"\n\nexport const SET_QUERY = \"SET_QUERY\"\nexport const CLEAR_QUERY = \"CLEAR_QUERY\"\n\nexport const SEARCH_STARTED = \"SEARCH_STARTED\"\nexport const SEARCH_SUCCEEDED = \"SEARCH_SUCCEEDED\"\nexport const SEARCH_FAILED = \"SEARCH_FAILED\"\n\nexport const SET_SEARCH_RESULT = \"SET_SEARCH_RESULT\"\n\nexport const FETCH_RESULT_STARTED = \"FETCH_RESULT_STARTED\"\nexport const FETCH_RESULT_SUCCEEDED = \"FETCH_RESULT_SUCCEEDED\"\nexport const FETCH_RESULT_FAILED = \"FETCH_RESULT_FAILED\"\n\nexport const CLEAR_ALL = \"CLEAR_ALL\"\n\nexport const SET_SELECTED_GENES = \"SET_SELECTED_GENES\"\nexport const CLEAR_SELECTED_GENES = \"CLEAR_SELECTED_GENES\"\n\nexport const SET_SEARCH_RESULT_ORDER = \"SET_SEARCH_RESULT_ORDER\"\nexport const SET_ACTUAL_RESULTS = \"SET_ACUTAL_RESULTS\"\n\nexport const setQuery = createAction(SET_QUERY)\nexport const clearQuery = createAction(CLEAR_QUERY)\n\n// For sending Job\nexport const searchStarted = createAction(SEARCH_STARTED)\nexport const searchSucceeded = createAction(SEARCH_SUCCEEDED)\nexport const searchFailed = createAction(SEARCH_FAILED)\n\nexport const setSearchResult = createAction(SET_SEARCH_RESULT)\n\n// For getting result\nexport const fetchResultStarted = createAction(FETCH_RESULT_STARTED)\nexport const fetchResultSucceeded = createAction(FETCH_RESULT_SUCCEEDED)\nexport const fetchResultFailed = createAction(FETCH_RESULT_FAILED)\n\nexport const clearAll = createAction(CLEAR_ALL)\n\nexport const setSelectedGenes = createAction(SET_SELECTED_GENES)\nexport const clearSelectedGenes = createAction(CLEAR_SELECTED_GENES)\n\nexport const setSearchResultOrder = createAction(SET_SEARCH_RESULT_ORDER)\nexport const setActualResults = createAction(SET_ACTUAL_RESULTS)","import { createAction } from \"redux-actions\"\n\n\n/**\n * Global state for the application UI\n *\n * @type {string}\n */\nexport const SET_SETTINGS_OPEN = \"SET_SETTINGS_OPEN\"\nexport const setSettingsOpen = createAction(SET_SETTINGS_OPEN)\n\nexport const SET_CYTOSCAPE_STATUS = \"SET_CYTOSCAPE_STATUS\"\nexport const setCytoscapeStatus = createAction(SET_CYTOSCAPE_STATUS)\n\nexport const SET_SERVICES_LIST_OPEN = \"SET_SERVICES_LIST_OPEN\"\nexport const setServicesListOpen = createAction(SET_SERVICES_LIST_OPEN)\n\nexport const SET_HIGHLIGHTS = \"SET_HIGHLIGHTS\"\nexport const setHighlights = createAction(SET_HIGHLIGHTS)\n\n// Selected tab\nexport const SET_SELECTED_SOURCE = \"SET_SELECTED_SOURCE\"\nexport const setSelectedSource = createAction(SET_SELECTED_SOURCE)\n\n// Sort settings\nexport const SET_SORT_ORDER = \"SET_SORT_ORDER\"\nexport const setSortOrder = createAction(SET_SORT_ORDER)\n","import { createAction } from \"redux-actions\"\n\nexport const NETWORK_FETCH_STARTED = \"NETWORK_FETCH_STARTED\"\nexport const NETWORK_FETCH_SUCCEEDED = \"NETWORK_FETCH_SUCCEEDED\"\nexport const NETWORK_FETCH_FAILED = \"NETWORK_FETCH_FAILED\"\n\nexport const NETWORK_CLEAR = \"NETWORK_CLEAR\"\n\nexport const SELECT_NODES = \"SELECT_NODES\"\nexport const UNSELECT_NODES = \"UNSELECT_NODES\"\nexport const SELECT_EDGES = \"SELECT_EDGES\"\nexport const UNSELECT_EDGES = \"UNSELECT_EDGES\"\nexport const DESELECT_ALL = \"DESELECT_ALL\"\nexport const CHANGE_TAB = \"CHANGE_TAB\"\nexport const CHANGE_LIST_INDEX = \"CHANGE_LIST_INDEX\"\n\nexport const FIT_NETWORK_VIEW = \"FIT_NETWORK_VIEW\"\n\nexport const SET_ANNOTATIONS = \"SET_ANNOTATIONS\"\n\nexport const networkFetchStarted = createAction(NETWORK_FETCH_STARTED)\nexport const networkFetchSucceeded = createAction(NETWORK_FETCH_SUCCEEDED)\nexport const networkFetchFailed = createAction(NETWORK_FETCH_FAILED)\n\nexport const networkClear = createAction(NETWORK_CLEAR)\n\n// Object selection in the network window\nexport const selectNodes = createAction(SELECT_NODES)\nexport const unselectNodes = createAction(UNSELECT_NODES)\nexport const selectEdges = createAction(SELECT_EDGES)\nexport const unselectEdges = createAction(UNSELECT_EDGES)\nexport const deselectAll = createAction(DESELECT_ALL)\nexport const changeTab = createAction(CHANGE_TAB)\nexport const changeListIndex = createAction(CHANGE_LIST_INDEX)\n\nexport const fitNetworkView = createAction(FIT_NETWORK_VIEW)\nexport const setAnnotations = createAction(SET_ANNOTATIONS)","import { createAction } from \"redux-actions\"\n\nexport const FIND_SOURCE_STARTED = \"FIND_SOURCE_STARTED\"\nexport const FIND_SOURCE_SUCCEEDED = \"FIND_SOURCE_SUCCEEDED\"\nexport const FIND_SOURCE_FAILED = \"FIND_SOURCE_FAILED\"\nexport const SET_CURRENT_SOURCE = \"SET_CURRENT_SOURCE\"\n\nexport const findSourceStarted = createAction(FIND_SOURCE_STARTED)\nexport const findSourceSucceeded = createAction(FIND_SOURCE_SUCCEEDED)\nexport const findSourceFailed = createAction(FIND_SOURCE_FAILED)\nexport const setCurrentSource = createAction(SET_CURRENT_SOURCE)\n","import { createAction } from \"redux-actions\"\n\nexport const IMPORT_NETWORK_STARTED = \"IMPORT_NETWORK_STARTED\"\nexport const IMPORT_NETWORK_SUCCEEDED = \"IMPORT_NETWORK_SUCCEEDED\"\nexport const IMPORT_NETWORK_FAILED = \"IMPORT_NETWORK_FAILED\"\n\nexport const importNetworkStarted = createAction(IMPORT_NETWORK_STARTED)\nexport const importNetworkSucceeded = createAction(IMPORT_NETWORK_SUCCEEDED)\nexport const importNetworkFailed = createAction(IMPORT_NETWORK_FAILED)\n\nexport const SET_PORT = \"SET_PORT\"\nexport const setPort = createAction(SET_PORT)\n\nexport const FETCH_AVAILABLE = \"FETCH_AVAILABLE\"\nexport const SET_AVAILABLE = \"SET_AVAILABLE\"\n\nexport const fetchAvailable = createAction(FETCH_AVAILABLE)\nexport const setAvailable = createAction(SET_AVAILABLE)\n\nexport const START_CYREST_POLLING = \"START_CYREST_POLLING\"\nexport const STOP_CYREST_POLLING = \"STOP_CYREST_POLLING\"\n\nexport const startCyRestPolling = createAction(START_CYREST_POLLING)\nexport const stopCyRestPolling = createAction(STOP_CYREST_POLLING)","import { createAction } from \"redux-actions\"\n\n/**\n * State for ndexSave UI\n *\n * @type {string}\n */\nexport const SET_NDEX_MODAL_OPEN = \"SET_NDEX_MODAL_OPEN\"\nexport const setNDExModalOpen = createAction(SET_NDEX_MODAL_OPEN)\n\nexport const SET_PROFILE = \"SET_PROFILE\"\nexport const setProfile = createAction(SET_PROFILE)\n\nexport const CREDENTIALS_SIGN_ON = \"CREDENTIALS_SIGN_ON\"\nexport const credentialsSignOn = createAction(CREDENTIALS_SIGN_ON)\n\nexport const GOOGLE_SIGN_ON = \"GOOGLE_SIGN_ON\"\nexport const googleSignOn = createAction(GOOGLE_SIGN_ON)\n\nexport const SAVE_TO_NDEX = \"SAVE_TO_NDEX\"\nexport const saveToNDEx = createAction(SAVE_TO_NDEX)\n\nexport const SET_NETWORK_URL = \"SET_NETWORK_URL\"\nexport const setNetworkUrl = createAction(SET_NETWORK_URL)\n\nexport const SET_ERROR_MESSAGE = \"SET_ERROR_MESSAGE\"\nexport const setErrorMessage = createAction(SET_ERROR_MESSAGE)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { withStyles } from \"@material-ui/styles\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Chip from \"@material-ui/core/Chip\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport MuiToggleButton from \"@material-ui/lab/ToggleButton\"\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\"\n\nconst buttonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"#FFFFFF\"\n}\n\nconst selectedButtonStyle = {\n  padding: \"0\",\n  borderRadius: \"20px\",\n  height: \"32px\",\n  borderWidth: \"0\",\n  backgroundColor: \"rgb(252, 235, 242)\"\n}\n\nconst selectedChipStyle = {\n  margin: \"0\",\n  borderRadius: \"20px\"\n}\n\nconst toggleButtonGroupStyle = {\n  backgroundColor: \"transparent\"\n}\n\nconst ToggleButton = withStyles({\n  label: {\n    backgroundColor: \"transparent\"\n  }\n})(MuiToggleButton)\n\nconst GeneList = props => {\n  const results = props.search.results\n  const hits = props.network.hitGenes\n  const hitSets = new Set(hits)\n\n  const handleChange = (event, newAlignment) => {\n    if (newAlignment === props.search.selectedGenes[0]) {\n      props.searchActions.clearSelectedGenes()\n    } else {\n      props.searchActions.setSelectedGenes(newAlignment)\n    }\n  }\n\n  if (!results) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const geneList = results.genes\n  if (!geneList) {\n    return <div className=\"gene-list-wrapper\" />\n  }\n\n  const matched = []\n  const unmatched = []\n\n  for (let value of geneList.values()) {\n    if (hitSets.has(value.symbol)) {\n      matched.push(value)\n    } else {\n      unmatched.push(value)\n    }\n  }\n\n  const matchedSorted = matched.sort().reverse()\n  const unmatchedSorted = unmatched.sort().reverse()\n  const sorted = [...matchedSorted, ...unmatchedSorted]\n\n  return (\n    <div className=\"gene-list-wrapper\">\n      <List>\n        {sorted.map(geneValue => (\n          <ListItem key={geneValue.symbol}>\n            <ToggleButtonGroup\n              value={props.search.selectedGenes}\n              exclusive\n              onChange={handleChange}\n              style={toggleButtonGroupStyle}\n            >\n              <ToggleButton\n                value={geneValue.symbol}\n                style={\n                  hitSets.has(geneValue.symbol) &&\n                  props.search.selectedGenes[0] === geneValue.symbol\n                    ? selectedButtonStyle\n                    : buttonStyle\n                }\n              >\n                {getChip(geneValue, true, props, hitSets)}\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  )\n}\n\nconst getChip = (value, isValid, props, hitSets) => {\n  let color = \"default\"\n  let found = false\n  if (hitSets.has(value.symbol)) {\n    color = \"secondary\"\n    found = true\n  }\n\n  if (isValid) {\n    return (\n      <Chip\n        avatar={<Avatar>{found ? <CheckIcon /> : \"-\"}</Avatar>}\n        label={value.symbol}\n        variant=\"outlined\"\n        color={color}\n        key={value.symbol}\n        selected\n        style={selectedChipStyle}\n        clickable={true}\n      />\n    )\n  } else {\n    return (\n      <Chip\n        avatar={<Avatar>G</Avatar>}\n        label={\"INVALID: \" + value}\n        key={value}\n        clickable={true}\n      />\n    )\n  }\n}\n\nexport default GeneList\n","import React from \"react\"\nimport \"./style.css\"\n\nimport GeneList from \"../GeneList\"\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst InputPanel = props => (\n  <div className=\"input-container\">\n    <div className=\"input-wrapper\">\n      <div className={\"gene-list-title\"}>\n        Query Genes\n      </div>\n      <GeneList {...props}/>\n    </div>\n  </div>\n)\n\nexport default InputPanel\n","import React from \"react\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { withStyles } from \"@material-ui/core/styles\"\n\nconst HoverTab = props =>\n{\n  const Hover = withStyles(theme => ({\n    root: {\n      \"&:hover\": {\n        backgroundColor: props.backgroundColor,\n        opacity: 1,\n      }\n    }\n  }))(props => <Tab {...props} />)\n  return <Hover {...props}/>\n}\n\nexport default HoverTab","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\n\nimport \"./style.css\"\n\n/**\n * Default panel when user start searching\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Empty = props => (\n  <div className=\"results-container\">\n    <div className=\"message\">\n      <Typography variant=\"h3\">{props.message}</Typography>\n    </div>\n  </div>\n)\n\nexport default Empty\n","import React, { useState } from \"react\"\nimport Snackbar from \"@material-ui/core/Snackbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CloseIcon from \"@material-ui/icons/Close\"\n\nconst MessageSnackbar = props => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return\n    }\n    props.setOpen(false)\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: props.vertical,\n        horizontal: props.horizontal\n      }}\n      open={props.open}\n      autoHideDuration={props.autoHideDuration || null}\n      onClose={handleClose}\n      ContentProps={{\n        \"aria-describedby\": \"message-id\"\n      }}\n      message={<span id=\"message-id\">{props.message}</span>}\n      action={[\n        <IconButton\n          color=\"inherit\"\n          key=\"close\"\n          aria-label=\"Close\"\n          onClick={props.handleClose || handleClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nexport default MessageSnackbar\n","import React, { useState } from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport cytoLogo from \"../../../assets/images/cytoscape-logo.svg\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\"\n\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nimport \"./style.css\"\n\nconst styles = theme => ({\n  logo: {},\n  button: {\n    height: \"50%\",\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    position: \"relative\",\n    top: \"15%\"\n  },\n  outer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inner: {\n    position: \"relative\",\n    marginTop: \"15%\",\n    width: \"100%\"\n  }\n})\n\nconst Warning = props => {\n  const { classes } = props\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState(\"dormant\")\n  const [message, setMessage] = useState(null)\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  if (\n    props.network.uuid &&\n    props.network.uuid.length > 0 &&\n    props.cyrest.available\n  ) {\n    //Snackbar\n    const isLoadingNetwork = props.cyrest.isLoadingNetwork\n    const lastResponse = props.cyrest.lastResponse\n\n    let cycleId = 0\n    console.log(\"cycleId: \" + cycleId)\n    console.log(\"state: \" + state)\n\n    if (state === \"dormant\" && isLoadingNetwork) {\n      setMessage(\"Opening network in Cytoscape Desktop . . .\")\n      setState(\"openLoading\")\n      if (!open) {\n        setOpen(true)\n      }\n    }\n    if (\n      (state === \"openLoading\" || state === \"closeLoading\") &&\n      lastResponse != null\n    ) {\n      setState(\"openResult\")\n      if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n        setMessage(\"Network opened in Cytoscape Desktop!\")\n      } else {\n        setMessage(\"Network failed to open in Cytoscape Desktop\")\n      }\n      if (!open) {\n        setOpen(true)\n      }\n    }\n    if (state === \"openResult\" && !open) {\n      setOpen(true)\n    }\n    if (state === \"openResult\" && open) {\n      let currentId = cycleId\n      setTimeout(() => {\n        if (state === \"openResult\" && currentId === cycleId) {\n          setState(\"dormant\")\n          cycleId++\n          setOpen(false)\n        }\n      }, 6000)\n    }\n\n    const handleClose = (event, reason) => {\n      console.log(\"click\")\n      if (state === \"openLoading\") {\n        console.log(\"openLoading to closeLoading\")\n        setState(\"closeLoading\")\n      } else if (state === \"openResult\") {\n        console.log(\"openResult to dormant\")\n        setState(\"dormant\")\n        cycleId++\n      }\n      setOpen(false)\n      console.log(\"open: \" + open)\n    }\n\n    return (\n      <React.Fragment>\n        <Tooltip title=\"Open in cytoscape\" placement=\"bottom\">\n          <IconButton\n            className={classes.button}\n            aria-haspopup=\"true\"\n            color=\"default\"\n            onClick={handleClick}\n          >\n            <img alt=\"Cytoscape logo\" src={cytoLogo} className={classes.logo} />\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n              Network is too big for interactive view. <br />\n              Click to open in Cytoscape Desktop.\n            </Typography>\n          </IconButton>\n        </Tooltip>\n        <MessageSnackbar\n          open={open}\n          setOpen={setOpen}\n          message={message}\n          setMessage={setMessage}\n          autoHideDuration={null}\n          horizontal={\"right\"}\n          vertical={\"bottom\"}\n          handleClose={handleClose}\n        />\n      </React.Fragment>\n    )\n  } else {\n    return (\n      <div className={classes.outer}>\n        <div className={classes.inner}>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" align=\"center\">\n            Network is too big for interactive view. <br />\n            Please open Cytoscape Desktop to view.\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(Warning)\n","export const PRESET_LAYOUT = {\n  name: \"preset\",\n  padding: 6,\n  animate: false\n}\n\nexport const CONCENTRIC_LAYOUT = {\n  name: \"concentric\",\n  padding: 6,\n  minNodeSpacing: 100,\n  animate: false\n}\n\nexport const COSE_LAYOUT = {\n  name: \"cose\",\n  padding: 6,\n  nodeRepulsion: function(node) {\n    return 10080000\n  },\n  nodeOverlap: 400000,\n  idealEdgeLength: function(edge) {\n    return 10\n  },\n  animate: false,\n  fit: false\n}\n","import React, { useEffect, useMemo } from \"react\"\nimport CytoscapeComponent from \"react-cytoscapejs\"\nimport { CxToJs, CyNetworkUtils } from \"cytoscape-cx2js\"\nimport Cytoscape from \"cytoscape\"\nimport CyCanvas from \"cytoscape-canvas\"\nimport { CxToCyCanvas } from \"cyannotation-cx2js\"\nimport Warning from \"./Warning\"\nimport { CONCENTRIC_LAYOUT, COSE_LAYOUT, PRESET_LAYOUT } from \"./LayoutSettings\"\nimport { isEqual } from \"lodash\"\n\nimport \"./style.css\"\n\nexport const MAX_NETWORK_SIZE = 5000\n\n// For supporting visual annotation\nCytoscape.use(CyCanvas)\n\n// This is the global instance of Cytoscape.js\nlet cyInstance = null\n\n// For annotation rendering\nconst annotationRenderer = new CxToCyCanvas(CxToJs)\nconst utils = new CyNetworkUtils()\n\n// This is the network attributes storing graphical annotations.\nconst ANNOTATION_TAG = \"__Annotations\"\n\n// Default network background color\nconst DEF_BG_COLOR = \"#FFFFFF\"\n\n/**\n *\n * Simple wrapper for cytoscape.js react component\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst CytoscapeViewer = props => {\n  const { highlights } = props.uiState\n  const { fit, originalCX } = props.network\n\n  // Use default color if this property is not available.\n  let backgroundColor = props.network.backgroundColor\n  if (backgroundColor === null || backgroundColor === undefined) {\n    backgroundColor = DEF_BG_COLOR\n  }\n\n  let niceCX = useMemo(() => {\n    if (originalCX) {\n      const networkAttr = originalCX.filter(\n        entry => entry.networkAttributes !== undefined\n      )\n\n      if (networkAttr !== undefined) {\n        const firstEntry = networkAttr[0]\n        if (\n          firstEntry === undefined ||\n          firstEntry.networkAttributes === undefined\n        ) {\n          return\n        }\n\n        const netAttrArray = firstEntry.networkAttributes\n        const annotationEntry = netAttrArray.filter(\n          attr => attr.n === ANNOTATION_TAG\n        )\n        if (annotationEntry.length !== 0 && cyInstance) {\n          const nice = utils.rawCXtoNiceCX(originalCX)\n          console.log(\n            \"* Registering annotation renderer for this niceCX:\",\n            annotationEntry\n          )\n          new Promise(function(resolve, reject) {\n            annotationRenderer.drawAnnotationsFromNiceCX(cyInstance, nice)\n            annotationRenderer.drawBackground(cyInstance, backgroundColor)\n            resolve()\n          }).then(() => {\n            props.networkActions.setAnnotations(true)\n          })\n          \n          return nice\n        }\n      }\n    }\n    return null\n  }, [originalCX, cyInstance])\n\n  /*\n    Node/Edge Selections\n   */\n  useEffect(() => {\n    // Event handler can be set only when Cytoscape.js instance is available.\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    // Background tapped: Remove selection\n    // (This is the standard Cytosape UX)\n    cyInstance.on(\"tap\", function() {\n      try {\n        props.networkActions.unselectEdges()\n        props.networkActions.unselectNodes()\n      } catch (e) {\n        console.warn(e)\n      }\n    })\n\n    const selectEdge = () => {\n      setTimeout(() => {\n        const edges = []\n        const selectedEdges = cyInstance.$(\"edge:selected\")\n        selectedEdges.forEach(element => {\n          edges.push(element.data())\n        })\n        if (edges.length === 0) {\n          props.networkActions.unselectEdges()\n        } else {\n          props.networkActions.selectEdges(edges)\n        }\n      }, 1)\n    }\n\n    const selectNode = () => {\n      setTimeout(() => {\n        const nodes = []\n        const selectedNodes = cyInstance.$(\"node:selected\")\n        selectedNodes.forEach(element => {\n          if (element.data().name !== \"\") {\n            console.log(element)\n            nodes.push(element.data())\n          }\n        })\n        if (nodes.length === 0) {\n          props.networkActions.unselectNodes()\n        } else {\n          props.networkActions.selectNodes(nodes)\n        }\n      }, 1)\n    }\n\n    cyInstance.on(\"tap\", \"node\", function() {\n      try {\n        cyInstance.nodes().removeClass(\"connected\")\n      } catch (e) {\n        console.warn(e)\n      }\n      selectNode()\n    })\n\n    cyInstance.on(\"tap\", \"edge\", function() {\n      try {\n        cyInstance.nodes().removeClass(\"connected\")\n        const selected = this.data()\n        const { source, target } = selected\n        cyInstance.$(\"#\" + source + \", #\" + target).addClass(\"connected\")\n      } catch (e) {\n        console.warn(e)\n      }\n      selectEdge()\n    })\n\n    cyInstance.on(\"boxend\", function(event) {\n      selectEdge()\n      selectNode()\n    })\n\n    // Reset the UI state (highlight)\n    if (highlights) {\n      cyInstance.elements().addClass(\"faded\")\n      const query = cyInstance.filter(\"node[querynode = \\\"true\\\"]\")\n      query.addClass(\"highlight\")\n    } else {\n      cyInstance\n        .elements()\n        .removeClass(\"faded\")\n        .removeClass(\"highlight\")\n    }\n\n    return () => {\n      console.log(\"Network viewer unmounted\")\n    }\n  }, [])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n\n    const targets = props.search.selectedGenes\n    if (targets === null || targets === undefined) {\n      return\n    }\n\n    const selected = cyInstance.elements(\"node[name = \\\"\" + targets[0] + \"\\\"]\")\n\n    if (selected.length !== 0) {\n      cyInstance.animate(\n        {\n          zoom: 2,\n          center: {\n            eles: selected[0]\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n\n    if (targets.length === 0) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n    }\n  }, [props.search.selectedGenes])\n\n  useEffect(() => {\n    if (cyInstance === undefined || cyInstance === null) {\n      return\n    }\n    if (fit) {\n      cyInstance.animate(\n        {\n          fit: {\n            eles: cyInstance.elements(),\n            padding: 6\n          }\n        },\n        {\n          duration: 500\n        }\n      )\n      props.networkActions.fitNetworkView(false)\n    }\n  }, [fit])\n\n  // Check network size and show warning if it's too big for this renderer\n  const numObjects = props.network.nodeCount + props.network.edgeCount\n  if (numObjects > MAX_NETWORK_SIZE) {\n    return <Warning {...props} />\n  }\n\n  // Render actual network\n  const cyjs = props.network.network\n  if (cyjs === null || cyjs === undefined) {\n    return null\n  }\n\n  // Network background should be set via CSS.\n  const networkAreaStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    background: \"rgba(0,0,0,0)\"\n  }\n\n  const isLayoutAvailable = cyjs.isLayout\n\n  let layout = PRESET_LAYOUT\n  if (!isLayoutAvailable && cyjs.elements.length < 500) {\n    layout = COSE_LAYOUT\n  } else if (!isLayoutAvailable) {\n    layout = CONCENTRIC_LAYOUT\n  }\n\n  if (cyInstance !== null) {\n    cyInstance.resize()\n\n    if (layout === COSE_LAYOUT) {\n      layout.stop = () => {\n        setTimeout(() => {\n          cyInstance.fit()\n        }, 200)\n      }\n    }\n\n    if (highlights) {\n      cyInstance.elements().addClass(\"faded\")\n      const query = cyInstance.filter(\"node[querynode = \\\"true\\\"]\")\n      query.addClass(\"highlight\")\n    } else {\n      cyInstance\n        .elements()\n        .removeClass(\"faded\")\n        .removeClass(\"highlight\")\n    }\n  }\n\n  return (\n    <CytoscapeComponent\n      elements={cyjs.elements}\n      layout={layout}\n      style={networkAreaStyle}\n      stylesheet={cyjs.style}\n      cy={cy => {\n        cyInstance = cy\n      }}\n    />\n  )\n}\n\nconst MemoCytoscapeViewer = React.memo(CytoscapeViewer, (oldProps, newProps) => {\n  if (newProps.network.annotations) {\n    newProps.networkActions.setAnnotations(false)\n    return false\n  }\n  return oldProps.network.fit === newProps.network.fit &&\n    oldProps.uiState.highlights === newProps.uiState.highlights &&\n    isEqual(oldProps.search.selectedGenes, newProps.search.selectedGenes)\n})\n\nexport default MemoCytoscapeViewer\n","import React from \"react\"\nimport \"./style.css\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst LoadingPanel = props => (\n  <div className=\"loading-container\" style={{backgroundColor: props.color}}>\n    <Typography className=\"loading-title\" variant={\"h5\"} color=\"primary\">\n      {props.title}\n    </Typography>\n    <Typography className=\"loading-message\" variant=\"subtitle1\" color=\"initial\">\n      {props.message}\n    </Typography>\n    <CircularProgress size={100} />\n  </div>\n)\n\nexport default LoadingPanel\n","import React from \"react\"\nimport \"./style.css\"\nimport MemoCytoscapeViewer from \"../CytoscapeViewer\"\nimport LoadingPanel from \"../../LoadingPanel\"\n\nconst NetworkViewer = props => {\n  if (props.network.isFetching) {\n    return (\n      <div className=\"network-view\">\n        <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n      </div>\n    )\n  } else if (props.search.actualResults.length === 0) {\n    return <div className=\"network-view\" />\n  } else {\n    return (\n      <div className=\"network-view\">\n        {props.network.isFetching ? (\n          <LoadingPanel title=\"Loading Network...\" color=\"#FFFFFF\" />\n        ) : (\n          <MemoCytoscapeViewer resized={props.resized} {...props} />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default NetworkViewer\n","// List attributes starts with this prefix.\nconst LIST_PREFIX = \"list_of_\"\n\nexport const getListNodeAttr = (originalCX, nodeId) => {\n  const nodeAttr = findAttributes(originalCX, \"nodeAttributes\")\n  const listAttr = nodeAttr.filter(\n    attr => attr.d.startsWith(LIST_PREFIX) && attr.po.toString() === nodeId\n  )\n\n  return getAttrMap(listAttr)\n}\n\nexport const getListNetworkAttr = originalCX => {\n  const networkAttr = findAttributes(originalCX, \"networkAttributes\")\n  const listAttr = networkAttr.filter(attr => attr.d.startsWith(LIST_PREFIX))\n\n  return getAttrMap(listAttr)\n}\n\nconst getAttrMap = attrs => {\n  const listAttrMap = {}\n  attrs.forEach(attr => {\n    listAttrMap[attr.n] = attr.v\n  })\n\n  return listAttrMap\n}\n\nexport const findAttributes = (originalCX, attrType) => {\n  let len = originalCX.length\n  let attr = null\n\n  while (len--) {\n    const entry = originalCX[len]\n    if (entry[attrType]) {\n      attr = entry[attrType]\n      break\n    }\n  }\n\n  return attr\n}\n","export const camelCaseToTitleCase = camelCaseString => {\n  if (\n    camelCaseString.slice(0, 4) === \"http\" ||\n    camelCaseString.slice(0, 5) === \"Prov:\"\n  ) {\n    return camelCaseString\n  }\n  let result = camelCaseString\n    .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\")\n    .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\")\n    .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\")\n    .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\")\n    .replace(/([a-z]+)([A-Z]+)/g, \"$1 $2\")\n    .replace(/([A-Z]+)([A-Z][a-rt-z][a-z]*)/g, \"$1 $2\")\n    .replace(/([0-9])([A-Z][a-z]+)/g, \"$1 $2\")\n    .replace(/([0-9]{2,})([A-Z]{2,})/g, \"$1 $2\")\n    .trim()\n  result = result.charAt(0).toUpperCase() + result.slice(1)\n  result = result\n    .replace(\"Wiki Pathways\", \"WikiPathways\")\n    .replace(\"Wikipathways\", \"WikiPathways\")\n    .replace(\"Sbo \", \"SBO \")\n    .replace(\"Ncipid\", \"NCI PID\")\n    .replace(\"Cptac\", \"CPTAC\")\n    .replace(\"Hpmi\", \"HPMI\")\n    .replace(\"Ccmi\", \"CCMI\")\n    .replace(\"Tcga\", \"TCGA\")\n    .replace(\"Querynode\", \"Query Node\")\n  return result\n}\n","export const stripScripts = entry => {\n  return entry\n    .toString()\n    .replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script\\ *>/gi, \"\")\n}","import React from \"react\"\n\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport ExpandLess from \"@material-ui/icons/ExpandLess\"\nimport ExpandMore from \"@material-ui/icons/ExpandMore\"\nimport List from \"@material-ui/core/List\"\n\nexport default function ExpandPanel(props) {\n  const [open, setOpen] = React.useState(props.defaultExpanded)\n  let style\n\n  function handleClick() {\n    setOpen(!open)\n  }\n\n  if (props.divider) {\n    style = {\n      borderTop: \"1px solid #EFEFEF\"\n    }\n  } else {\n    style = {}\n  }\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={handleClick} key={Math.random()} style={style}>\n        <ListItemText primary={props.summary} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n          <ListItem>\n            <ListItemText primary={props.details} />\n          </ListItem>\n        </List>\n      </Collapse>\n    </React.Fragment>\n  )\n}\n","import React from \"react\"\nimport Split from \"react-split\"\n\nimport { makeStyles } from \"@material-ui/styles\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport List from \"@material-ui/core/List\"\n\nimport { camelCaseToTitleCase } from \"./camel-case-util\"\nimport { stripScripts } from \"./strip-scripts-util\"\nimport { findAttributes } from \"./attribute-util\"\n\nimport Linkify from \"linkifyjs/react\"\nimport parse from \"html-react-parser\"\nimport ExpandPanel from \"./ExpandPanel\"\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"0.2em\",\n    backgroundColor: \"#FFFFFF\",\n    overflow: \"auto\",\n    height: \"100%\",\n    boxSizing: \"content-box\"\n  },\n  padding: {\n    paddingLeft: \"1em\",\n    paddingTop: \"0.75em\"\n  },\n  lessPadding: {\n    paddingTop: \"2.49px\"\n  },\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  }\n}))\n\nconst NetworkProperties = props => {\n  index = 0\n  const originalCX = props.network.originalCX\n  const context = props.context\n  const classes = useStyles()\n\n  //Find network props\n  let networkAttr = findAttributes(originalCX, \"networkAttributes\")\n  if (networkAttr === null) {\n    return\n  }\n\n  //What to display\n  const leftDisplayItems = [\"Name\", \"Description\", \"Methods\", \"Reference\", \"@context\"]\n  const properties = [\"Organism\", \"Cell\", \"Disease\"]\n  const contributors = [\"Author\", \"Reviewers\", \"Rights Holder\", \"Rights\"]\n  const wikiPathways = [\n    \"WikiPathways ID\",\n    \"WikiPathways Version\",\n    \"WikiPathways IRI\"\n  ]\n  const indraGO = [\n    \"GO Hierarchy\",\n    \"GO ID\"\n  ]\n  const networkInformation = [\"Version\", \"Network Type\", \"Labels\"]\n  const rightDisplayItems = [\n    properties,\n    contributors,\n    wikiPathways,\n    indraGO,\n    networkInformation\n  ]\n\n  //Filter properties\n  const attributes = []\n  let content\n  let title\n  networkAttr.forEach(element => {\n    content = extractContent(element)\n    title = extractTitle(element)\n    if (!title.startsWith(\"__\") && content != null && content !== \"\") {\n      if (\n        title === \"Description\" &&\n        (props.uiState.selectedSource === \"interactome-ppi\" ||\n        props.uiState.selectedSource === \"interactome-association\")\n      ) {\n        const newTitle = \"Description of parent network\"\n        leftDisplayItems.splice(1, 0, newTitle)\n        attributes.push({\n          title: newTitle,\n          content: content, //TODO\n          displayed: false\n        })\n      } else if (title === \"Organism\") {\n        const [latin, english] = content.split(\"(\")\n        let newContent\n        if (english == null) {\n          newContent = \"<em>\" + latin.trim() + \"</em>\"\n        } else {\n          newContent = \"<em>\" + latin.trim() + \"</em>\" + \" (\" + english\n        }\n        attributes.push({\n          title: \"Organism\",\n          content: newContent,\n          displayed: false\n        })\n      } else if (title === \"GO hierarchy\") {\n        attributes.push({\n          title: \"GO Hierarchy\",\n          content: content,\n          displayed: false\n        })\n      } else if (title === \"GO ID\") {\n        const id = content.split(\":\")[1]\n        if (id != undefined) {\n          attributes.push({\n            title: \"GO ID\",\n            content: \n              \"<a href=\\\"http://identifiers.org/GO:\" + id + \"\\\">\" + content + \"</a>\",\n            displayed: false\n          })\n        } else {\n          attributes.push({\n            title: \"GO ID\",\n            content: content,\n            displayed: false\n          })\n        }\n      } else {\n        attributes.push({\n          title: camelCaseToTitleCase(title),\n          content: content,\n          displayed: false\n        })\n      }\n    } else if (title === \"Name\") {\n      attributes.push({\n        title: title,\n        content: \"Untitled\",\n        displayed: false\n      })\n    }\n  })\n\n  //Right side of display\n  const rightDisplay = []\n  rightDisplayItems.forEach(list => {\n    let primaryString = \"\"\n    let currentEntry\n    list.forEach(element => {\n      currentEntry = attributes.filter(entry => {\n        return entry.title === element\n      })[0]\n      if (currentEntry != null) {\n        primaryString +=\n          currentEntry.title + \": \" + currentEntry.content + \"<br>\"\n        currentEntry.displayed = true\n      }\n    })\n    let secondaryString\n    switch (list) {\n    case properties:\n      secondaryString = \"Properties\"\n      break\n    case contributors:\n      secondaryString = \"Contributors\"\n      break\n    case wikiPathways:\n      secondaryString = \"WikiPathways\"\n      break\n    case indraGO:\n      secondaryString = \"Gene Ontology\"\n      break\n    case networkInformation:\n      secondaryString = \"Network Information\"\n      break\n    }\n    primaryString = formatPrimary(primaryString)\n    if (primaryString !== \"\") {\n      rightDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Left side of display\n  const leftDisplay = []\n  let currentEntry\n  let primaryString\n  let secondaryString\n  leftDisplayItems.forEach(element => {\n    currentEntry = attributes.filter(entry => {\n      return entry.title === element\n    })[0]\n    if (currentEntry != null) {\n      if (element === \"@context\") {\n        primaryString = formatContext(currentEntry.content)\n        currentEntry.displayed = true\n        const summary = (\n          <Typography component=\"span\" variant=\"body2\">\n            Click to view the namespaces associated with this network\n          </Typography>\n        )\n        const details = <Typography variant=\"body2\">{primaryString}</Typography>\n        leftDisplay.push(\n          <React.Fragment key={index}>\n            <div className={classes.padding}>\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                color=\"textSecondary\"\n              >\n                @context\n              </Typography>\n            </div>\n            <ExpandPanel\n              summary={summary}\n              details={details}\n              defaultExpanded={false}\n              keyId={index++}\n              divider={false}\n            />\n          </React.Fragment>\n        )\n      } else {\n        primaryString = formatPrimary(currentEntry.content)\n        secondaryString = element\n        currentEntry.displayed = true\n        leftDisplay.push(\n          <ListItem key={index++} className={classes.noPadding}>\n            <ListItemText\n              primary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"caption\"\n                    color=\"textSecondary\"\n                  >\n                    {secondaryString}\n                  </Typography>\n                  <div>\n                    <Typography component=\"span\" variant=\"body2\">\n                      {primaryString}\n                    </Typography>\n                  </div>\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n        )\n      }\n    }\n  })\n  attributes.forEach(entry => {\n    if (!entry.displayed) {\n      primaryString = formatPrimary(entry.content)\n      secondaryString = entry.title\n      entry.displayed = true\n      leftDisplay.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            primary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  color=\"textSecondary\"\n                >\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography component=\"span\" variant=\"body2\">\n                    {primaryString}\n                  </Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n  })\n\n  //Display panes\n  return (\n    <Split sizes={[70, 30]} gutterSize={7} className=\"network-info\">\n      <div className={\"network-info-panel\"}>\n        <List className={classes.lessPadding}>{leftDisplay}</List>\n      </div>\n      <div className={\"network-info-panel\"}>\n        <List className={classes.lessPadding}>{rightDisplay}</List>\n      </div>\n    </Split>\n  )\n}\n\nconst extractContent = entry => {\n  let modifiedText = entry.v\n  if (Array.isArray(entry.v)) {\n    modifiedText = entry.v.join(\", \")\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst extractTitle = entry => {\n  let modifiedText\n  if (entry.n != null) {\n    modifiedText = entry.n.charAt(0).toUpperCase() + entry.n.slice(1)\n  } else {\n    modifiedText = \"\"\n  }\n  return stripScripts(modifiedText.trim())\n}\n\nconst formatPrimary = entry => {\n  if (entry === \"\") {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, \"<br>\")\n    .replace(/(<\\/?br\\/?>)+/gi, \"<br>\")\n    .replace(/(\\n)+/gi, \"\\n\")\n    .replace(/<a\\s+href=/gi, \"<a target=\\\"_blank\\\" href=\")\n    .trim()\n  if (modifiedText.startsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = modifiedText.charAt(0).toUpperCase() + modifiedText.slice(1)\n  modifiedText = parse(modifiedText)\n  return (\n    <Linkify key={Math.random().toString()}>{modifiedText}</Linkify>\n  )\n}\n\nconst formatContext = entry => {\n  const elements = entry.split(\",\")\n  let splitResults\n  let result = \"<table><tbody>\"\n  elements.forEach(item => {\n    splitResults = item.split(\"\\\"\")\n    result +=\n      \"<tr><td>\" +\n      splitResults[1] +\n      \"</td><td>\" +\n      splitResults[3] +\n      \"</td></tr>\"\n  })\n  result += \"</tbody></table>\"\n  return formatPrimary(result)\n}\n\n\nexport default NetworkProperties\n","import React from \"react\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport LinkIcon from \"@material-ui/icons/Launch\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport CheckIcon from \"@material-ui/icons/Check\"\n\nimport { camelCaseToTitleCase } from \"./camel-case-util.js\"\nimport \"./style.css\"\n\n\n\n// For external link\n\nconst GENE_CARDS_URL = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"\n\nconst styles = theme => ({\n  inline: {\n    display: \"inline\"\n  },\n  title: {\n    marginLeft: \"0.5em\",\n    marginTop: \"0.3em\"\n  },\n  description: {\n    marginLeft: \"1em\",\n    marginTop: \"0.3em\"\n  },\n  matched: {\n    backgroundColor: \"#C51162\"\n  },\n  unmatched: {\n    backgroundColor: \"red\"\n  },\n  linkIcon: {\n    paddingLeft: \"1em\"\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass GeneAnnotationList extends React.Component {\n  state = {}\n\n  handleClick = id => {\n    const tag = \"pw_\" + id\n    const curState = this.state[tag]\n\n    if (curState === undefined || curState == null) {\n      this.setState(state => ({ [tag]: true }))\n    } else {\n      this.setState(state => ({ [tag]: !curState }))\n    }\n  }\n\n  render() {\n    const { classes } = this.props\n\n    const results = this.props.search_results\n\n    if (!results) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const geneList = results.genes\n\n    if (!geneList) {\n      return <div className=\"gene-list-wrapper\" />\n    }\n\n    const symbol = this.props.geneSymbol.toUpperCase()\n\n    return this.getListItem(geneList.get(symbol), classes)\n  }\n\n  getListItem = (geneEntry, classes) => {\n    if (geneEntry === null || geneEntry === undefined) {\n      return null\n    }\n\n    let description = geneEntry.summary\n    return (\n      <ListItem\n        alignItems=\"flex-start\"\n        key={geneEntry._id}\n        onClick={e => this.handleClick(geneEntry._id)}\n        disableGutters={true}\n        style={{padding: \"0\"}}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.matched}>\n            <CheckIcon />\n          </Avatar>\n        </ListItemAvatar>\n\n        <ListItemText\n          primary={\n            <table>\n              <tbody>\n                <tr style={{marginLeft: \"-1\"}}>\n                  <td style={{padding: \"0\"}}>\n                    <div>\n                      <Typography component=\"span\" variant=\"body2\" >\n                        {geneEntry.symbol}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography\n                        component=\"span\"\n                        className={classes.inline}\n                        variant=\"caption\"\n                        color='textSecondary'\n                      >\n                        {camelCaseToTitleCase(geneEntry.name)}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"body2\" color='textPrimary'>\n                        {description}\n                      </Typography>\n                    </div>\n                  </td>\n                  <td>\n                    <Tooltip title=\"Open in GeneCards\" placement=\"bottom\">\n                      <IconButton\n                        aria-label=\"Link to GeneCards\"\n                        href={GENE_CARDS_URL + geneEntry.symbol}\n                        target=\"_blank\"\n                      >\n                        <LinkIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          }\n        />\n      </ListItem>\n    )\n  }    \n} \n\nexport default withStyles(styles)(GeneAnnotationList)","import React, { useState } from \"react\"\nimport Linkify from \"linkifyjs/react\"\nimport parse from \"html-react-parser\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport { camelCaseToTitleCase } from \"./camel-case-util.js\"\nimport { stripScripts } from \"./strip-scripts-util.js\"\nimport GeneAnnotationList from \"./GeneAnnotationList\"\nimport ExpandPanel from \"./ExpandPanel\"\nimport { isEqual } from \"lodash\"\nimport { Icon } from \"@material-ui/core\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport Avatar from \"@material-ui/core/Avatar\"\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    width: \"100%\"\n  },\n  wideList: {\n    marginTop: \"0\",\n    width: \"100%\",\n    padding: \"0\"\n  },\n  table: {\n    width: \"100%\",\n    tableLayout: \"fixed\"\n  },\n  matched: {\n    marginLeft: \"0.5em\",\n    backgroundColor: \"#C51162\",\n    height: \"1em\",\n    width: \"1em\"\n  },\n  icon: {\n    height: \"0.5em\",\n    weidth: \"0.5em\"\n  }\n}))\n\nlet index = 0\n\nconst NodeProperties = props => {\n  const classes = useStyles()\n\n  let nodes\n  if (props.network.selectedNodes.length === 0) {\n    nodes = props.network.network.elements\n      .filter((elem) => {\n        return elem.data.id[0] !== \"e\"\n      })\n      .map(node => {\n        return node.data\n      })\n      .filter(nodeData => {\n        return nodeData.name != null && nodeData.name != \"\" \n      })\n  } else {\n    nodes = props.network.selectedNodes\n  }\n\n  const context = props.context\n  const aliasList = props.aliasList\n\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\"Name\", \"Type\", \"ID\", \"HGNC\", \"Ensembl\", \"Alias\"]\n\n  const nodeProperties = [\n    \"Height\",\n    \"Width\",\n    \"Shape\",\n    \"Is GPML Shape\",\n    \"Color\",\n    \"Fill Color\",\n    \"Transparent\",\n    \"Border Thickness\",\n    \"Border Style\",\n    \"Label Size\",\n    \"Label Font\",\n    \"Node Id\"\n  ]\n\n  const displayItems = [entityProperties, nodeProperties]\n\n  nodes.sort((a, b) => {\n    if (a.name.toUpperCase() > b.name.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  nodes.forEach(node => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let geneAnnotation = null\n    let inset = false\n    let aliases = new Set(aliasList[node.name])\n    \n    //Add gene annotation\n    if (\n      props.search.results != null &&\n      props.search.results.genes.get(node.name) != null\n    ) {\n      inset = true\n      geneAnnotation = (\n        <List className={classes.noPadding}>\n          <GeneAnnotationList\n            {...props}\n            search_results={props.search.results}\n            geneSymbol={node.name}\n          />\n        </List>\n      )\n    }\n\n    //Add represents\n    if (node.name in props.represents) {\n      const [prefix, id] = props.represents[node.name].split(\":\")\n      if (id != undefined) {\n        if (prefix in context) {\n          attributes.push({\n            title: \"ID\",\n            content:\n                  \"<a href=\\\"\" + context[prefix] + id + \"\\\">\" + props.represents[node.name] + \"</a>\",\n            displayed: false\n          })\n        } else {\n          attributes.push({\n            title: \"ID\",\n            content:\n                  \"<a href=\\\"\" + \"http://identifiers.org/\" + prefix + \"/\" + id + \"\\\">\" + props.represents[node.name] + \"</a>\",\n            displayed: false\n          })\n        }\n      }\n    } else if (props.represents[node.name] != undefined) {\n      attributes.push({\n        title: \"ID\",\n        content: props.represents[node.name],\n        displayed: false\n      })\n    }\n\n    for (let key in node) {\n      content = extractContent(node[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith(\"__\") &&\n        content != null &&\n        content !== \"null\" &&\n        content !== \"\"\n      ) {\n        if (title === \"aliases\" || title === \"alias\") {\n          aliases.add(content)\n        } else if (title === \"id\") {\n          attributes.push({\n            title: \"Node Id\",\n            content: content,\n            displayed: false\n          })\n        } else if (title !== \"query\") {\n          const [prefix, id] = content.split(\":\")\n          if (prefix in context && id != undefined) {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content:\n                \"<a href=\\\"\" + context[prefix] + id + \"\\\">\" + content + \"</a>\",\n              displayed: false\n            })\n          } else if (prefix === \"hgnc.symbol\") {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content:\n                \"<a href=\\\"http://identifiers.org/hgnc/\"  + id + \"\\\">\" + content + \"</a>\",\n              displayed: false\n            })\n          } else {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content: content,\n              displayed: false\n            })\n          }\n        }\n      }\n    }\n\n    //Handle aliases\n    let aliasLinks = \"\"\n    aliases.forEach(alias => {\n      const [prefix, id] = alias.split(\":\")\n      if (prefix in context) {\n        aliasLinks += \"<a href=\\\"\" + context[prefix] + id + \"\\\">\\t\" + alias + \"</a><br/>\"\n      } else {\n        aliasLinks += \"<a href=\\\"\" + \"http://identifiers.org/\" + prefix + \"/\" + id + \"\\\">\\t\" + alias + \"</a><br/>\"\n      }\n    })\n    if (aliases.size > 1) {\n      attributes.push({\n        title: \"Alias\",\n        content: \"<div style=\\\"padding-left:1em;\\\">\" + aliasLinks + \"</div>\",\n        displayed: false\n      })\n    } else if (aliases.size === 1) {\n      attributes.push({\n        title: \"Alias\",\n        content: aliasLinks,\n        displayed: false\n      })\n    }\n        \n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = \"\"\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + \": \" + currentEntry.content + \"<br>\"\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== \"\") {\n        switch (list) {\n        case entityProperties:\n          secondaryString = \"Entity Properties\"\n          displayCol1.push(\n            <ListItem key={index++} className={classes.noPadding} disableGutters={true}>\n              <ListItemText\n                inset={inset}\n                primary={\n                  <React.Fragment>\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      {secondaryString}\n                    </Typography>\n                    <div>\n                      <Typography variant=\"body2\">{primaryString}</Typography>\n                    </div>\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n          )\n          break\n        case nodeProperties:\n          secondaryString = \"Node Properties\"\n          displayCol2.push(\n            <ListItem\n              key={index++}\n              className={classes.noPadding}\n              disableGutters={true}\n            >\n              <ListItemText\n                primary={\n                  <React.Fragment>\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      {secondaryString}\n                    </Typography>\n                    <div>\n                      <Typography variant=\"body2\">{primaryString}</Typography>\n                    </div>\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n          )\n          break\n        }\n      }\n    })\n\n    primaryString = \"\"\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + \": \" + entry.content + \"<br>\"\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = \"Additional properties\"\n\n    if (primaryString !== \"\") {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding} disableGutters={true}>\n          <ListItemText\n            inset={inset}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    const summary = (\n      <Typography variant=\"body2\">\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                {node.name}\n              </td>\n              {inset ? (\n                <td>\n                  <Avatar className={classes.matched}>\n                    <CheckIcon className={classes.icon}/>\n                  </Avatar>\n                </td>) : null}\n            </tr>\n          </tbody>\n        </table>\n      </Typography>\n    )\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td colSpan=\"2\" valign=\"top\">\n              {geneAnnotation}\n            </td>\n          </tr>\n          <tr>\n            <td valign={\"top\"}>{displayCol1}</td>\n            <td valign={\"top\"}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={node.id + index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={classes.center}>\n          <Typography color=\"textSecondary\" variant=\"subtitle1\">\n            Select a node to view node properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return \"\"\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return \"\"\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === \"\") {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, \"<br>\")\n    .replace(/(<\\/?br\\/?>)+/gi, \"<br>\")\n    .replace(/(\\n)+/gi, \"\\n\")\n    .replace(/<a\\s+href=/gi, \"<a target=\\\"_blank\\\" href=\")\n    .trim()\n  if (modifiedText.startsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(modifiedText)\n  return (\n    <Linkify key={\"link\" + index++}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\n//Necessary because otherwise open list items will collapse every time \"SET_AVAILABLE\" happens\nconst MemoNodeProperties = React.memo(NodeProperties, (oldProps, newProps) => {\n  return isEqual(oldProps.network.selectedNodes, newProps.network.selectedNodes)\n})\n\nexport default MemoNodeProperties\n","import React, { useState } from \"react\"\nimport Linkify from \"linkifyjs/react\"\nimport parse from \"html-react-parser\"\nimport { isEqual } from \"lodash\"\n\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/styles\"\nimport ExpandPanel from \"./ExpandPanel\"\nimport CheckIcon from \"@material-ui/icons/Check\"\nimport Avatar from \"@material-ui/core/Avatar\"\n\nimport { camelCaseToTitleCase } from \"./camel-case-util.js\"\nimport { stripScripts } from \"./strip-scripts-util.js\"\n\nlet index = 0\n\nconst useStyles = makeStyles(theme => ({\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    width: \"100%\"\n  },\n  wideList: {\n    marginTop: \"0\",\n    width: \"100%\",\n    padding: \"0\"\n  },\n  table: {\n    width: \"100%\",\n    tableLayout: \"fixed\"\n  },\n  matched: {\n    backgroundColor: \"#C51162\",\n    height: \"1em\",\n    width: \"1em\"\n  },\n  icon: {\n    height: \"0.5em\",\n    weidth: \"0.5em\"\n  }\n}))\n\nconst EdgeProperties = props => {\n  const classes = useStyles()\n  let edges\n  if (props.network.selectedEdges.length === 0) {\n    edges = props.network.network.elements\n      .filter((elem) => {\n        return elem.data.id[0] === \"e\"\n      })\n      .map(elem => {\n        return elem.data\n      })\n  } else {\n    edges = props.network.selectedEdges\n  }\n\n  const nodes = props.nodeList\n  const context = props.context\n  const [defaultExpanded, setDefaultExpanded] = useState(true)\n\n  const entityProperties = [\n    \"Source\",\n    \"Target\",\n    \"Type\",\n    \"SBO Type\",\n    \"Interaction\",\n    \"Throughput\",\n    \"Location\",\n    \"Citation\"\n  ]\n\n  const edgeProperties = [\n    \"Start Arrow\",\n    \"End Arrow\",\n    \"Connector Type\",\n    \"Line Thickness\",\n    \"Line Style\",\n    \"Color\",\n    \"Edge Id\"\n  ]\n\n  const displayItems = [entityProperties, edgeProperties]\n\n  edges.sort((a, b) => {\n    let aScore = 0\n    let bScore = 0\n    const aSource = findNode(a.source, nodes)\n    const aTarget = findNode(a.target, nodes)\n    const bSource = findNode(b.source, nodes)\n    const bTarget = findNode(b.target, nodes)\n    if (aSource !== \"\") {\n      aScore++\n    }\n    if (aTarget !== \"\") {\n      aScore++\n    }\n    if (bSource !== \"\") {\n      bScore++\n    }\n    if (bTarget !== \"\") {\n      bScore++\n    }\n    if (bScore - aScore !== 0) {\n      return bScore - aScore\n    } else if (aSource === \"\") {\n      return 1\n    } else if (bSource === \"\") {\n      return -1\n    }\n\n    if (aSource.toUpperCase() > bSource.toUpperCase()) {\n      return 1\n    } else if (aSource.toUpperCase() < bSource.toUpperCase()) {\n      return -1\n    } else if (aTarget.toUpperCase() > bTarget.toUpperCase()) {\n      return 1\n    } else {\n      return -1\n    }\n  })\n\n  const topDisplay = []\n  edges.forEach(edge => {\n    //Filter properties\n    const attributes = []\n    let content\n    let title\n    let source\n    let target\n    for (let key in edge) {\n      content = extractContent(edge[key])\n      title = extractTitle(key)\n      if (\n        !title.startsWith(\"__\") &&\n        content != null &&\n        content !== \"null\" &&\n        content !== \"\"\n      ) {\n        if (title === \"source\") {\n          source = findNode(content, nodes)\n          attributes.push({\n            title: \"Source\",\n            content: source,\n            displayed: false\n          })\n        } else if (title === \"target\") {\n          target = findNode(content, nodes)\n          attributes.push({\n            title: \"Target\",\n            content: target,\n            displayed: false\n          })\n        } else if (title === \"id\") {\n          attributes.push({\n            title: \"Edge Id\",\n            content, content,\n            displayed: false\n          })\n        } else if (title === \"sboType\") {\n          const id = content.split(\":\")[1]\n          attributes.push({\n            title: \"SBO Type\",\n            content:\n              \"<a href=\\\"\" + \"http://identifiers.org/SBO:\" + id + \"\\\">\" + content + \"</a>\"\n          })\n        } else {\n          const [prefix, id] = content.split(\":\")\n          if (prefix in context && id != undefined) {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content: \n                \"<a href=\\\"\" + context[prefix] + id + \"\\\">\" + content + \"</a>\",\n              displayed: false\n            })\n          } else {\n            attributes.push({\n              title: camelCaseToTitleCase(title),\n              content: content,\n              displayed: false\n            })\n          }\n        }\n      }\n    }\n\n    const displayCol1 = []\n    const displayCol2 = []\n    let primaryString\n    let secondaryString\n    displayItems.forEach(list => {\n      primaryString = \"\"\n      let currentEntry\n      list.forEach(element => {\n        currentEntry = attributes.filter(entry => {\n          return entry.title === element\n        })[0]\n        if (currentEntry != null && currentEntry.content != null) {\n          primaryString +=\n            currentEntry.title + \": \" + currentEntry.content + \"<br>\"\n          currentEntry.displayed = true\n        }\n      })\n      primaryString = formatPrimary(primaryString)\n      if (primaryString !== \"\") {\n        switch (list) {\n        case entityProperties:\n          secondaryString = \"Entity Properties\"\n          displayCol1.push(\n            <ListItem key={Math.random()} className={classes.noPadding}>\n              <ListItemText\n                inset={false}\n                primary={\n                  <React.Fragment>\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      {secondaryString}\n                    </Typography>\n                    <div>\n                      <Typography variant=\"body2\">{primaryString}</Typography>\n                    </div>\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n          )\n          break\n        case edgeProperties:\n          secondaryString = \"Edge Properties\"\n          displayCol2.push(\n            <ListItem\n              key={Math.random()}\n              className={classes.listPadding}\n              disableGutters={true}\n            >\n              <ListItemText\n                primary={\n                  <React.Fragment>\n                    <Typography variant=\"caption\" color=\"textSecondary\">\n                      {secondaryString}\n                    </Typography>\n                    <div>\n                      <Typography variant=\"body2\">{primaryString}</Typography>\n                    </div>\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n          )\n          break\n        }\n      }\n    })\n\n    primaryString = \"\"\n    attributes.forEach(entry => {\n      if (!entry.displayed) {\n        primaryString += entry.title + \": \" + entry.content + \"<br>\"\n        entry.displayed = true\n      }\n    })\n    primaryString = formatPrimary(primaryString)\n    secondaryString = \"Additional properties\"\n\n    if (primaryString !== \"\") {\n      displayCol1.push(\n        <ListItem key={index++} className={classes.noPadding}>\n          <ListItemText\n            inset={false}\n            primary={\n              <React.Fragment>\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                  {secondaryString}\n                </Typography>\n                <div>\n                  <Typography variant=\"body2\">{primaryString}</Typography>\n                </div>\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )\n    }\n\n    //Create summary\n    let sourceSymbol = source\n    let targetSymbol = target\n    if (props.search.queryList.includes(source.toUpperCase())) {\n      sourceSymbol = (\n        <React.Fragment>\n          <td>\n            {source}\n          </td>\n          <td>\n            <Avatar className={classes.matched}>\n              <CheckIcon className={classes.icon}/>\n            </Avatar>\n          </td>\n        </React.Fragment>\n      )\n    }\n\n    if (props.search.queryList.includes(target.toUpperCase())) {\n      targetSymbol = (\n        <React.Fragment>\n          <td>\n            {target}\n          </td>\n          <td>\n            <Avatar className={classes.matched}>\n              <CheckIcon className={classes.icon}/>\n            </Avatar>\n          </td>\n\n        </React.Fragment>\n      )\n    }\n\n    const summary = (\n      <Typography variant=\"body2\">\n        <table>\n          <tbody>\n            <tr>\n              {sourceSymbol}\n              <td>\n                {\" ➝ \"}\n              </td>\n              {targetSymbol}\n            </tr>\n          </tbody>\n        </table>\n      </Typography>\n    )\n    const details = (\n      <table className={classes.table}>\n        <tbody>\n          <tr>\n            <td valign={\"top\"}>{displayCol1}</td>\n            <td valign={\"top\"}>{displayCol2}</td>\n          </tr>\n        </tbody>\n      </table>\n    )\n    topDisplay.push(\n      <ExpandPanel\n        summary={summary}\n        details={details}\n        defaultExpanded={defaultExpanded}\n        key={index++}\n        divider={true}\n      />\n    )\n  })\n\n  //Don't return nothing\n  if (topDisplay.length === 0) {\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={classes.center}>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            Select an edge to view edge properties\n          </Typography>\n        </div>\n      </div>\n    )\n  } else if (topDisplay.length === 1) {\n    if (!defaultExpanded) {\n      setDefaultExpanded(true)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <List className={classes.noPadding}>{topDisplay}</List>\n        </div>\n      </div>\n    )\n  } else {\n    if (defaultExpanded) {\n      setDefaultExpanded(false)\n    }\n    return (\n      <div className={\"outer-rectangle\"}>\n        <div className={\"inner-rectangle\"}>\n          <div>\n            <List className={classes.noPadding}>{topDisplay}</List>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst extractContent = entry => {\n  if (entry == null) {\n    return \"\"\n  }\n  return stripScripts(entry)\n}\n\nconst extractTitle = entry => {\n  if (entry == null) {\n    return \"\"\n  }\n  return stripScripts(entry)\n}\n\nconst formatPrimary = entry => {\n  if (entry === \"\") {\n    return entry\n  }\n  let modifiedText = entry\n    .replace(/<\\/?p\\/?>/gi, \"<br>\")\n    .replace(/(<\\/?br\\/?>)+/gi, \"<br>\")\n    .replace(/(\\n)+/gi, \"\\n\")\n    .replace(/<a\\s+href=/gi, \"<a target=\\\"_blank\\\" href=\")\n    .trim()\n  if (modifiedText.startsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(4, modifiedText.length - 1)\n  }\n  if (modifiedText.endsWith(\"<br>\")) {\n    modifiedText = modifiedText.slice(0, modifiedText.length - 4)\n  }\n  modifiedText = parse(camelCaseToTitleCase(modifiedText))\n  return (\n    <Linkify key={\"link:\" + index++}>\n      {modifiedText}\n    </Linkify>\n  )\n}\n\nconst findNode = (nodeId, nodeArray) => {\n  if (isNaN(nodeId) || nodeId === \"\") {\n    return nodeId\n  }\n  const returnNode = nodeArray.filter(\n    item => item[\"@id\"].toString() === nodeId.toString()\n  )[0]\n\n  if (returnNode != null) {\n    return returnNode.n\n  } else {\n    return \"\"\n  }\n}\n\n//Necessary because otherwise open list items will collapse every time \"SET_AVAILABLE\" happens\nconst MemoEdgeProperties = React.memo(EdgeProperties, (prevProps, newProps) => {\n  return isEqual(prevProps.network.selectedEdges, newProps.network.selectedEdges)\n})\n\nexport default MemoEdgeProperties\n","import React from \"react\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport HoverTab from \"../HoverTab\"\nimport { makeStyles, withStyles } from \"@material-ui/styles\"\n\nimport { findAttributes } from \"./attribute-util\"\n\nimport NetworkProperties from \"./NetworkProperties\"\nimport MemoNodeProperties from \"./NodeProperties\"\nimport MemoEdgeProperties from \"./EdgeProperties\"\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    padding: \"0.2em\",\n    backgroundColor: \"#FFFFFF\",\n    overflow: \"auto\"\n  },\n  list: {},\n  subtitle: {\n    marginLeft: \"1em\",\n    marginTop: \"0.5em\"\n  },\n  root: {\n    minHeight: 0\n  }\n}))\n\nconst backgroundColor = \"rgb(220, 220, 220)\"\n\nconst TabContent = props => {\n  const { value } = props\n\n  //Find @context\n  let context = {}\n  let networkAttr = findAttributes(\n    props.network.originalCX,\n    \"networkAttributes\"\n  )\n  if (networkAttr != null) {\n    for (let i = 0; i < networkAttr.length; i++) {\n      if (networkAttr[i].n === \"@context\") {\n        context = JSON.parse(networkAttr[i].v)\n      }\n    }\n  }\n\n  //Find nodelist and nodeAttributes\n  let nodeList\n  let nodeAttributes\n  for (let i = 0; i < props.network.originalCX.length; i++) {\n    if (props.network.originalCX[i].nodes != null) {\n      nodeList = props.network.originalCX[i].nodes\n      if (nodeAttributes != undefined) {\n        break\n      }\n    }\n    if (props.network.originalCX[i].nodeAttributes != null) {\n      nodeAttributes = props.network.originalCX[i].nodeAttributes\n      if (nodeList != undefined) {\n        break\n      }\n    }\n  }\n\n  const represents = {}\n  const aliasList = {}\n  if (nodeList != null) {\n    //Find represents\n    for (let i = 0; i < nodeList.length; i++) {\n      if (nodeList[i].r != null) {\n        represents[nodeList[i].n] = nodeList[i].r\n      }\n    }\n    //Find aliasList\n    if (nodeAttributes != null) {\n      for (let i = 0; i < nodeAttributes.length; i++) {\n        if (nodeAttributes[i].n = \"alias\" && nodeAttributes[i].d === \"list_of_string\") {\n          const geneName = nodeList.filter(node => (node[\"@id\"] === nodeAttributes[i].po))[0].n\n          if (geneName != null) {\n            if (aliasList[geneName] == null) {\n              aliasList[geneName] = nodeAttributes[i].v\n            } else {\n              aliasList[geneName] = aliasList[geneName].concat(nodeAttributes[i].v)\n            }\n          }\n        }\n      }\n    }\n  }  \n\n  if (value === 0) {\n    return <NetworkProperties context={context} {...props} />\n  } else if (value === 1) {\n    return <MemoNodeProperties context={context} represents={represents} aliasList={aliasList} {...props} />\n  } else {\n    return <MemoEdgeProperties context={context} nodeList={nodeList} {...props} />\n  }\n}\n\nconst DISABLED_STYLE = {\n  width: \"100%\"\n}\n\nconst TableBrowserPanel = props => {\n  //const network = props.network\n  const classes = useStyles()\n  let value = props.network.tableDisplayTab\n  const originalCX = props.network.originalCX\n  if (originalCX === null) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  function handleChange(event, newValue) {\n    props.networkActions.changeTab(newValue)\n  }\n\n  //Get current tab selection\n  return (\n    <div className=\"table-browser-panel\">\n      <Tabs value={value} onChange={handleChange} className={classes.root}>\n        <HoverTab\n          className={classes.root}\n          key={\"network-tab\"}\n          label={\"Network\"}\n          backgroundColor={backgroundColor}\n        />\n        <HoverTab className={classes.root} key={\"nodes-tab\"} label={\"Nodes\"} backgroundColor={backgroundColor}/>\n        <HoverTab className={classes.root} key={\"edges-tab\"} label={\"Edges\"} backgroundColor={backgroundColor}/>\n      </Tabs>\n      <TabContent value={value} {...props} />\n    </div>\n  )\n}\n\nexport default TableBrowserPanel\n\n","import React from \"react\"\n\nimport MemoTableBrowserPanel from \"./TableBrowserPanel\"\n\nconst DISABLED_STYLE = {\n  width: \"100%\"\n}\n\n/**\n *\n * Basic property viewer for nodes and edges\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst TableBrowser = props => {\n  if (\n    props.network.originalCX === null ||\n    props.search.actualResults.length === 0\n  ) {\n    return <div style={DISABLED_STYLE} />\n  }\n\n  return (\n    <div className={\"table-browser\"}>\n      <MemoTableBrowserPanel {...props} />\n    </div>\n  )\n}\n\nconst MemoTableBrowser = TableBrowser /*React.memo(TableBrowser, (prevProps, newProps) => {\n  return isEqual(prevProps.network.isFetching, newProps.network.isFetching)\n})*/\n\nexport default MemoTableBrowser\n","export function fade(color, value) {\n  color = decomposeColor(color)\n  value = clamp(value)\n\n  if (color.type === \"rgb\" || color.type === \"hsl\") {\n    color.type += \"a\"\n  }\n  color.values[3] = value\n\n  return recomposeColor(color)\n}\n\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color\n  }\n\n  if (color.charAt(0) === \"#\") {\n    return decomposeColor(hexToRgb(color))\n  }\n\n  const marker = color.indexOf(\"(\")\n  const type = color.substring(0, marker)\n\n  if ([\"rgb\", \"rgba\", \"hsl\", \"hsla\"].indexOf(type) === -1) {\n    throw new Error(\n      [\n        `Material-UI: unsupported \\`${color}\\` color.`,\n        \"We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().\",\n      ].join(\"\\n\"),\n    )\n  }\n\n  let values = color.substring(marker + 1, color.length - 1).split(\",\")\n  values = values.map(value => parseFloat(value))\n\n  return { type, values }\n}\n\nfunction clamp(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (value < min || value > max) {\n      console.error(`Material-UI: the value provided ${value} is out of range [${min}, ${max}].`)\n    }\n  }\n\n  if (value < min) {\n    return min\n  }\n  if (value > max) {\n    return max\n  }\n  return value\n}\n\nfunction recomposeColor(color) {\n  const { type } = color\n  let { values } = color\n\n  if (type.indexOf(\"rgb\") !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => (i < 3 ? parseInt(n, 10) : n))\n  } else if (type.indexOf(\"hsl\") !== -1) {\n    values[1] = `${values[1]}%`\n    values[2] = `${values[2]}%`\n  }\n\n  return `${type}(${values.join(\", \")})`\n}\n\nfunction hexToRgb(color) {\n  color = color.substr(1)\n\n  const re = new RegExp(`.{1,${color.length / 3}}`, \"g\")\n  let colors = color.match(re)\n\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n)\n  }\n\n  return colors ? `rgb(${colors.map(n => parseInt(n, 16)).join(\", \")})` : \"\"\n}","import React, { useState, useEffect } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport logo from \"../../../assets/images/cytoscape-logo.svg\"\nimport logoDisabled from \"../../../assets/images/cytoscape-logo-mono-light.svg\"\nimport { withStyles } from \"@material-ui/core\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport {fade} from \"./color-manipulator-util\"\n\nimport MessageSnackbar from \"../../AppShell/MessageSnackbar.jsx\"\n\nconst BootstrapButton = withStyles({\n  root: {\n    marginLeft: \"0.5em\",\n    borderColor: \"#EA9123\",\n    \"&:active\": {\n      borderColor: \"#EA9123\"\n    },\n    \"&:hover\": {\n      backgroundColor: fade(\"#EA9123\", 0.08)\n    }\n  }\n})(Button)\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"2em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\"\n  }\n})\n\nconst OpenInCytoscapeButton = props => {\n  useEffect(() => {\n    props.cyrestActions.startCyRestPolling()\n    return () => {\n      props.cyrestActions.stopCyRestPolling()\n    }\n  }, [])\n\n  const { classes } = props\n\n  const disabled =\n    !(props.network.uuid && props.network.uuid.length > 0) ||\n    !props.cyrest.available\n\n  const handleClick = () => {\n    props.handleImportNetwork()\n  }\n\n  //Snackbar\n  const isLoadingNetwork = props.cyrest.isLoadingNetwork\n  const lastResponse = props.cyrest.lastResponse\n\n  const [open, setOpen] = useState(false)\n  const [state, setState] = useState(\"dormant\")\n  const [message, setMessage] = useState(null)\n  let cycleId = 0\n  //console.log(\"cycleId: \" + cycleId);\n  //console.log(\"state: \" + state);\n\n  if (state === \"dormant\" && isLoadingNetwork) {\n    setMessage(\"Opening network in Cytoscape Desktop . . .\")\n    setState(\"openLoading\")\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (\n    (state === \"openLoading\" || state === \"closeLoading\") &&\n    lastResponse != null\n  ) {\n    setState(\"openResult\")\n    if (lastResponse.type === \"IMPORT_NETWORK_SUCCEEDED\") {\n      setMessage(\"Network opened in Cytoscape Desktop!\")\n    } else {\n      setMessage(\"Network failed to open in Cytoscape Desktop\")\n    }\n    if (!open) {\n      setOpen(true)\n    }\n  }\n  if (state === \"openResult\" && !open) {\n    setOpen(true)\n  }\n  if (state === \"openResult\" && open) {\n    let currentId = cycleId\n    setTimeout(() => {\n      if (state === \"openResult\" && currentId === cycleId) {\n        setState(\"dormant\")\n        cycleId++\n        setOpen(false)\n      }\n    }, 6000)\n  }\n\n  const handleClose = (event, reason) => {\n    console.log(\"click\")\n    if (state === \"openLoading\") {\n      setState(\"closeLoading\")\n    } else if (state === \"openResult\") {\n      setState(\"dormant\")\n      cycleId++\n    }\n    setOpen(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Tooltip\n        disableFocusListener\n        title=\"Open this network in Cytoscape Desktop\"\n        placement=\"bottom\"\n      >\n        <div>\n          <BootstrapButton\n            className={classes.button}\n            variant=\"outlined\"\n            disabled={disabled}\n            onClick={handleClick}\n          >\n            <img\n              alt=\"Cytoscape logo\"\n              src={disabled ? logoDisabled : logo}\n              className={classes.buttonIcon}\n            />\n          </BootstrapButton>\n        </div>\n      </Tooltip>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={message}\n        setMessage={setMessage}\n        autoHideDuration={null}\n        horizontal={\"right\"}\n        vertical={\"bottom\"}\n        handleClose={handleClose}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default withStyles(styles)(OpenInCytoscapeButton)\n","import React from \"react\"\nimport \"./style.css\"\n\nimport Button from \"@material-ui/core/Button\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport { withStyles } from \"@material-ui/core\"\n\nimport logo from \"../../../assets/images/zoom-logo.svg\"\nimport disabledLogo from \"../../../assets/images/zoom-logo-mono.svg\"\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"1.75em\"\n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\",\n    borderColor: \"#212121\",\n    color: \"#212121\",\n    \"&:active\": {\n      borderColor: \"#212121\",\n      color: \"#212121\"\n    }\n  }\n})(Button)\n\nconst ResetZoomButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const handleClick = () => {\n    props.networkActions.fitNetworkView(true)\n  }\n\n  return (\n    <Tooltip title=\"Fit network to panel\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleClick}\n        >\n          <img\n            alt=\"Zoom logo\"\n            src={disabled ? disabledLogo : logo}\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default withStyles(styles)(ResetZoomButton)\n","import React from \"react\"\n\nimport HighlightIcon from \"@material-ui/icons/WbIncandescent\"\nimport Button from \"@material-ui/core/Button\"\nimport { withStyles } from \"@material-ui/core\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\n\nconst styles = theme => ({\n  buttonIcon: {\n    textAlign: \"center\",\n    lignHeight: \"50%\",\n    position: \"relative\",\n    top: \"1px\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    marginLeft: \"0.5em\"\n  }\n})\n\nconst Highlighter = props => {\n  const { classes } = props\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  let highlight = props.uiState.highlights\n\n  const handleChange = evt => {\n    if (props.network.uuid && props.network.uuid.length > 0) {\n      highlight = !highlight\n      props.uiStateActions.setHighlights(highlight)\n    }\n  }\n\n  return (\n    <Tooltip title=\"Highlight genes\" placement=\"bottom\">\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"outlined\"\n          color={highlight ? \"secondary\" : \"default\"}\n          onClick={handleChange}\n          disabled={disabled}\n        >\n          <HighlightIcon\n            className={classes.buttonIcon}\n            color={highlight && !disabled ? \"secondary\" : \"disabled\"}\n          />\n        </Button>\n      </div>\n    </Tooltip>\n  )\n}\n\n\n\nexport default withStyles(styles)(Highlighter)\n","import React from \"react\"\nimport \"./style.css\"\n\nimport Button from \"@material-ui/core/Button\"\nimport logo from \"../../../assets/images/ndex-logo.svg\"\nimport logoDisabled from \"../../../assets/images/ndex-logo-mono-light.svg\"\nimport { withStyles } from \"@material-ui/core\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport {fade} from \"./color-manipulator-util\"\n\n\nconst styles = theme => ({\n  buttonIcon: {\n    height: \"2em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\",\n    color: \"#4DA1DE\"\n    \n  }\n})\n\nconst BootstrapButton = withStyles({\n  root: {\n    width: \"4.3em\",\n    borderColor: \"#4DA1DE\",\n    color: \"#4DA1DE\",\n    \"&:active\": {\n      borderColor: \"#4DA1DE\",\n      color: \"#4DA1DE\"\n    },\n    \"&:hover\": {\n      backgroundColor: fade(\"#4DA1DE\", 0.08)\n    }\n  },\n})(Button)\n\nconst OpenInNDExButton = props => {\n  const { classes } = props\n\n  const handleImportNetwork = () => {\n    props.ndexSaveActions.setNDExModalOpen(true)\n  }\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  return (\n    <Tooltip title=\"Save this network to your NDEx account\" placement=\"bottom\">\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={handleImportNetwork}\n        >\n          <img alt=\"NDEx logo\" src={disabled ? logoDisabled: logo} className={classes.buttonIcon} />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default (withStyles(styles)(OpenInNDExButton))","import React from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { DialogContentText, DialogActions, Button } from \"@material-ui/core\"\n\nimport \"./style.css\"\n\nconst styles = theme => ({\n  button: {\n    \"text-transform\": \"none\"\n  }\n})\n\nclass NDExSave extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      networkUrl: \"\"\n    }\n  }\n\n  saveToNDEx = (cx, token) => {\n    this.props.ndexSaveActions.saveToNDEx({ cx: cx, token: token })\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  render() {\n    const { classes, ndexSave, network } = this.props\n    console.log(ndexSave)\n    const token = ndexSave.profile ? ndexSave.profile.authorization.token : null\n    const cx = network.originalCX\n\n    const networkUrl = ndexSave.networkUrl\n\n    return ndexSave && ndexSave.profile ? (\n      <div className=\"ndex-save\">\n        <DialogContentText>\n          Now that you're logged in, you can save the network to your NDEx\n          account\n        </DialogContentText>\n        <DialogActions>\n          {networkUrl ? (\n            <Button\n              href={networkUrl}\n              className={classes.button}\n              target=\"_blank\"\n            >\n              OPEN IN NDEx\n            </Button>\n          ) : (\n            <Button\n              onClick={() => {\n                this.saveToNDEx(cx, token)\n              }}\n            >\n              Save to my account\n            </Button>\n          )}\n        </DialogActions>\n      </div>\n    ) : null\n  }\n}\n\nexport default (withStyles(styles)(NDExSave))\n","const config = {\n  NDEX_USER_VALIDATION: \"http://ndexbio.org/v2/user?valid=true\",\n  // testing\n  // googleClientId: '802839698598-mrrd3iq3jl06n6c2fo1pmmc8uugt9ukq.apps.googleusercontent.com',\n  // public\n  googleClientId: \"802839698598-8rsr8va0bd0e6lmi0ghemtrvldk9rnla.apps.googleusercontent.com\",\n}\n\nexport default config","import React from \"react\"\n\nimport {\n  DialogContent,\n  Dialog,\n  DialogTitle,\n  Button,\n  Grid,\n  Paper,\n  TextField,\n  FormControl,\n  Typography,\n  Avatar\n} from \"@material-ui/core\"\nimport GoogleLogin from \"react-google-login\"\n\nimport GoogleLogo from \"./assets/images/google-logo.svg\"\nimport GoogleLogoDisabled from \"./assets/images/google-logo-disabled.svg\"\n\nimport NDExSave from \"../NDExSave\"\n\nimport \"./style.css\"\n\nimport config from \"./assets/config\"\n\nclass GoogleSignOn extends React.Component {\n  onFailure = err => {\n    const message =\n      (err.details &&\n        err.details.startsWith(\n          \"Not a valid origin for the client: http://localhost:\"\n        )) ||\n      (err.error && err[\"error\"]) ||\n      JSON.stringify(err)\n    this.props.onError(message, false)\n  }\n\n  render() {\n    const { googleSSO, onSuccess } = this.props\n\n    const clsName = googleSSO\n      ? \"google-sign-in-button\"\n      : \"google-sign-in-button googleButtonDisabled\"\n    const title = googleSSO\n      ? \"Sign in with your Google account\"\n      : \"Google Sign In is currently unavailable because the 'BLOCK THIRD-PARTY COOKIES' option is enabled in your web browser.\" +\n        \"To use the Google Sign In feature you can do one of two things:\" +\n        \"1. Add 'accounts.google.com' to the list of websites allowed to write / read THIRD - PARTY COOKIES, or\" +\n        \"2. Disable the 'BLOCK THIRD-PARTY COOKIES' option in your browser settings.\"\n    const logo = googleSSO ? GoogleLogo : GoogleLogoDisabled\n\n    return (\n      <div className=\"google-button\">\n        <GoogleLogin\n          clientId={config.googleClientId}\n          render={renderProps => (\n            <Button\n              id=\"googleSignInButtonId\"\n              disabled={!googleSSO}\n              className={clsName}\n              title={title}\n              onClick={renderProps.onClick}\n            >\n              <span className=\"google-sign-in-button-span\">\n                <img src={logo} alt=\"\" className=\"googleLogo\" />\n                <div className=\"googleSignInText\">Sign in with Google</div>\n              </span>\n            </Button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={onSuccess}\n          onFailure={this.onFailure}\n        />\n      </div>\n    )\n  }\n}\n\nclass CredentialsSignOn extends React.Component {\n  render() {\n    const { error, handleCredentialsSignOn } = this.props\n\n    const button_cls = error ? \"btn btn-primary disabled\" : \"btn btn-primary\"\n\n    return (\n      <form name=\"basicAuthSignIn\" onSubmit={handleCredentialsSignOn}>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"accountName\"\n            type=\"text\"\n            placeholder=\"Account Name\"\n            required\n            title=\"\"\n            autoComplete=\"username\"\n          />\n        </FormControl>\n        <FormControl className=\"form-control\">\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n            title=\"\"\n            autoComplete=\"password\"\n          />\n        </FormControl>\n\n        <div className=\"ndex-account-links\">\n          {/* <div>\n                        <a href=\"/\"\n                        >Forgot Password?</a>\n                    </div> */}\n          <div>\n            <span>Need an account? </span>\n            <a href=\"http://ndexbio.org\">Click here to sign up!</a>\n          </div>\n        </div>\n\n        {error && (\n          <div className=\"text-danger\">\n            <br />\n            <strong>\n              <span\n              // style=\"font-size: 1.1em\"\n              >\n                {error}\n              </span>\n            </strong>\n          </div>\n        )}\n\n        <div className=\"credentials-button-container\">\n          {this.props.handleClose && (\n            <Button\n              className=\"btn btn-default\"\n              variant=\"contained\"\n              onClick={this.props.handleClose}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          )}\n\n          <Button\n            className={button_cls}\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Sign In\n          </Button>\n        </div>\n      </form>\n    )\n  }\n}\n\nexport class NDExSignIn extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      googleSSO: true\n    }\n  }\n\n  onError = (error, googleSSO) => {\n    this.props.handleError(error)\n    this.setState({ googleSSO })\n  }\n\n  render() {\n    const { googleSSO } = this.state\n\n    const {\n      handleClose,\n      onLoginSuccess,\n      onSuccess,\n      handleCredentialsSignOn,\n      handleError,\n      error\n    } = this.props\n\n    return (\n      <div>\n        <DialogTitle id=\"form-dialog-title\">\n          Sign in to your NDEx Account\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"NDExSignInContainer\">\n            <Grid container spacing={8}>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <GoogleSignOn\n                      onError={this.onError}\n                      googleSSO={googleSSO}\n                      onLoginSuccess={onLoginSuccess}\n                      onSuccess={onSuccess}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={6} className=\"grid\">\n                <Paper className=\"grid-paper\">\n                  <div className=\"grid-content\">\n                    <CredentialsSignOn\n                      onLoginSuccess={onLoginSuccess}\n                      handleClose={handleClose}\n                      handleCredentialsSignOn={handleCredentialsSignOn}\n                      handleError={handleError}\n                      error={error}\n                    />\n                  </div>\n                </Paper>\n              </Grid>\n            </Grid>\n          </div>\n\n          {/*error && (\n            <div className=\"sign-in-error\">\n              <p>{error}</p>\n            </div>\n          )*/}\n        </DialogContent>\n      </div>\n    )\n  }\n}\n\nclass NDExSignInModal extends React.Component {\n  onLoginSuccess = () => {}\n\n  onLogout = () => {\n    this.props.ndexSaveActions.setProfile(null)\n    //this.handleClose()\n  }\n\n  handleClose = () => {\n    this.props.ndexSaveActions.setNDExModalOpen(false)\n  }\n\n  handleCredentialsSignOn = event => {\n    event.preventDefault()\n    this.props.ndexSaveActions.credentialsSignOn(event)\n  }\n\n  handleOnSuccess = resp => {\n    this.props.ndexSaveActions.googleSignOn(resp)\n  }\n\n  handleError = error => {\n    this.props.ndexSaveActions.setErrorMessage(error)\n  }\n\n  render() {\n    const { ...props } = this.props\n    const onLogout = this.onLogout\n    const onLoginSuccess = this.onLoginSuccess\n    const handleClose = this.handleClose\n    const handleCredentialsSignOn = this.handleCredentialsSignOn\n    const handleOnSuccess = this.handleOnSuccess\n    const handleError = this.handleError\n\n    return (\n      <div>\n        <Dialog\n          className=\"sign-in-container\"\n          open={this.props.ndexSave.ndexModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          {this.props.ndexSave.profile ? (\n            <div className=\"sign-in-header\">\n              <Avatar\n                className=\"ndex-account-avatar\"\n                src={this.props.ndexSave.profile.image}\n              >\n                U\n              </Avatar>\n              <Typography variant=\"h4\" className=\"ndex-account-greeting\">\n                Hi, {this.props.ndexSave.profile.name}\n              </Typography>\n              <Button onClick={onLogout}>Logout</Button>\n            </div>\n          ) : (\n            <NDExSignIn\n              handleClose={handleClose}\n              onLoginSuccess={onLoginSuccess}\n              onLogout={onLogout}\n              handleCredentialsSignOn={handleCredentialsSignOn}\n              onSuccess={handleOnSuccess}\n              handleError={handleError}\n              error={this.props.ndexSave.errorMessage}\n            />\n          )}\n          <NDExSave {...props} />\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nexport default (NDExSignInModal)\n\n\n","export const METHOD_POST = \"POST\"\nexport const METHOD_GET = \"GET\"\n\n// Primary\n//export const BASE_URL = 'http://test.ndexbio.org/integratedsearch/'\n// export const BASE_URL = 'http://dev.ndexbio.org:8290/'\n// export const BASE_URL = 'http://secret.ndexbio.org:9080/'\n\n// Server URL\nexport const SERVICE_SERVER_URL = \"http://dev.ndexbio.org/\"\n// Its endpoint\nexport const BASE_URL = SERVICE_SERVER_URL + \"integratedsearch/\"\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { withStyles } from \"@material-ui/core\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport OpenInBrowserIcon from \"@material-ui/icons/OpenInBrowser\"\n\nimport { SERVICE_SERVER_URL } from \"../../../api/apiConstants\"\n\nconst styles = theme => ({\n  buttonIcon: {\n    padding: 0,\n    margin: 0,\n    paddingBottom: \"0.1em\"\n  },\n  button: {\n    height: \"3em\",\n    width: \"4.3em\",\n    minWidth: \"4.3em\",\n    marginLeft: \"0.5em\"\n  }\n})\n\n/**\n * Simply open the parent network\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst OpenOriginalNetworkButton = props => {\n  const { classes } = props\n\n  const disabled = !(props.network.uuid && props.network.uuid.length > 0)\n\n  const BootstrapButton = withStyles({\n    root: {\n      width: \"4.3em\",\n      borderColor: \"#212121\",\n      color: \"#212121\",\n      \"&:active\": {\n        borderColor: \"#212121\",\n        color: \"#212121\"\n      }\n    }\n  })(Button)\n\n  return (\n    <Tooltip\n      disableFocusListener\n      title=\"Open original network in new browser window\"\n      placement=\"bottom\"\n    >\n      <div>\n        <BootstrapButton\n          className={classes.button}\n          variant=\"outlined\"\n          disabled={disabled}\n          onClick={() => handleOpen(props.network.uuid)}\n        >\n          <OpenInBrowserIcon\n            color={disabled ? \"disabled\" : \"inherit\"}\n            fontSize=\"large\"\n            className={classes.buttonIcon}\n          />\n        </BootstrapButton>\n      </div>\n    </Tooltip>\n  )\n}\n\nconst handleOpen = uuid => {\n  const url = SERVICE_SERVER_URL + \"#/network/\" + uuid\n  console.log(SERVICE_SERVER_URL)\n  console.log(url)\n\n  console.log(\"Opening original network entry:\", url)\n  window.open(url, \"_blank\")\n}\n\nexport default withStyles(styles)(OpenOriginalNetworkButton)\n","import \"./style.css\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Typography from \"@material-ui/core/Typography\"\nimport { fade } from \"@material-ui/core/styles/colorManipulator\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { Tooltip } from \"@material-ui/core\"\n\nimport OpenInCytoscapeButton from \"./OpenInCytoscapeButton\"\nimport ResetZoomButton from \"./ResetZoomButton\"\nimport Highlighter from \"./Highlighter\"\nimport OpenInNDExButton from \"./OpenInNDExButton\"\nimport NDExSignInModal from \"../../NDExSignInModal\"\nimport NDExSave from \"../../NDExSave\"\nimport OpenOriginalNetworkButton from \"./OpenOriginalNetworkButton\"\nimport { camelCaseToTitleCase } from \"../TableBrowser/camel-case-util\"\n\nconst styles = theme => ({\n  toolbar: {\n    background: \"#EFEFEF\",\n    height: \"4em\",\n    paddingTop: \"0\",\n    paddingBottom: \"0\",\n    paddingLeft: \"0.5em\",\n    paddingRight: \"0.5em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  },\n  buttonIcon: {\n    height: \"2.5em\",\n    paddingLeft: \"0.5em\"\n  },\n  buttons: {\n    padding: \"0.3em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    border: \"solid 1px #999999\"\n  },\n  openIcon: {\n    marginRight: \"0.5em\"\n  }\n})\n\nconst NetworkToolbar = props => {\n  const { classes, ...other } = props\n  let [prefix, name] = [\"\", \"\"]\n\n  if (props.search.actualResults.length !== 0) {\n    [prefix, name] = props.network.networkName.replace(\":\", \"&\").split(\"&\")\n  }\n\n  return (\n    <div className={classes.toolbar}>\n      <Tooltip title={name ? camelCaseToTitleCase(prefix) + \":\" + name : \"\"}>\n        <Typography\n          className={classes.title}\n          variant=\"subtitle1\"\n          color=\"inherit\"\n          noWrap\n        >\n          {name ? camelCaseToTitleCase(prefix) + \":\" + name : \"\"}\n        </Typography>\n      </Tooltip>\n      <div className={classes.grow} />\n      <ResetZoomButton {...other} />\n      <Highlighter {...other} />\n      <NDExSignInModal {...other}>\n        <NDExSave {...props} />\n      </NDExSignInModal>\n      <OpenInNDExButton {...other} />\n      <OpenInCytoscapeButton {...other} />\n      <OpenOriginalNetworkButton {...other} />\n    </div>\n  )\n}\n\nNetworkToolbar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(NetworkToolbar)\n","import React, { useState } from \"react\"\nimport \"./style.css\"\nimport Split from \"react-split\"\n\nimport NetworkViewer from \"./NetworkViewer\"\nimport MemoTableBrowser from \"../TableBrowser\"\nimport NetworkToolbar from \"./NetworkToolbar\"\n\nconst DEFAULT_RATIO = [50, 50]\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst NetworkView = props => {\n  const [resized, setResize] = useState(null)\n\n  const handleResizeEnd = e => {\n    setResize(e)\n  }\n\n  return (\n    <div className={\"network-view-top\"}>\n      <NetworkToolbar {...props} />\n      <Split\n        sizes={DEFAULT_RATIO}\n        direction=\"vertical\"\n        gutterSize={7}\n        className={\"nv-container\"}\n        onDragEnd={handleResizeEnd}\n      >\n        <NetworkViewer\n          resized={resized}\n          {...props}\n        />\n        <MemoTableBrowser {...props}/>\n      </Split>\n    </div>\n  )\n}\n\nexport default NetworkView\n","import React, { useState } from \"react\"\n\nimport { withStyles } from \"@material-ui/styles\"\nimport Typography from \"@material-ui/core/Typography\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport InputBase from \"@material-ui/core/InputBase\"\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    \"label + &\": {\n      marginTop: \"0\",\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: \"relative\",\n    backgroundColor: \"#FFFFFF\",\n    border: \"1px solid #ced4da\",\n    textColor: \"#757575\",\n    padding: \"5px 26px 5px 12px\",\n    \"&:focus\": {\n      borderRadius: 4,\n      backgroundColor: \"#FFFFFF\"\n    },\n  },\n}))(InputBase)\n\nconst formStyle = {\n  position: \"relative\",\n  left: \"11px\",\n  marginTop: \"8px\",\n  marginBottom: \"8px\"\n}\n\nconst divStyle = {\n  paddingLeft: \"16px\",\n  borderBottom: \"1px solid rgba(239, 239, 239, 1)\",\n}\n\nconst typeStyle = {\n  position: \"relative\",\n  top: \"14.5px\"\n}\n\nconst selectStyle = {\n  color: \"secondary\"\n}\n\nconst SortPanel = props => {\n  const [sortPValueOn, setSortPValueOn] = useState(true)\n\n  const handleChange = event => {\n    if (event.target.value === \"p-Value\") {\n      setSortPValueOn(true)\n      props.uiStateActions.setSortOrder([\"p-Value\", \"Overlap\"])\n    } else {\n      setSortPValueOn(false)\n      props.uiStateActions.setSortOrder([\"Overlap\", \"p-Value\"])\n    }\n  }\n  \n  if (props.uiState.selectedSource === \"enrichment\") {\n    return (\n      <div style={divStyle}>\n        <Typography \n          variant='body2'\n          display='inline'\n          style={typeStyle}\n          color='textSecondary'\n        >\n          Sort by\n        </Typography>\n        <FormControl style={formStyle}>\n          <Select\n            value={sortPValueOn ? \"p-Value\" : \"Overlap\"}\n            onChange={handleChange}\n            displayEmpty\n            name=\"Sort by\"\n            style={selectStyle}\n            input={<BootstrapInput name=\"age\" id=\"age-customized-select\" />}\n          >\n            <MenuItem value={\"p-Value\"}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                p-Value\n              </Typography>\n            </MenuItem>\n            <MenuItem value={\"Overlap\"}>\n              <Typography variant=\"body2\" color='textSecondary'>\n                Overlap\n              </Typography>\n            </MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default (SortPanel)\n            ","import React, { useEffect } from \"react\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\n\nimport MenuList from \"@material-ui/core/MenuList\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport SortPanel from \"./SortPanel\"\n\nimport \"./style.css\"\nimport { callbackify } from \"util\"\n\nconst styles = theme => ({\n  inline: {\n    display: \"inline\"\n  },\n  subtitle: {\n    marginLeft: \"1em\",\n    marginTop: \"0.5em\"\n  },\n  networkAvatar: {\n    margin: 5,\n    color: \"#fff\",\n    backgroundColor: \"#FAFAFA\"\n  },\n  menuItem: {\n    \"&:focus\": {\n      backgroundColor: \"rgba(230,230,230,0.6)\"\n    }\n  },\n  menuText: {\n    \"&:focus\": {}\n  },\n  secondary: {\n    width: \"15em\",\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0.2em\"\n  },\n  plot: {\n    width: \"80%\",\n    background: \"teal\"\n  },\n  noPadding: {\n    paddingTop: \"0\",\n    paddingBottom: \"0\"\n  },\n  center: {\n    justifyContent: \"center\",\n    position: \"relative\",\n    top: \"25%\",\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n})\n\nconst findSort = sortOrder => {\n  if (sortOrder[0] === \"p-Value\") {\n    return (a, b) => {\n      if (a.details.PValue > b.details.PValue) {\n        return 1\n      } else if (a.details.PValue < b.details.PValue) {\n        return -1\n      } else {\n        if (a.hitGenes.length < b.hitGenes.length) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  } else {\n    return (a, b) => {\n      if (a.hitGenes.length < b.hitGenes.length) {\n        return 1\n      } else if (a.hitGenes.length > b.hitGenes.length) {\n        return -1\n      } else {\n        if (a.details.PValue > b.details.PValue) {\n          return 1\n        } else {\n          return -1\n        }\n      }\n    }\n  }\n}\n\nconst NetworkList = props => {\n  let hits = props.hits\n\n  const openFirst = first => {\n    if (first != null) {\n      props.handleFetch(\n        first.networkUUID,\n        first.description,\n        first.nodes,\n        first.edges,\n        first.hitGenes\n      )\n    }\n  }\n\n  //Sort hits\n  useEffect(() => {\n    if (props.uiState.selectedSource === \"enrichment\") {\n      const sortFunction = findSort(props.uiState.sortOrder)\n      hits = hits.sort(sortFunction)\n    }\n    props.searchActions.setActualResults(hits)\n    openFirst(hits[0])\n    props.networkActions.changeListIndex(1)\n  }, [props.uiState.sortOrder, props.uiState.selectedSource])\n\n  if (!hits) {\n    return <div className=\"network-list-wrapper\" />\n  }\n\n  let index = 1\n\n  function handleListItemClick(event, index) {\n    props.networkActions.changeListIndex(index)\n  }\n\n  const selectedIndex = props.network.listIndex\n\n  let enrichmentStyle\n  if (props.uiState.selectedSource === \"enrichment\") {\n    enrichmentStyle = {\n      height: \"calc(100% - 49px)\"\n    }\n  } else {\n    enrichmentStyle = {}\n  }\n\n  if (props.search.actualResults.length > 0) {\n    return (\n      <div className=\"network-list-wrapper\">\n        <SortPanel {...props} />\n        <div className=\"network-list\" style={enrichmentStyle}>\n          <MenuList className={props.classes.noPadding}>\n            {props.search.actualResults.map(entry =>\n              props.renderNetworkListItem(\n                props.search.queryList.length,\n                entry,\n                props.classes,\n                handleListItemClick,\n                selectedIndex,\n                index++\n              )\n            )}\n          </MenuList>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"network-list-wrapper\">\n        <div className=\"network-list\">\n          <Typography\n            variant={\"subtitle1\"}\n            color={\"textSecondary\"}\n            className={props.classes.center}\n          >\n            No results found\n          </Typography>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles)(NetworkList)\n","import React from \"react\"\nimport \"./style.css\"\n\nimport Split from \"react-split\"\n\nimport NetworkView from \"./NetworkView\"\nimport NetworkList from \"./NetworkList\"\n\nimport { camelCaseToTitleCase } from \"../TableBrowser/camel-case-util\"\n\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { ListItem } from \"@material-ui/core\"\n\nconst titleStyle = {\n  lineHeight: \"1.33\",\n  wordBreak: \"break-word\"\n}\n\nconst subtitleStyle = {\n  lineHeight: \"1\",\n  wordBreak: \"break-word\"\n}\n\nconst infoStyle = {\n  display: \"inline\",\n  lineHeight: \"1\",\n}\n\n/**\n * Top page for the application\n *\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Ndex = props => {\n  const handleFetch = (\n    networkUUID,\n    networkName,\n    nodeCount,\n    edgeCount,\n    hitGenes\n  ) => {\n    //checkCytoscapeConnection(props)\n    const geneList = props.search.queryList\n    const sourceUUID = props.sourceUUID\n    const id = props.search.results.jobId\n\n    // Reset selection\n    props.searchActions.clearSelectedGenes()\n    props.uiStateActions.setHighlights(true)\n    props.networkActions.networkFetchStarted({\n      id,\n      sourceUUID,\n      networkUUID,\n      networkName,\n      geneList,\n      hitGenes,\n      nodeCount,\n      edgeCount\n    })\n    updateHistory(networkUUID)\n  }\n\n  const updateHistory = networkUUID => {\n    // Update URL\n    const jobId = props.search.results.jobId\n    const searchResults = props.search.searchResults\n    const sourceName = props.uiState.selectedSource\n\n    if (searchResults !== undefined && searchResults !== null) {\n      console.log(\"** network changed:\", jobId, sourceName)\n      props.history.push(`/${jobId}/${sourceName}/${networkUUID}`)\n    }\n  }\n\n  const handleImportNetwork = () => {\n    // Reset the UI state (hilight)\n    props.uiStateActions.setHighlights(true)\n\n    props.cyrestActions.importNetworkStarted({\n      cx: props.network.originalCX,\n      source: props.network.sourceId,\n      uuid: props.network.uuid\n    })\n  }\n\n  const renderNetworkListItem = (\n    querySize,\n    networkEntry,\n    classes,\n    handleListItemClick,\n    selectedIndex,\n    index\n  ) => {\n    const {\n      description,\n      networkUUID,\n      nodes,\n      edges,\n      imageURL,\n      hitGenes,\n      details\n    } = networkEntry\n\n    const genes = (\n      <div style={infoStyle}>\n        <Typography display=\"inline\" color={props.uiState.sortOrder[0] === \"Overlap\" ? \"textPrimary\" : \"textSecondary\"}>\n          <strong>{hitGenes.length}</strong>{\" \"}\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          display=\"inline\"\n          style={{ lineHeight: \"1\" }}\n          color={props.uiState.sortOrder[0] === \"Overlap\" ? \"textPrimary\" : \"textSecondary\"}        \n        >\n          genes\n        </Typography>\n      </div>\n    )\n\n    const icon = (\n      <ListItemIcon style={{ width: \"20px\" }}>\n        <img className=\"list-icon\" src={imageURL} alt=\"list icon\" />\n      </ListItemIcon>\n    )\n\n    if (props.uiState.selectedSource === \"enrichment\") {\n      let pVal = details.PValue\n      if (pVal !== undefined) {\n        if (pVal < 1e-15) {\n          pVal = \"< 1e-15\"\n        } else { \n          pVal = pVal.toExponential(2)\n        }\n      }\n\n      const pv = (\n        <div style={infoStyle}>\n          <Typography display=\"inline\" color={props.uiState.sortOrder[0] === \"p-Value\" ? \"textPrimary\" : \"textSecondary\"}>\n            <strong>{pVal}{\" \"}</strong>\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            style={{ lineHeight: \"1\" }}\n            color={props.uiState.sortOrder[0] === \"p-Value\" ? \"textPrimary\" : \"textSecondary\"}          \n          >\n            pv\n          </Typography>\n        </div>\n      )\n\n      const title = (\n        <Typography style={titleStyle}>\n          {description.split(\":\").slice(1)}\n        </Typography>\n      )\n\n      const subtitle = (\n        <Typography\n          variant=\"caption\"\n          color=\"textSecondary\"\n          style={subtitleStyle}\n        >\n          Nodes: {nodes}, Edges: {edges}, Source:{\" \"}\n          {camelCaseToTitleCase(description.split(\":\")[0])}\n        </Typography>\n      )\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes)\n            handleListItemClick(event, index)\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={{ tableLayout: \"fixed\", wordBreak: \"breakWord\" }}>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\">\n                  {icon}\n                </td>\n                <td width=\"90px\" align=\"left\" valign=\"bottom\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\">\n                  {pv}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      )\n    } else {\n      const node = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{nodes}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"nodes \"}\n          </Typography>\n        </div>\n      )\n\n      const edge = (\n        <div display=\"inline\">\n          <Typography display=\"inline\" style={{ lineHeight: \"1\" }}>\n            <strong>{edges}</strong>{\" \"}\n          </Typography>\n          <Typography\n            variant=\"caption\"\n            display=\"inline\"\n            color=\"textSecondary\"\n            style={{ lineHeight: \"1\" }}\n          >\n            {\"edges\"}\n          </Typography>\n        </div>\n      )\n\n      const title = (\n        <React.Fragment>\n          <Typography color=\"textPrimary\" style={titleStyle}>\n            {description}\n          </Typography>\n        </React.Fragment>\n      )\n\n      const subtitle = (\n        <Typography variant=\"caption\" color=\"textSecondary\" style={subtitleStyle}>\n          Parent: {details.parent_network_nodes} nodes,{\" \"}\n          {details.parent_network_edges} edges\n        </Typography>\n      )\n\n      return (\n        <ListItem\n          button\n          key={networkUUID}\n          onClick={event => {\n            handleFetch(networkUUID, description, nodes, edges, hitGenes)\n            handleListItemClick(event, index)\n          }}\n          selected={selectedIndex === index}\n        >\n          <table style={{ tableLayout: \"fixed\", wordBreak: \"break-word\" }}>\n            <tbody>\n              <tr height=\"50%\">\n                <td rowSpan=\"2\" align=\"center\" valign=\"middle\" width=\"50px\">\n                  {icon}\n                </td>\n                <td colSpan=\"2\" align=\"left\" valign=\"bottom\" width=\"150px\">\n                  {genes}\n                </td>\n                <td align=\"left\" valign=\"bottom\">\n                  {title}\n                </td>\n              </tr>\n              <tr>\n                <td align=\"left\" valign=\"baseline\" width=\"75px\">\n                  {node}\n                </td>\n                <td align=\"left\" valign=\"baseline\" width=\"80px\">\n                  {edge}\n                </td>\n                <td align=\"left\" valign=\"baseline\">\n                  {subtitle}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ListItem>\n      )\n    }\n  }\n\n  return (\n    <Split sizes={[40, 60]} gutterSize={7} className=\"ndex-base\">\n      <NetworkList\n        renderNetworkListItem={renderNetworkListItem}\n        handleFetch={handleFetch}\n        hits={props.hits}\n        {...props}\n      />\n      <NetworkView handleImportNetwork={handleImportNetwork} {...props} />\n    </Split>\n  )\n}\n\n/*const MemoNdex = React.memo(Ndex, (oldProps, newProps) => {\n  \n})*/\n\nexport default Ndex\n","import React from \"react\"\n\nimport Ndex from \"./Ndex\"\nimport LoadingPanel from \"../LoadingPanel\"\n\nconst TabContent = props => {\n  const results = props.results\n\n  if (results === null || results === undefined) {\n    return (\n      <LoadingPanel\n        title={\"Loading results\"}\n        message={<div style={{ color: \"black\" }}>Please wait...</div>}\n      />\n    )\n  } else {\n    return (\n      <Ndex hits={results.results} sourceUUID={results.sourceUUID} {...props} />\n    )\n  }\n}\n\nexport default TabContent\n","import React, { useState, useEffect } from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport HoverTab from \"./HoverTab\"\nimport Empty from \"./Empty\"\nimport TabContent from \"./TabContent\"\n\n// Conversion table from tab ID to human-readable labels\nconst TAB_LABELS = {\n  enrichment: {\n    label: \"Gene Enrichment\"\n  },\n  \"interactome-ppi\": {\n    label: \"Protein Interactions\"\n  },\n  \"interactome-association\": {\n    label: \"Gene Association\"\n  }\n}\n\nconst backgroundColor = \"rgb(235, 235, 235)\"\n\nconst styles = theme => ({\n  tabs: {},\n  grow: {\n    flexGrow: 1\n  }\n})\n\nconst Results = props => {\n  const { classes, ...others } = props\n\n  // For tab selection\n  const [idx, setSelectedTabIndex] = useState(0)\n\n  useEffect(() => {\n    updateHistory(0)\n  }, [])\n\n  const handleChange = (event, idx) => {\n    setSelectedTabIndex(idx)\n    updateHistory(idx)\n    props.networkActions.networkClear()\n    props.networkActions.changeListIndex(0)\n  }\n\n  const updateHistory = newValue => {\n    // Update URL\n    const results = props.search.results\n    if (results === null || results === undefined) {\n      return\n    }\n\n    const jobId = results.jobId\n    const searchResults = props.search.searchResults\n    if (searchResults !== undefined && searchResults !== null) {\n      const sourceName = getSourceName(sources, newValue)\n      console.log(\"* Tab change:\", jobId, sourceName)\n      props.uiStateActions.setSelectedSource(sourceName)\n      props.history.push(`/${jobId}/${sourceName}`)\n    }\n  }\n\n  // Source list is not available.  Just return empty result\n  const { sources } = props.source\n  if (sources === null || sources === undefined || sources.length === 0) {\n    return <Empty />\n  }\n\n  const searchResults = props.search.searchResults\n  const selectedSourceName = getSourceName(sources, idx)\n\n  const results = findResult(selectedSourceName, searchResults)\n\n  // Get current tab selection\n  return (\n    <div className=\"results-container\">\n      <div className=\"results-wrapper\">\n        <Tabs value={idx} onChange={handleChange} className={classes.tabs}>\n          {sources.map(source => (\n            <HoverTab key={source.uuid} label={TAB_LABELS[source.name].label} backgroundColor={backgroundColor}/>\n          ))}\n        </Tabs>\n        <TabContent results={results} {...others} />\n      </div>\n    </div>\n  )\n}\n\nconst getSourceName = (sources, idx) => {\n  return sources[idx].name\n}\n\nconst findResult = (sourceName, results) => {\n  if (results === null || results === undefined) {\n    return null\n  }\n\n  const resultArray = results.sources\n  let idx = resultArray.length\n\n  while (idx--) {\n    const currentResult = resultArray[idx]\n    if (currentResult.sourceName === sourceName) {\n      return currentResult\n    }\n  }\n  return null\n}\n\nexport default withStyles(styles)(Results)\n","import React, { useState, useEffect, useRef } from \"react\"\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Paper from \"@material-ui/core/Paper\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport Divider from \"@material-ui/core/Divider\"\n\nimport { loadCSS } from \"fg-loadcss/src/loadCSS\"\nimport Icon from \"@material-ui/core/Icon\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport classNames from \"classnames\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\n\nimport MessageSnackbar from \"./MessageSnackbar\"\n\nimport * as examples from \"../TopPage/example-genes\"\n\nconst EXAMPLES = examples.default.examples\n\nconst styles = {\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"60vmin\",\n    padding: \"0.3em\",\n    background: \"#f1f1f1\",\n    marginLeft: \"1em\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst ORIGINAL_GENE_TEXT = \"original-gene-text\"\n\nconst GeneTextBox = props => {\n  const { classes } = props\n  const geneTextRef = useRef()\n\n  const [state, setState] = useState({anchorEl: null, query: props.search.queryGenes})\n  const [open, setOpen] = useState(false)\n\n  const menuOpen = Boolean(state.anchorEl)\n\n  useEffect(() => {\n    loadCSS(\n      \"https://use.fontawesome.com/releases/v5.1.0/css/all.css\",\n      document.querySelector(\"#insertion-point-jss\")\n    )\n    return () => {}\n  }, [])\n\n  const handleCopy = () => {\n    // This is a hack...\n    const copyText = document.getElementById(ORIGINAL_GENE_TEXT)\n    copyText.select()\n    document.execCommand(\"copy\")\n\n    // Show message\n    setOpen(true)\n  }\n\n  const handleSearch = evt => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n\n    const geneListString = genes.replace(\",\", \" \")\n    const geneList = geneListString.split(/\\s*,\\s*|\\s+/)\n\n    props.searchActions.clearAll()\n    props.uiStateActions.setSelectedSource(\"enrichment\")\n    props.history.push(\"/\")\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: \"\" })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      handleSearch()\n    }\n  }\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  return (\n    <div>\n      <MessageSnackbar\n        open={open}\n        setOpen={setOpen}\n        message={\"Genes are copied to clipboard!\"}\n        autoHideDuration={4000}\n        horizontal={\"left\"}\n        vertical={\"bottom\"}\n      />\n      <Paper className={classes.root} elevation={0}>\n        <Tooltip title=\"Query gene set examples\" placement=\"bottom\">\n          <div>\n            <IconButton\n              className={classes.iconButton}\n              aria-label=\"Menu\"\n              onClick={handleMenu}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              anchorEl={state.anchorEl}\n              anchorOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\"\n              }}\n              transformOrigin={{\n                vertical: \"top\",\n                horizontal: \"right\"\n              }}\n              open={menuOpen}\n              onClose={handleClose}\n            >\n              {EXAMPLES.map((example, idx) => {\n                return (\n                  <MenuItem key={idx} onClick={() => handleExample(idx)}>\n                    {example.name}\n                  </MenuItem>\n                )\n              })}\n            </Menu>\n          \n          </div>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Copy\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Copy\"\n            onClick={handleCopy}\n          >\n            <Icon className={classNames(classes.icon, \"far fa-clipboard\")} />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <Tooltip title=\"Clear gene list\" placement=\"bottom\">\n          <IconButton\n            color=\"default\"\n            className={classes.iconButton}\n            aria-label=\"Clear\"\n            onClick={handleClear}\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n        <Divider className={classes.divider} />\n        <InputBase\n          id={ORIGINAL_GENE_TEXT}\n          className={classes.input}\n          placeholder=\"Genes entered\"\n          value={state.query}\n          onChange={handleChange(\"query\")}\n          onKeyDown={handleKeyPress}\n          ref={geneTextRef}\n        />\n\n        <Tooltip title=\"Start new search\" placement=\"bottom\">\n          <IconButton\n            color=\"primary\"\n            className={classes.iconButton}\n            aria-label=\"Directions\"\n            onClick={handleSearch}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Paper>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(GeneTextBox)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport HelpIcon from \"@material-ui/icons/Help\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Button from \"@material-ui/core/Button\"\n\n\nimport classNames from \"classnames\"\n\nimport logo from \"../../assets/images/ndex-logo.svg\"\nimport cytoLogo from \"../../assets/images/cytoscape-logo-mono-dark.svg\"\nimport nrnbLogo from \"../../assets/images/nrnb-logo-mono-dark.svg\"\nimport wpLogo from \"../../assets/images/wp-logo-mono-dark.svg\"\nimport idekerLogo from \"../../assets/images/ideker-logo-mono-dark.svg\"\nimport HomeIcon from \"@material-ui/icons/Home\"\n\nimport GeneTextBox from \"./GeneTextBox\"\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  hide: {\n    display: \"none\"\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 10\n  },\n  logo: {\n    height: \"1em\",\n    width: \"1.5em\"\n  },\n  homeLogo: {\n    height: \"1em\",\n    width: \"1em\",\n    marginRight: \"0.5em\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  textBox: {\n    paddingLeft: \"1em\",\n    paddingRight: \"1em\"\n  },\n  noWrap: {\n    display: \"inline-block\",\n    whiteSpace: \"nowrap\"\n  }\n})\n\nconst titleStyle = {\n  position: \"relative\",\n  left: \"1em\",\n  textTransform: \"none\",\n}\n\nclass TitleBar extends React.Component {\n  handleMenu = () => {\n    this.props.uiStateActions.setSettingsOpen(\n      !this.props.uiState.isSettingsOpen\n    )\n  }\n\n  handleHomeButton = () => {\n    this.props.searchActions.clearAll()\n    this.props.uiStateActions.setSelectedSource(\"enrichment\")\n    this.props.networkActions.networkClear()\n    this.props.history.push(\"/\")\n  }\n\n  render() {\n    const { classes, ...others } = this.props\n    const open = this.props.uiState.isSettingsOpen\n\n    return (\n      <AppBar\n        position=\"fixed\"\n        color=\"inherit\"\n        className={classNames(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <div className={classes.noWrap}>\n          <Toolbar disableGutters={!open}>\n            <Tooltip title=\"Search by Pathway Enrichment / Protein-Protein Interactions / Gene Association\" aria-label=\"NDEx_tooltip\">\n              <div>\n                <Button style={titleStyle} onClick={this.handleHomeButton}>\n                  <HomeIcon fontSize=\"default\" className={classes.homeLogo}/>\n                  <Typography variant=\"h6\" color=\"inherit\" noWrap={true}>\n                  NDEx Integrated Query\n                  </Typography>\n                </Button>\n              </div>\n            </Tooltip>\n\n            {this.props.search.results === null ? (\n              <div />\n            ) : (\n              <div className={classes.textBox}>\n                <GeneTextBox {...others} />\n              </div>\n            )}\n\n            <div className={classes.grow} />\n          \n            <div>\n              {/*}\n          <Tooltip title=\"Home\" placement=\"bottom\">\n              <IconButton\n                aria-haspopup=\"true\"\n                color=\"default\"\n                onClick={this.handleHomeButton}\n              >\n                <HomeIcon fontSize=\"default\" className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n          */}\n              <Tooltip title=\"NDEx\" placement=\"bottom\">\n                <IconButton\n                  color=\"default\"\n                  aria-label=\"Home\"\n                  onClick={() => openLink(NDEX_URL)}\n                >\n                  <img alt=\"NDEx logo\" src={logo} className={classes.logo} />\n                </IconButton>\n              </Tooltip>\n\n              <Tooltip title=\"Help\" placement=\"bottom\" style={{marginRight: \"1em\"}}>\n                <IconButton\n                  aria-haspopup=\"true\"\n                  color=\"default\"\n                  onClick={() => openLink(HELP_URL)}\n                >\n                  <Typography color=\"textPrimary\">\n                    <HelpIcon fontSize=\"default\" className={classes.logo}/>\n                  </Typography>\n                </IconButton>\n              </Tooltip>\n              {/*}\n            <Tooltip title=\"Ideker Lab\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={() => openLink(IL_URL)}\n              >\n                <img alt=\"Ideker Lab Logo\" src={idekerLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"Cytoscape\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                onClick={() => openLink(CYTOSCAPE_URL)}\n              >\n                <img alt=\"Cytoscape Logo\" src={cytoLogo} className={classes.logo}/>\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"NRNB\" placement=\"bottom\">\n              <IconButton\n                color=\"default\"\n                aria-label=\"Home\"\n                onClick={() => openLink(NRNB_URL)}\n              >\n                <img alt=\"NRNB logo\" src={nrnbLogo} className={classes.logo} />\n              </IconButton>\n            </Tooltip>\n\n            <Tooltip title=\"WikiPathways\" placement=\"bottom\">\n              <IconButton\n                color='default'\n                onClick={()=> openLink(WP_URL)}\n              >\n                <img alt=\"WikiPathways Logo\" src={wpLogo} className={classes.logo}/>\n              </IconButton>\n          </Tooltip>*/}\n            </div>\n          </Toolbar>\n        </div>\n      </AppBar>\n    )\n  }\n}\n\n// TODO: replace this to the actual help page\nconst HELP_URL = \"https://github.com/idekerlab/search-portal/wiki\"\nconst NDEX_URL = \"https://www.ndexbio.org/\"\nconst CYTOSCAPE_URL = \"https://cytoscape.org/\"\nconst NRNB_URL = \"https://nrnb.org/\"\nconst WP_URL = \"https://www.wikipathways.org/\"\nconst IL_URL = \"http://idekerlab.ucsd.edu/\"\n\nconst openLink = url => {\n  window.open(url, \"_blank\")\n}\n\nTitleBar.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, { withTheme: true})(TitleBar))","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport Divider from \"@material-ui/core/Divider\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\"\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport SettingIcon from \"@material-ui/icons/Settings\"\nimport CloudIcon from \"@material-ui/icons/Cloud\"\nimport ExpandLess from \"@material-ui/icons/ExpandLess\"\nimport ExpandMore from \"@material-ui/icons/ExpandMore\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\n\nimport github from \"../../assets/images/github.svg\"\n\nimport \"./style.css\"\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4\n  }\n})\n\nclass SettingsPanel extends React.Component {\n  handleServicesItemClick = () => {\n    const servicesListOpen = this.props.uiState.servicesListOpen\n    this.props.uiStateActions.setServicesListOpen(!servicesListOpen)\n  }\n\n  handleDrawerClose = () => {\n    const isOpen = this.props.uiState.isSettingsOpen\n    this.props.uiStateActions.setSettingsOpen(!isOpen)\n  }\n\n  render() {\n    const { classes, theme } = this.props\n    const isOpen = this.props.uiState.isSettingsOpen\n    const sources = this.props.source.sources\n    const servicesListOpen = this.props.uiState.servicesListOpen\n\n    return (\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className=\"drawerHeader\">\n          <IconButton onClick={this.handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List className={classes.root}>\n          <ListItem button onClick={this.handleServicesItemClick}>\n            <ListItemIcon>\n              <CloudIcon />\n            </ListItemIcon>\n            <ListItemText inset primary=\"Services\" />\n            {servicesListOpen ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={servicesListOpen} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\">\n              {sources.map(sourceEntry => (\n                <Tooltip\n                  title={\"Version: \" + sourceEntry.version}\n                  placement=\"right\"\n                  key={sourceEntry.uuid}\n                >\n                  <ListItem\n                    button\n                    key={sourceEntry.uuid}\n                    className={classes.nested}\n                  >\n                    <ListItemIcon>\n                      <CloudIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={sourceEntry.name}\n                      secondary={\" Status: \" + sourceEntry.status}\n                    />\n                  </ListItem>\n                </Tooltip>\n              ))}\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n        <List>\n          {[\"Settings\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                <SettingIcon />\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {LINKS.map(link => (\n            <ListItem button key={link.name} onClick={() => openLink(link.url)}>\n              <ListItemIcon>\n                <img src={link.src} height=\"24px\" width=\"24px\" alt='list item icon'/>\n              </ListItemIcon>\n              <ListItemText primary={link.name} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    )\n  }\n}\n\nconst LINKS = [\n  {\n    name: \"Source Code\",\n    url: \"https://github.com/idekerlab/search-portal\",\n    src: github\n  }\n]\n\nconst openLink = url => {\n  window.open(url, \"_blank\")\n}\n\nSettingsPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n}\n\nexport default (withStyles(styles, {withTheme: true})(SettingsPanel))\n","import React, { useEffect } from \"react\"\nimport \"./style.css\"\n\nimport TitleBar from \"./TitleBar\"\nimport SettingsPanel from \"../SettingsPanel\"\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport { withStyles } from \"@material-ui/core/styles\"\n\nimport classNames from \"classnames\"\n\nconst drawerWidth = 240\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    height: \"100vmin\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    padding: \"0 0.5em\",\n    alignItems: \"center\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n})\n\nconst AppShell = props => {\n  useEffect(() => {\n    const urlParams = new URLSearchParams(props.history.location.search)\n    const cyrestport = urlParams.get(\"cyrestport\")\n    if (cyrestport) {\n      props.cyrestActions.setPort(cyrestport)\n    }\n    return () => {}\n  }, [])\n  const { classes, ...others } = props\n\n  const open = props.uiState.isSettingsOpen\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <TitleBar {...others} />\n      <SettingsPanel {...others} />\n\n      <div\n        className={classNames(classes.content, {\n          [classes.contentShift]: open\n        })}\n      />\n      {props.children}\n    </div>\n  )\n}\n\nexport default withStyles(styles, { withTheme: true })(AppShell)\n","import React, { useEffect } from \"react\"\nimport \"./style.css\"\n\nimport InputPanel from \"../InputPanel\"\nimport Results from \"../Results\"\nimport AppShell from \"../AppShell\"\nimport LoadingPanel from \"../LoadingPanel\"\n\nconst HomePanel = props => {\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.searchActions.fetchResultStarted({ jobId })\n    }\n\n    window.onpopstate = onBackButtonEvent\n    return () => {}\n  }, [])\n\n  const onBackButtonEvent = e => {\n    e.preventDefault()\n    props.searchActions.clearAll()\n    props.history.push(\"/\")\n  }\n\n  const isFetching = props.search.isFetching\n  const searchResults = props.search.searchResults\n\n  // Still searching and no result is available\n  if (isFetching && searchResults === null) {\n    return (\n      <AppShell {...props}>\n        <LoadingPanel title=\"Loading Results...\" />\n      </AppShell>\n    )\n  }\n\n  return (\n    <AppShell {...props}>\n      <div className=\"container\">\n        <Results {...props} />\n        <InputPanel {...props} />\n      </div>\n    </AppShell>\n  )\n}\n\nexport default HomePanel\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport { withRouter } from \"react-router-dom\"\n\nimport * as searchActions from \"../../actions/search\"\nimport * as uiStateActions from \"../../actions/uiState\"\nimport * as networkActions from \"../../actions/network\"\nimport * as sourceActions from \"../../actions/source\"\nimport * as cyrestActions from \"../../actions/cyrest\"\nimport * as ndexSaveActions from \"../../actions/ndexSave\"\n\nimport ReactGA from \"react-ga\"\n\nimport HomePanel from \"../../components/HomePanel\"\n\nconst MainContainer = props => {\n  useEffect(() => {\n    const { history } = props\n\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <HomePanel {...props} />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(MainContainer)\n)\n","import React, { useState, useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Paper from \"@material-ui/core/Paper\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { Tooltip } from \"@material-ui/core\"\nimport Button from \"@material-ui/core/Button\"\nimport Link from \"@material-ui/core/Link\"\nimport searchLogo from \"../../assets/images/search-logo.svg\"\n\nimport * as examples from \"./example-genes\"\n\nconst EXAMPLES = examples.default.examples\nconst feedbackURL = \"https://home.ndexbio.org/contact-us/\"\n\nconst styles = {\n  root: {\n    padding: \"0.1em 0.25em\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}\n\nconst SearchTextBox = props => {\n  const { classes } = props\n  const searchButtonEl = useRef()\n\n  const [state, setState] = useState({ anchorEl: null, query: \"\" })\n\n  useEffect(() => {\n    if (props.search.results !== null) {\n      const jobId = props.search.results.jobId\n      props.history.push(`/${jobId}`)\n    }\n  }, [])\n\n  const open = Boolean(state.anchorEl)\n\n  const handleMenu = event => {\n    setState({ ...state, anchorEl: event.currentTarget })\n  }\n\n  const handleClose = () => {\n    setState({ ...state, anchorEl: null })\n  }\n\n  const handleExample = exampleIdx => {\n    setState({\n      ...props,\n      query: EXAMPLES[exampleIdx].genes,\n      anchorEl: null\n    })\n  }\n\n  const handleChange = name => event => {\n    setState({\n      ...props,\n      [name]: event.target.value\n    })\n  }\n\n  const handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      // TODO: add validator here\n      handleSearch()\n    }\n  }\n\n  const handleClear = () => {\n    setState({ ...state, query: \"\" })\n  }\n\n  const handleSearch = event => {\n    const genes = state.query\n    const sources = props.source.sources\n\n    if (genes.length === 0 || sources === null || sources.length === 0) {\n      // TODO: add better error message\n      return\n    }\n\n    const sourceNames = sources.map(source => source.name)\n    const geneList = genes.toString().split(/\\s*,\\s*|\\s+/)\n    props.searchActions.setQuery(genes)\n    props.searchActions.searchStarted({ geneList, sourceNames })\n  }\n\n  return (\n    <React.Fragment>\n      <Paper className={\"search-text-box\"} elevation={1}>\n        <IconButton\n          color={\"default\"}\n          className={classes.iconButton}\n          aria-label=\"Directions\"\n          onClick={handleClear}\n        >\n          <DeleteIcon />\n        </IconButton>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Enter gene list (or click an example below)\"\n          onChange={handleChange(\"query\")}\n          onKeyDown={handleKeyPress}\n          value={state.query}\n          autoFocus={true}\n        />\n        <IconButton\n          ref={searchButtonEl}\n          className={classes.iconButton}\n          aria-label=\"Search\"\n          onClick={handleSearch}\n        >\n          <img\n            alt=\"Search icon\"\n            src={searchLogo}\n            style={{ height: \"1.25em\" }}\n          />\n        </IconButton>\n      </Paper>\n      <Link href={feedbackURL} target=\"_blank\" color=\"textSecondary\" underline=\"none\">\n        <Typography\n          variant=\"caption\"\n          style={{ paddingTop: \"0.25em\" }}\n          color=\"textSecondary\"\n        >\n          <em>Try this pre-release version, send us </em>\n          <Link href={feedbackURL} target=\"_blank\">\n            <font color=\"#00A1DE\">\n              <em>feedback</em>\n            </font>\n          </Link>\n        </Typography>\n      </Link>\n      <Typography\n        align=\"left\"\n        style={{ paddingLeft: \"7.25em\", paddingTop: \"1em\" }}\n      >\n        Query gene set examples:\n      </Typography>\n      <Tooltip title=\"Hypoxia description\" open={false}>\n        <Button onClick={() => handleExample(0)}>\n          <font color=\"#00A1DE\">Hypoxia</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Adenyl cyclase description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(1)}>\n          <font color=\"#00A1DE\">Adenyl Cyclase</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"D4DGI description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(2)}>\n          <font color=\"#00A1DE\">D4DGI</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Angiotensin description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(3)}>\n          <font color=\"#00A1DE\">Angiotensin</font>\n        </Button>\n      </Tooltip>\n      <Tooltip title=\"Estrogen description\" open={false}>\n        <Button color=\"primary\" onClick={() => handleExample(4)}>\n          <font color=\"#00A1DE\">Estrogen</font>\n        </Button>\n      </Tooltip>\n    </React.Fragment>\n  )\n}\n\nSearchTextBox.propTypes = {\n  classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(SearchTextBox)\n","import React from \"react\"\nimport \"./style.css\"\n\n// SVG images for links\nimport cyLogo from \"../../assets/images/cytoscape-logo.svg\"\nimport ndexLogo from \"../../assets/images/ndex-logo.svg\"\nimport ucsdLogo from \"../../assets/images/ucsd-logo.svg\"\n\nimport Typography from \"@material-ui/core/Typography\"\n\nconst Footer = props => (\n  <footer className=\"footer-container\">\n    <Typography variant=\"subtitle1\">\n      &copy; 2019 UC, San Diego Ideker Lab\n    </Typography>\n    <img\n      alt=\"NDEx logo\"\n      src={ndexLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(NDEX_URL)}\n    />\n    <img\n      alt=\"Cytoscape logo\"\n      src={cyLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(CY_URL)}\n    />\n    <img\n      alt=\"UCSD logo\"\n      src={ucsdLogo}\n      className=\"footer-logo\"\n      onClick={() => openLink(UCSD_URL)}\n    />\n  </footer>\n)\n\nconst CY_URL = \"https://cytoscape.org/\"\nconst NDEX_URL = \"https://www.ndexbio.org/\"\nconst UCSD_URL =\n  \"https://medschool.ucsd.edu/som/medicine/research/labs/ideker/Pages/default.aspx\"\n\nconst openLink = url => {\n  window.open(url, \"_blank\")\n}\n\nexport default Footer\n","import React, { useEffect } from \"react\"\nimport \"./style.css\"\n\nimport SearchTextBox from \"./SearchTextBox\"\nimport Footer from \"./Footer\"\nimport LoadingPanel from \"../LoadingPanel\"\nimport Typography from \"@material-ui/core/Typography\"\n\nimport ndex from \"../../assets/images/ndex-logo.svg\"\nimport queryString from \"query-string\"\nimport { Tooltip } from \"@material-ui/core\"\nimport Link from \"@material-ui/core/Link\"\n\nconst feedbackURL = \"https://home.ndexbio.org/contact-us/\"\n\nconst StartPanel = props => {\n  useEffect(() => {\n    const params = queryString.parse(props.location.search)\n    const genes = params.genes\n\n    if (genes !== undefined) {\n      const geneList = genes.split(\",\")\n      props.searchActions.setQuery(genes)\n      props.searchActions.searchStarted({ geneList })\n    }\n\n    props.sourceActions.findSourceStarted()\n\n    return () => {}\n  }, [])\n\n  if (props.search.isSearching) {\n    return (\n      <LoadingPanel\n        title={\"Searching Remote Database\"}\n        message={<div style={{ color: \"black\" }}>Please wait...</div>}\n      />\n    )\n  }\n\n  return (\n    <div className=\"start-container\">\n      <div className=\"start-title\">\n        <div\n          style={{\n            position: \"relative\",\n            paddingTop: \"0.1em\",\n            paddingBottom: \"2em\",\n\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginBottom: \"-0.5em\"\n          }}\n        >\n          <Typography align=\"center\" color=\"textSecondary\">\n            One search finds pathways, queries protein interaction networks,\n          </Typography>\n          <Typography align=\"center\" color=\"textSecondary\">\n            and discovers disease, drug, and tissue associations.\n          </Typography>\n          <Typography align=\"center\" color=\"textSecondary\">\n            Powered by NDEx and integrated with Cytoscape.\n          </Typography>\n        </div>\n        <div align=\"center\" className=\"inlineFlex\">\n          <img\n            className=\"start-logo-main\"\n            src={ndex}\n            alt=\"logo\"\n            style={{ height: \"8.75em\", paddingRight: \"1em\" }}\n          />\n          <div className=\"flex\">\n            <Typography\n              variant=\"h3\"\n              align=\"left\"\n              style={{\n                whiteSpace: \"noWrap\",\n                position: \"relative\",\n                top: \"0.1em\"\n              }}\n            >\n              NDEx Integrated Query\n            </Typography>\n            <Typography\n              align=\"left\"\n              style={{ position: \"relative\", left: \"0.25em\", top: \"-0.1em\" }}\n            >\n              v0.2 Pre-Release.\n            </Typography>\n          </div>\n        </div>\n\n        <div align=\"center\" style={{ paddingBottom: \"3em\", paddingTop: \"1em\" }}>\n          <SearchTextBox {...props} />\n        </div>\n      </div>\n      <div className=\"height\">\n        <Link href={feedbackURL} target=\"_blank\" color=\"textSecondary\" underline=\"none\">\n          <div className=\"flex\">\n            <Typography variant=\"caption\" align=\"center\">\n            NDEx Integrated Query uses selected pathway and interactome networks\n            in NDEx to power gene set analysis.\n            </Typography>\n            <Typography variant=\"caption\" align=\"center\">\n            The networks come from many different sources and new networks will\n            be continously added.\n            </Typography>\n            <Typography variant=\"caption\" align=\"center\">\n            Do you have a pathway or an interaction network that you would like\n            to include in these queries? Click{\" \"}\n              <Link href={feedbackURL} target=\"_blank\">\n                <font color=\"#00A1DE\">\n                  <em>here</em>\n                </font>\n              </Link>{\" \"}\n            to find out how.\n            </Typography>\n          \n          </div>\n        </Link>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default StartPanel\n","import React from \"react\"\n\nimport AppShell from \"../AppShell\"\nimport StartPanel from \"./StartPanel\"\n\nconst TopPage = props => (\n  <AppShell \n    {...props}\n  >\n    <StartPanel\n      {...props}\n    />\n  </AppShell>\n)\n\nexport default TopPage\n","import React, { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport { withRouter } from \"react-router-dom\"\n\nimport * as searchActions from \"../../actions/search\"\nimport * as uiStateActions from \"../../actions/uiState\"\nimport * as networkActions from \"../../actions/network\"\nimport * as sourceActions from \"../../actions/source\"\nimport * as cyrestActions from \"../../actions/cyrest\"\nimport * as ndexSaveActions from \"../../actions/ndexSave\"\nimport ReactGA from \"react-ga\"\n\nimport TopPage from \"../../components/TopPage\"\n\nconst TopPageContainer = props => {\n  useEffect(() => {\n    const { pathname } = props.location\n    ReactGA.set({ page: pathname })\n    ReactGA.pageview(pathname)\n\n    const { history } = props\n    history.listen(({ pathname }) => {\n      ReactGA.set({ page: pathname })\n      ReactGA.pageview(pathname)\n    })\n  }, [])\n  return (\n    <TopPage\n      {...props}\n    />\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    search: state.search,\n    uiState: state.uiState,\n    network: state.network,\n    source: state.source,\n    cyrest: state.cyrest,\n    ndexSave: state.ndexSave\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    searchActions: bindActionCreators(searchActions, dispatch),\n    uiStateActions: bindActionCreators(uiStateActions, dispatch),\n    networkActions: bindActionCreators(networkActions, dispatch),\n    sourceActions: bindActionCreators(sourceActions, dispatch),\n    cyrestActions: bindActionCreators(cyrestActions, dispatch),\n    ndexSaveActions: bindActionCreators(ndexSaveActions, dispatch)\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TopPageContainer)\n)\n","import React from \"react\"\n\nimport MainContainer from \"./containers/MainContainer\"\nimport TopPageContainer from \"./containers/TopPageContainer\"\n\nconst Top = props => <TopPageContainer {...props} />\nconst App = props => <MainContainer {...props} />\n\nexport { App, Top }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { handleActions } from \"redux-actions\"\nimport {\n  setQuery,\n  clearQuery,\n  searchStarted,\n  searchSucceeded,\n  searchFailed,\n  clearAll,\n  setSelectedGenes,\n  clearSelectedGenes,\n  fetchResultStarted,\n  fetchResultSucceeded,\n  fetchResultFailed,\n  setSearchResult,\n  setActualResults\n} from \"../actions/search\"\n\nconst EMPTY_STATE = {\n  isSearching: false,\n  isFetching: false,\n  queryGenes: \"\",\n  queryList: [],\n  results: null,\n  searchStatus: null,\n  searchResults: null,\n  selectedGenes: [],\n  resultList: [],\n  actualResults: []\n}\n\nconst search = handleActions(\n  {\n    [setQuery]: (state, payload) => {\n      return { ...state, queryGenes: payload.payload }\n    },\n    [clearQuery]: (state, payload) => {\n      return { ...state, queryGenes: \"\", queryList: [] }\n    },\n    [clearAll]: (state, payload) => {\n      return EMPTY_STATE\n    },\n    [searchStarted]: (state, payload) => {\n      return {\n        ...state,\n        isSearching: true,\n        resultList: [],\n        queryList: state.queryGenes.split(\" \")\n      }\n    },\n    [searchSucceeded]: (state, payload) => {\n      return { ...state, results: payload.payload, isSearching: false }\n    },\n    [searchFailed]: (state, payload) => {\n      return { ...state, isSearching: false }\n    },\n    [setSelectedGenes]: (state, payload) => {\n      return { ...state, selectedGenes: [payload.payload] }\n    },\n    [clearSelectedGenes]: (state, payload) => {\n      return {\n        ...state,\n        selectedGenes: []\n      }\n    },\n    [fetchResultStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: true,\n        searchStatus: null,\n        searchResults: null\n      }\n    },\n    [fetchResultSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        isFetching: false\n      }\n    },\n    [fetchResultFailed]: (state, payload) => {\n      return { ...state, isFetching: false }\n    },\n    [setSearchResult]: (state, payload) => {\n      const singleResult = payload.payload.singleResult\n      return {\n        ...state,\n        searchResults: singleResult\n      }\n    },\n    [setActualResults]: (state, payload) => {\n      return {\n        ...state,\n        actualResults: payload.payload\n      }\n    }\n  },\n  EMPTY_STATE\n)\n\nexport default search\n","import { handleActions } from \"redux-actions\"\nimport {\n  setSettingsOpen,\n  setServicesListOpen,\n  setHighlights,\n  setSelectedSource,\n  setSortOrder\n} from \"../actions/uiState\"\n\nconst DEF_STATE = {\n  isSettingsOpen: false,\n  servicesListOpen: false,\n  highlights: false,\n  selectedSource: \"enrichment\",\n  sortOrder: [\"p-Value\", \"Overlap\"]\n}\n\nconst uiState = handleActions(\n  {\n    [setSettingsOpen]: (state, payload) => {\n      console.log(\"OPEN = \", payload.payload)\n      return { ...state, isSettingsOpen: payload.payload }\n    },\n    [setServicesListOpen]: (state, payload) => {\n      return { ...state, servicesListOpen: payload.payload }\n    },\n    [setHighlights]: (state, payload) => {\n      return { ...state, highlights: payload.payload }\n    },\n    [setSelectedSource]: (state, payload) => {\n      return { ...state, selectedSource: payload.payload }\n    },\n    [setSortOrder]: (state, payload) => {\n      return {\n        ...state,\n        sortOrder: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default uiState\n","import { handleActions } from \"redux-actions\"\nimport { CxToJs, CyNetworkUtils } from \"cytoscape-cx2js\"\nimport { MAX_NETWORK_SIZE } from \"../components/Results/CytoscapeViewer\"\nimport * as vs from \"../assets/data/styles.json\"\n\nimport {\n  networkFetchStarted,\n  networkFetchFailed,\n  networkFetchSucceeded,\n  networkClear,\n  selectNodes,\n  unselectNodes,\n  selectEdges,\n  unselectEdges,\n  deselectAll,\n  changeTab,\n  changeListIndex,\n  fitNetworkView,\n  setAnnotations\n} from \"../actions/network\"\n\nconst defaultState = {\n  isFetching: false,\n  uuid: \"\",\n  jobId: \"\",\n  sourceId: \"\",\n  networkName: \"\",\n  queryGenes: [],\n  hitGenes: [],\n  originalCX: null,\n  network: null,\n  nodeCount: 0,\n  edgeCount: 0,\n  isLayoutComplete: false,\n  selectedNodes: [],\n  selectedEdges: [],\n  tableDisplayTab: 0,\n  listIndex: 0,\n  fit: false,\n  annotations: false\n}\n\nconst utils = new CyNetworkUtils()\nconst cx2js = new CxToJs(utils)\n\nconst PRESET_VS = vs.default[0].style\n\n// Standard selection\nPRESET_VS.push({\n  selector: \"node:selected\",\n  css: {\n    \"background-color\": \"red\",\n    color: \"#FFFFFF\",\n    \"background-opacity\": 1,\n    \"border-width\": 0,\n    width: 100,\n    height: 100\n  }\n})\n\n// For class-based style update\nconst fadedNode = {\n  selector: \"node.faded\",\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst fadedEdge = {\n  selector: \"edge.faded\",\n  css: {\n    opacity: 0.9\n  }\n}\n\nconst highlight = {\n  selector: \".highlight\",\n  css: {\n    opacity: 1.0,\n    \"overlay-color\": \"#C51162\",\n    \"overlay-padding\": 12,\n    \"overlay-opacity\": 0.5\n  }\n}\n\nconst activeObject = {\n  selector: \"node:active\",\n  css: {\n    \"overlay-color\": \"#FFFF66\",\n    \"overlay-padding\": 25,\n    \"overlay-opacity\": 0.3\n  }\n}\n\nconst network = handleActions(\n  {\n    [networkFetchStarted]: (state, payload) => {\n      console.log(\"Query start: genes = \", payload)\n      return {\n        ...state,\n        isFetching: true,\n        nodeCount: payload.payload.nodeCount,\n        edgeCount: payload.payload.edgeCount,\n        jobId: payload.payload.id,\n        sourceId: payload.payload.sourceUUID,\n        uuid: payload.payload.networkUUID,\n        networkName: payload.payload.networkName,\n        queryGenes: payload.payload.geneList,\n        hitGenes: payload.payload.hitGenes,\n        originalCX: null,\n        network: null,\n        isLayoutComplete: false,\n        backgroundColor: \"\",\n        selectedNodes: [],\n        selectedEdges: [],\n        tableDisplayTab: 0,\n      }\n    },\n    [networkFetchSucceeded]: (state, payload) => {\n      const originalCX = payload.cx\n      let network = {}\n      let backgroundColor = {}\n      if (state.nodeCount + state.edgeCount <= MAX_NETWORK_SIZE) {\n        try {\n          const cyjsNetwork = convertCx2cyjs(originalCX, state.queryGenes)\n          network = cyjsNetwork\n        } catch (err) {\n          // This is an error state\n          console.warn(\"Could not convert given CX to CYJS:\", err)\n          throw new Error(\"Could not convert given CX to CYJS:\", err)\n        }\n\n        backgroundColor = getBackGround(originalCX)\n      }\n\n      return {\n        ...state,\n        originalCX,\n        network,\n        backgroundColor,\n        isFetching: false\n      }\n    },\n    [networkFetchFailed]: (state, payload) => {\n      return {\n        ...state,\n        network: null,\n        originalCX: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [networkClear]: (state, payload) => {\n      return {\n        ...state,\n        uuid: \"\",\n        networkName: \"\",\n        originalCX: null,\n        network: null,\n        backgroundColor: null,\n        isFetching: false,\n        nodeCount: undefined,\n        edgeCount: undefined\n      }\n    },\n    [selectNodes]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 1,\n        selectedNodes: payload.payload\n      }\n    },\n    [unselectNodes]: (state, payload) => {\n      return {\n        ...state,\n        selectedNodes: []\n      }\n    },\n    [selectEdges]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 2,\n        selectedEdges: payload.payload\n      }\n    },\n    [unselectEdges]: (state, payload) => {\n      return {\n        ...state,\n        selectedEdges: []\n      }\n    },\n    [deselectAll]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: 0,\n        selectedNodes: [],\n        selectedEdges: []\n      }\n    },\n    [changeTab]: (state, payload) => {\n      return {\n        ...state,\n        tableDisplayTab: payload.payload\n      }\n    },\n    [changeListIndex]: (state, payload) => {\n      return {\n        ...state,\n        listIndex: payload.payload\n      }\n    },\n    [fitNetworkView]: (state, payload) => {\n      return {\n        ...state,\n        fit: payload.payload\n      }\n    },\n    [setAnnotations]: (state, payload) => {\n      return {\n        ...state,\n        annotations: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nconst convertCx2cyjs = (cx, queryGenes) => {\n  const niceCX = utils.rawCXtoNiceCX(cx)\n  const attributeNameMap = {}\n  const elementsObj = cx2js.cyElementsFromNiceCX(niceCX, attributeNameMap)\n\n  // This contains original style.\n  const style = cx2js.cyStyleFromNiceCX(niceCX, attributeNameMap)\n\n  const newStyle = styleUpdater(style)\n\n  // const updatedStyle = styleUpdater(PRESET_VS, queryGenes)\n  const updatedNodes = adjustLayout(elementsObj.nodes, queryGenes)\n  const elements = [...updatedNodes, ...elementsObj.edges]\n  return {\n    elements,\n    style: newStyle,\n    isLayout: checkLayout(elementsObj.nodes)\n  }\n}\n\nconst VS_TAG = \"cyVisualProperties\"\nconst getBackGround = cx => {\n  let color = \"#FFFFFF\"\n\n  const vps = cx.filter(entry => entry[VS_TAG])\n  if (vps !== undefined && vps !== null && vps.length !== 0) {\n    const vp = vps[0]\n    const allVp = vp[VS_TAG]\n    const networkVp = allVp.filter(p => p[\"properties_of\"] === \"network\")\n    return networkVp[0].properties[\"NETWORK_BACKGROUND_PAINT\"]\n  } else {\n    return color\n  }\n}\n\n// Utility function to get better results\nconst adjustLayout = (nodes, queryGenes) => {\n  let len = nodes.length\n\n  const upperQuery = new Set(queryGenes.map(gene => gene.toUpperCase()))\n\n  while (len--) {\n    const node = nodes[len]\n\n    const name = node.data.name ? node.data.name.toUpperCase() : null\n    if (upperQuery.has(name)) {\n      node.data[\"query\"] = \"true\"\n    }\n  }\n  return nodes\n}\n\nconst checkLayout = nodes => {\n  // Just checks first node only!\n  const node = nodes[0]\n  if (node.position === undefined) {\n    return false\n  } else {\n    return true\n  }\n}\n\nconst styleUpdater = style => {\n  style.push(fadedNode)\n  style.push(fadedEdge)\n  style.push(highlight)\n  style.push(activeObject)\n  return style\n}\n\nexport default network\n","import { handleActions } from \"redux-actions\"\nimport {\n  findSourceFailed,\n  findSourceStarted,\n  findSourceSucceeded,\n  setCurrentSource\n} from \"../actions/source\"\n\nconst defaultState = {\n  isFetchingSource: false,\n  sources: [],\n  error: null,\n  currentSource: null\n}\n\nconst source = handleActions(\n  {\n    [findSourceStarted]: (state, payload) => {\n      return {\n        ...state,\n        isFetchingSource: true,\n        error: null,\n        sources: []\n      }\n    },\n    [findSourceSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        sources: payload.sources,\n        isFetchingSource: false,\n        error: null\n      }\n    },\n    [findSourceFailed]: (state, payload) => {\n      console.warn(\"Error:\", payload.error)\n      return {\n        ...state,\n        isFetchingSource: false,\n        error: payload.error,\n        sources: []\n      }\n    },\n    [setCurrentSource]: (state, payload) => {\n      return {\n        ...state,\n        currentSource: payload.payload\n      }\n    }\n  },\n  defaultState\n)\n\nexport default source\n","import { handleActions } from \"redux-actions\"\nimport {\n  importNetworkFailed,\n  importNetworkStarted,\n  importNetworkSucceeded,\n  fetchAvailable,\n  setAvailable,\n  startCyRestPolling,\n  stopCyRestPolling,\n  setPort,\n} from \"../actions/cyrest\"\n\nconst defaultState = {\n  isFetchingAvailable: false,\n  available: false,\n  isPollingAvailable: false,\n  port: 1234,\n  error: null,\n  lastResponse: null,\n  isLoadingNetwork: false\n}\n\nconst cyrest = handleActions(\n  {\n    [importNetworkStarted]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: null,\n        isLoadingNetwork: true,\n        error: null\n      }\n    },\n    [importNetworkSucceeded]: (state, payload) => {\n      return {\n        ...state,\n        lastResponse: payload,\n        isLoadingNetwork: false,\n        error: null\n      }\n    },\n    [importNetworkFailed]: (state, payload) => {\n      console.warn(\"Error===\", payload.error)\n      return {\n        ...state,\n        lastResponse: payload,\n        error: payload.error,\n        isLoadingNetwork: false,\n      }\n    },\n    [setPort]: (state, payload) => {\n      console.log(\"CyREST port = \", payload.payload)\n      return { ...state, port: payload.payload }\n    },\n    [fetchAvailable]: (state, payload) => {\n      return { ...state, available: null, isFetchingAvailable: true }\n    },\n    [setAvailable]: (state, payload) => {\n      return {\n        ...state,\n        available: payload.payload,\n        isFetchingAvailable: false\n      }\n    },\n    [startCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n    [stopCyRestPolling]: (state, payload) => {\n      return { ...state }\n    },\n  },\n  defaultState\n)\n\nexport default cyrest\n","import { handleActions } from \"redux-actions\"\nimport {\n  setNDExModalOpen,\n  setProfile,\n  credentialsSignOn,\n  googleSignOn,\n  saveToNDEx,\n  setErrorMessage,\n  setNetworkUrl\n} from \"../actions/ndexSave\"\n\nconst DEF_STATE = {\n  ndexModal: false,\n  profile: null,\n  errorMessage: null,\n  networkUrl: null\n}\n\nconst ndexSave = handleActions(\n  {\n    [setNDExModalOpen]: (state, payload) => {\n      //console.log('OPEN = ', payload.payload)\n      return {\n        ...state,\n        ndexModal: payload.payload,\n        errorMessage: null,\n        networkUrl: null\n      }\n    },\n    [setProfile]: (state, payload) => {\n      return { ...state, profile: payload.payload }\n    },\n    [credentialsSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [googleSignOn]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [saveToNDEx]: (state, payload) => {\n      return {\n        ...state\n      }\n    },\n    [setErrorMessage]: (state, payload) => {\n      return {\n        ...state,\n        errorMessage: payload.payload\n      }\n    },\n    [setNetworkUrl]: (state, payload) => {\n      return {\n        ...state,\n        networkUrl: payload.payload\n      }\n    }\n  },\n  DEF_STATE\n)\n\nexport default ndexSave\n","import { combineReducers } from \"redux\"\n\nimport search from \"./search\"\nimport uiState from \"./uiState\"\nimport network from \"./network\"\nimport source from \"./source\"\nimport cyrest from \"./cyrest\"\nimport ndexSave from \"./ndexSave\"\n\nconst rootReducer = combineReducers({\n  source,\n  search,\n  uiState,\n  network,\n  cyrest,\n  ndexSave\n})\n\nexport default rootReducer\n","import { METHOD_GET, BASE_URL } from \"./apiConstants\"\n\nconst fetchNetwork = (id, sourceUUID, networkUUID) => {\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  }\n  const fetchUrl =\n    BASE_URL +\n    id +\n    \"/overlaynetwork?sourceUUID=\" +\n    sourceUUID +\n    \"&networkUUID=\" +\n    networkUUID\n\n  console.log(\"Calling CX API:\", fetchUrl)\n\n  return fetch(fetchUrl, {\n    method: METHOD_GET,\n    headers\n  })\n}\n\nexport { fetchNetwork }\n","import { METHOD_POST } from \"./apiConstants\"\n\nconst MYGENE_BASE_URL = \"http://mygene.info/v3/query\"\n\n/**\n * Client for MyGene.info\n *\n * @param geneList\n * @returns {Promise<Response>}\n */\nconst searchGenes = geneList => {\n  const fields =\n    \"fields=symbol,name,taxid,entrezgene,summary,genomic_pos,go,pathway\"\n  const searchUrl =\n    MYGENE_BASE_URL + \"?q=\" + geneList + \"&scopes=symbol&\" + fields\n\n  return fetch(searchUrl, {\n    method: METHOD_POST\n  })\n}\n\nexport { searchGenes }\n","import { METHOD_GET, METHOD_POST, BASE_URL } from \"./apiConstants\"\n\n/**\n * Check the status of the services.\n *\n * @returns {Promise<Response | never | {error: any}>}\n */\nconst getSource = () => {\n  const searchUrl = BASE_URL + \"source\"\n  return fetch(searchUrl, {\n    method: METHOD_GET,\n    mode: \"cors\"\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(\"Failed to fetch source list:\" + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst checkStatus = jobId => {\n  const checkJobStatusUrl = BASE_URL + jobId + \"/status\"\n\n  return fetch(checkJobStatusUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(\"Failed to fetch source list:\" + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst getResult = (jobId, sourceName = null) => {\n  const url = BASE_URL + jobId\n\n  const resultUrl = new URL(url)\n\n  if (sourceName !== null) {\n    resultUrl.searchParams.append(\"source\", sourceName)\n  }\n\n  return fetch(resultUrl, {\n    method: METHOD_GET\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(\"Failed to fetch search result:\" + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nconst postQuery = (geneList, sourceList) => {\n  const searchUrl = BASE_URL\n\n  const queryObject = {\n    geneList,\n    sourceList\n  }\n\n  const header = new Headers({\n    \"Content-Type\": \"application/json\"\n  })\n\n  return fetch(searchUrl, {\n    method: METHOD_POST,\n    headers: header,\n    body: JSON.stringify(queryObject)\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw Error(\"Failed to send query:\" + response.status)\n      }\n      return response\n    })\n    .catch(error => ({ error }))\n}\n\nexport { getResult, getSource, postQuery, checkStatus }\n","import { all, call, put, takeLatest } from \"redux-saga/effects\"\nimport * as api from \"../api/ndex\"\nimport * as myGeneApi from \"../api/mygene\"\nimport * as cySearchApi from \"../api/search\"\n\nimport {\n  SEARCH_STARTED,\n  SEARCH_FAILED,\n  SEARCH_SUCCEEDED,\n  FETCH_RESULT_STARTED,\n  FETCH_RESULT_SUCCEEDED,\n  FETCH_RESULT_FAILED,\n  SET_SEARCH_RESULT\n} from \"../actions/search\"\n\nimport {\n  FIND_SOURCE_STARTED,\n  FIND_SOURCE_FAILED,\n  FIND_SOURCE_SUCCEEDED\n} from \"../actions/source\"\n\nimport {\n  NETWORK_FETCH_STARTED,\n  NETWORK_FETCH_SUCCEEDED,\n  NETWORK_FETCH_FAILED\n} from \"../actions/network\"\n\nconst API_CALL_INTERVAL = 500\n\nexport default function* rootSaga() {\n  yield takeLatest(SEARCH_STARTED, watchSearch)\n  yield takeLatest(FETCH_RESULT_STARTED, watchSearchResult)\n  yield takeLatest(NETWORK_FETCH_STARTED, fetchNetwork)\n  yield takeLatest(FIND_SOURCE_STARTED, fetchSource)\n}\n\n/**\n * Calls Cytoscape Search service and set state\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSearch(action) {\n  const geneList = action.payload.geneList\n  let sourceNames = action.payload.sourceNames\n\n  // If source names are missing, find them:\n  if (\n    sourceNames === undefined ||\n    sourceNames === null ||\n    sourceNames.length === 0\n  ) {\n    const sources = yield call(cySearchApi.getSource, null)\n    const sourceJson = yield call([sources, \"json\"])\n    const sourceList = sourceJson.results\n    sourceNames = sourceList.map(source => source.name)\n    sourceNames = sourceNames.filter(name => name !== \"keyword\")\n  }\n  const geneListString = geneList.join()\n\n  try {\n    // Call 1: Send query and get JobID w/ gene props from MyGene\n    const [geneRes, searchRes] = yield all([\n      call(myGeneApi.searchGenes, geneListString),\n      call(cySearchApi.postQuery, geneList, sourceNames)\n    ])\n\n    const geneJson = yield call([geneRes, \"json\"])\n    const resultLocation = searchRes.headers.get(\"Location\")\n    const parts = resultLocation.split(\"/\")\n    const jobId = parts[parts.length - 1]\n    const filtered = filterGenes(geneJson)\n\n    yield put({\n      type: SEARCH_SUCCEEDED,\n      payload: {\n        genes: filtered.uniqueGeneMap,\n        notFound: filtered.notFound,\n        resultLocation,\n        jobId\n      }\n    })\n  } catch (e) {\n    console.warn(\"NDEx search error:\", e)\n    yield put({\n      type: SEARCH_FAILED,\n      payload: {\n        message: \"NDEx network search error\",\n        query: geneListString,\n        error: e.message\n      }\n    })\n  }\n}\n\n// Simple sleep function using Promise\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nfunction* watchSearchResult(action) {\n  const jobId = action.payload.jobId\n\n  const resultList = []\n  const finishedSourceNames = new Set()\n\n  try {\n    while (true) {\n      // Check overall status\n      const statusRes = yield call(cySearchApi.checkStatus, jobId)\n      const statusJson = yield call([statusRes, \"json\"])\n\n      const status = statusJson.sources\n      let idx = status.length\n\n      while (idx--) {\n        const src = status[idx]\n        const { progress, sourceName } = src\n        if (progress === 100) {\n          const resultRes = yield call(cySearchApi.getResult, jobId, sourceName)\n          const json = yield call([resultRes, \"json\"])\n\n          if(finishedSourceNames.has(sourceName) === false) {\n            // Need to add this new result.\n            resultList.push(json.sources[0])\n            finishedSourceNames.add(sourceName)\n          }\n          json.sources = resultList\n\n          yield put({\n            type: SET_SEARCH_RESULT,\n            payload: {\n              singleResult: json\n            }\n          })\n          // console.log(idx + ': Individual check finished:', src, json)\n        }\n      }\n\n      idx = status.length\n      let finishCount = 0\n      while (idx--) {\n        if (status[idx].progress === 100) {\n          finishCount++\n        }\n      }\n      if (finishCount === status.length) {\n        console.log(\"!! Search & fetch finished:\", finishCount, resultList)\n        break\n      }\n\n      // Wait 1 sec. and try API call again.\n      yield call(sleep, API_CALL_INTERVAL)\n    }\n\n    yield put({\n      type: FETCH_RESULT_SUCCEEDED,\n      payload: {}\n    })\n  } catch (e) {\n    console.warn(\"NDEx search error:\", e)\n    yield put({\n      type: FETCH_RESULT_FAILED,\n      payload: {\n        message: \"Failed to fetch search result\",\n        jobId,\n        error: e.message\n      }\n    })\n  }\n}\n\nfunction* fetchNetwork(action) {\n  try {\n    const params = action.payload\n    const id = params.id\n    const sourceUUID = params.sourceUUID\n    const networkUUID = params.networkUUID\n\n    const cx = yield call(api.fetchNetwork, id, sourceUUID, networkUUID)\n    const json = yield call([cx, \"json\"])\n\n    yield put({ type: NETWORK_FETCH_SUCCEEDED, cx: json })\n  } catch (error) {\n    yield put({ type: NETWORK_FETCH_FAILED, error })\n  }\n}\n\nfunction* fetchSource(action) {\n  try {\n    const sources = yield call(cySearchApi.getSource, null)\n    const json = yield call([sources, \"json\"])\n    const orderedSources = json.results\n    yield put({ type: FIND_SOURCE_SUCCEEDED, sources: orderedSources })\n  } catch (error) {\n    yield put({ type: FIND_SOURCE_FAILED, error })\n  }\n}\n\nconst filterGenes = resultList => {\n  const uniqueGeneMap = new Map()\n  const notFound = []\n\n  let len = resultList.length\n  while (len--) {\n    const entry = resultList[len]\n    if (entry.notfound) {\n      notFound.push(entry.query)\n    } else {\n      uniqueGeneMap.set(entry.query, entry)\n    }\n  }\n\n  return {\n    uniqueGeneMap,\n    notFound\n  }\n}\n","import { METHOD_GET, METHOD_POST } from \"./apiConstants\"\n\nconst CYREST_BASE_URL = \"http://127.0.0.1\"\n\nconst status = cyRESTPort => {\n  const statusUrl = CYREST_BASE_URL + \":\" + cyRESTPort + \"/v1\"\n\n  return fetch(statusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst cyNDExStatus = cyRESTPort => {\n  const cyNDExStatusUrl =\n    CYREST_BASE_URL + \":\" + cyRESTPort + \"/cyndex2/v1/status\"\n\n  return fetch(cyNDExStatusUrl, {\n    method: METHOD_GET\n  })\n}\n\nconst importNetwork = (cyRESTPort, payload) => {\n  const importNetworkUrl =\n    CYREST_BASE_URL + \":\" + cyRESTPort + \"/cyndex2/v1/networks/cx\"\n  console.log(\"Calling CyREST POST:\", importNetworkUrl)\n\n  return fetch(importNetworkUrl, {\n    method: METHOD_POST,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  })\n}\n\nconst cyndex2Networks = (cyRESTPort, method, suid, payload) => {\n  const currentNetworkUrl =\n    CYREST_BASE_URL + \":\" + cyRESTPort + \"/cyndex2/v1/networks/\" + suid\n  console.log(\"Calling CyREST getNetwork:\", currentNetworkUrl, method, payload)\n  return fetch(currentNetworkUrl, {\n    method: method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: payload\n  })\n}\n\nexport { status, cyNDExStatus, importNetwork, cyndex2Networks }\n","import { call, put, takeLatest, select } from \"redux-saga/effects\"\nimport * as cyrest from \"../api/cyrest\"\n\nimport {\n  IMPORT_NETWORK_STARTED,\n  IMPORT_NETWORK_FAILED,\n  IMPORT_NETWORK_SUCCEEDED,\n} from \"../actions/cyrest\"\n\nexport default function* cyrestSaga() {\n  yield takeLatest(IMPORT_NETWORK_STARTED, watchImportNetwork)\n}\n\nexport const getCyRESTPort = state => state.cyrest.port\n\n/**\n * Calling CyREST network import\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchImportNetwork(action) {\n  const originalCX = action.payload.cx\n  try {\n    const cyrestport = yield select(getCyRESTPort)\n\n    let addNumberVerification = true\n\n    originalCX.forEach(aspect => {\n      if (aspect[\"numberVerification\"]) {\n        addNumberVerification = false\n      }\n    })\n    // Add number verification to fool old versions of CyNDEx-2\n    // remove this step if numberVerification is added elsewhere\n    // or ignored in later versions of CyNDEx-2\n    const patchedCX = (addNumberVerification\n      ? [{ numberVerification: [{ longNumber: 281474976710655 }] }]\n      : []\n    ).concat(originalCX)\n\n    //console.log('CX', patchedCX)\n\n    const response = yield call(cyrest.importNetwork, cyrestport, patchedCX)\n    const responseJson = yield call([response, \"json\"])\n\n    console.log(\"CyREST response:\", response)\n\n    yield put({\n      type: IMPORT_NETWORK_SUCCEEDED,\n      payload: responseJson\n    })\n  } catch (e) {\n    console.warn(\"CyREST import network error:\", e)\n    yield put({\n      type: IMPORT_NETWORK_FAILED,\n      payload: {\n        message: \"CyREST import network error\",\n        error: e.message\n      }\n    })\n  }\n}\n","import { call, put, all, take, race } from \"redux-saga/effects\"\n\nimport {\n  SET_AVAILABLE,\n  START_CYREST_POLLING,\n  STOP_CYREST_POLLING\n} from \"../actions/cyrest\"\n\nimport * as cyrest from \"../api/cyrest\"\n\nfunction delay(duration) {\n  const promise = new Promise(resolve => {\n    setTimeout(() => resolve(true), duration)\n  })\n  return promise\n}\n\nexport function* _fetchCyRESTAvailable(action) {\n  // This is for avoiding too many unnecessary state updates.\n  let currentConnectionState = false\n\n  while (true) {\n    try {\n      yield call(cyrest.status, 1234)\n\n      if (currentConnectionState !== true) {\n        yield put({ type: SET_AVAILABLE, payload: true })\n      }\n    } catch (e) {\n      if (currentConnectionState === true) {\n        yield put({ type: SET_AVAILABLE, payload: false })\n      }\n    }\n    yield call(delay, 20000)\n  }\n}\n\nexport function* _cyRestStatusSaga() {\n  while (true) {\n    const data = yield take(START_CYREST_POLLING)\n    yield race([call(_fetchCyRESTAvailable), take(STOP_CYREST_POLLING)])\n  }\n}\n\nexport default function* root() {\n  yield all([_cyRestStatusSaga()])\n}\n","import { METHOD_GET, METHOD_POST } from \"./apiConstants\"\n\nconst NDEX_USER_VALIDATION = \"http://ndexbio.org/v2/user?valid=true\"\nconst NDEX_SAVE = \"http://ndexbio.org/v2/network\"\n\nconst ndexValidation = headers => {\n  //console.log('Calling NDEx validation with headers: ', headers)\n\n  return fetch(NDEX_USER_VALIDATION, {\n    method: METHOD_GET,\n    headers: headers\n  })\n}\n\nconst saveToNDEx = (cx, headers) => {\n  //console.log('Calling Save-to-NDEx')\n\n  return fetch(NDEX_SAVE, {\n    method: METHOD_POST,\n    headers: headers,\n    body: JSON.stringify(cx)\n  })\n}\n\nexport { ndexValidation, saveToNDEx }\n","import { call, put, takeLatest, select } from \"redux-saga/effects\"\nimport * as ndexSave from \"../api/ndexSave\"\n\nimport {\n  SET_NDEX_MODAL_OPEN,\n  SET_PROFILE,\n  CREDENTIALS_SIGN_ON,\n  GOOGLE_SIGN_ON,\n  SAVE_TO_NDEX,\n  SET_ERROR_MESSAGE,\n  SET_NETWORK_URL\n} from \"../actions/ndexSave\"\n\nexport default function* ndexSaveSaga() {\n  yield takeLatest(GOOGLE_SIGN_ON, watchGoogleSignOn)\n  yield takeLatest(CREDENTIALS_SIGN_ON, watchCredentialsSignOn)\n  yield takeLatest(SAVE_TO_NDEX, watchSaveToNDEx)\n}\n\n/**\n * Calling GoogleSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchGoogleSignOn(action) {\n  const resp = action.payload\n  const token = resp.tokenObj.token_type + \" \" + resp.tokenObj.id_token\n  const profile = {\n    name: resp.profileObj.name,\n    image: resp.profileObj.imageUrl,\n    authorization: {\n      type: \"google\",\n      token\n    }\n  }\n\n  const headers = new Headers({\n    Authorization: profile.authorization.token\n  })\n\n  try {\n    yield call(ndexSave.ndexValidation, headers)\n    yield put({\n      type: SET_PROFILE,\n      payload: profile\n    })\n  } catch (error) {\n    const message =\n      error.response.data.message || \"Failed to verify account. \" + error\n    if (\n      message.startsWith(\"User with email\") &&\n      message.endsWith(\"doesn't exist.\")\n    ) {\n      /*\n      const comp = (\n        <span>\n          {message} Go to{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"http://ndexbio.org\"\n          >\n            http://ndexbio.org\n          </a>{' '}\n          to create an account\n        </span>\n      )\n      */\n      //this.props.onError(comp, true)\n      return\n    }\n    //this.props.onError(message, true)\n  }\n  /*\n  axios\n    .get(config.NDEX_USER_VALIDATION, {\n      headers: {\n        Authorization: profile.authorization.token\n      }\n    })\n    .then(_ => {\n      this.props.onLoginSuccess(profile)\n    })\n    .catch(error => {\n      const message =\n        error.response.data.message || 'Failed to verify account. ' + error\n      if (\n        message.startsWith('User with email') &&\n        message.endsWith(\"doesn't exist.\")\n      ) {\n        const comp = (\n          <span>\n            {message} Go to{' '}\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://ndexbio.org\"\n            >\n              http://ndexbio.org\n            </a>{' '}\n            to create an account\n          </span>\n        )\n        this.props.onError(comp, true)\n        return\n      }\n      this.props.onError(message, true)\n    })*/\n}\n\n/**\n * Calling CredentialsSignOn\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchCredentialsSignOn(action) {\n  const user = window.basicAuthSignIn.accountName.value\n  const pwd = window.basicAuthSignIn.password.value\n\n  const auth = \"Basic \" + window.btoa(user + \":\" + pwd)\n  const headers = new Headers({\n    Authorization: auth\n  })\n\n  try {\n    const resp = yield call(ndexSave.ndexValidation, headers)\n    //console.log('resp', resp)\n\n    const responseJson = yield call([resp, \"json\"])\n\n    /*\n    console.log('responseJson', responseJson)\n    for (const key of resp.headers.keys()) {\n      console.log('header ', key)\n    }*/\n\n    if (resp.status != 200) {\n      yield put({\n        type: SET_ERROR_MESSAGE,\n        payload: responseJson.message\n      })\n    } else {\n      const profile = {\n        name: responseJson.firstName,\n        image: responseJson.image,\n        authorization: {\n          type: \"ndex\",\n          token: auth\n        }\n      }\n      yield put({\n        type: SET_PROFILE,\n        payload: profile\n      })\n    }\n    //this.props.onLoginSuccess(profile)\n  } catch (err) {\n    console.log(err)\n    yield put({\n      type: SET_ERROR_MESSAGE,\n      payload: \"Unknown error\"\n    })\n    //this.setState({ error: 'Unknown error' })\n  }\n\n  /*\n    axios\n      .get(config.NDEX_USER_VALIDATION, headers)\n      .then(resp => {\n        const profile = {\n          name: resp.data.firstName,\n          image: resp.data.image,\n          authorization: {\n            type: 'ndex',\n            token: resp.config.headers['Authorization']\n          }\n        }\n        this.props.onLoginSuccess(profile)\n      })\n      .catch(err => {\n        console.log(err)\n        if ('response' in err) {\n          this.setState({ error: err.response.data.message })\n        } else {\n          this.setState({ error: 'Unknown error' })\n        }\n      })*/\n}\n\n/**\n * Calling saveToNDEx\n *\n * @param action\n * @returns {IterableIterator<*>}\n */\nfunction* watchSaveToNDEx(action) {\n  const token = action.payload.token\n  const cx = action.payload.cx\n\n  const headers = new Headers({\n    \"Content-Type\": \"application/json\",\n    Authorization: token\n  })\n\n  const resp = yield call(ndexSave.saveToNDEx, cx, headers)\n  console.log(\"resp\", resp)\n  console.log(\"resp.body\" + resp.body)\n\n  const responseText = yield call([resp, \"text\"])\n\n  const networkURL = responseText.replace(\"/v2/\", \"/#/\")\n\n  console.log(\"networkURL\", networkURL)\n\n  yield put({\n    type: SET_NETWORK_URL,\n    payload: networkURL\n  })\n  /*\n  axios\n    .post(config.save_to_ndex, cx, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: token\n      }\n    })\n    .then(resp => {\n      const networkUrl = resp.data.replace('/v2/', '/#/')\n      this.setState({ networkUrl })\n    })\n    .catch(err => {\n      alert('Failed to save network to NDEx: ' + err)\n    })\n    */\n}\n","import React, { useEffect } from \"react\"\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport \"typeface-roboto\"\nimport { render } from \"react-dom\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n\nimport createSagaMiddleware from \"redux-saga\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\nimport \"./index.css\"\nimport { App, Top } from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\n// Import root reducers\nimport rootReducer from \"./reducers\"\nimport rootSaga from \"./sagas/ndexSaga\"\nimport cyRestSaga from \"./sagas/cyRestSaga\"\nimport cyRestStatusSaga from \"./sagas/cyRestStatusSaga\"\nimport ndexSaveSaga from \"./sagas/ndexSaveSaga\"\nimport ReactGA from \"react-ga\"\n\nimport { SET_QUERY } from \"./actions/search\"\n\nimport { GA_DEV_ID, GA_STAGING_ID, GA_PRODUCTION } from \"./analytics\"\n\nReactGA.initialize(GA_PRODUCTION, {\n  gaOptions: {\n    siteSpeedSampleRate: 100\n  }\n})\n\nconst EventActions = {\n  SetQuery: SET_QUERY,\n  OpenInCytoscape: \"OPEN_IN_CYTOSCAPE\",\n  NetworkSelected: \"NETWORK_FETCH_STARTED\"\n}\n\nconst gaMiddleware = store => next => action => {\n  handleEvent(action)\n  return next(action)\n}\n\nconst handleEvent = event => {\n  const eventType = event.type\n  if (eventType === SET_QUERY) {\n    ReactGA.event({\n      category: \"User Action\",\n      action: EventActions.SetQuery,\n      label: event.payload\n    })\n  } else if (eventType === \"IMPORT_NETWORK_STARTED\") {\n    ReactGA.event({\n      category: \"User Action\",\n      action: EventActions.OpenInCytoscape,\n      label: event.payload.uuid\n    })\n  } else if (\"NETWORK_FETCH_STARTED\") {\n    if (event.payload === undefined || event.payload == null) {\n      return\n    }\n    ReactGA.event({\n      category: \"User Action\",\n      action: EventActions.NetworkSelected,\n      label: `${event.payload.sourceUUID}/${event.payload.networkUUID}`\n    })\n  }\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(sagaMiddleware),\n    applyMiddleware(gaMiddleware)\n  )\n)\n\nsagaMiddleware.run(rootSaga)\nsagaMiddleware.run(cyRestSaga)\nsagaMiddleware.run(cyRestStatusSaga)\nsagaMiddleware.run(ndexSaveSaga)\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Top} />\n        <Route path=\"/:jobid/:sourceId/:networkId\" component={App} />\n        <Route path=\"/:jobid/:sourceId\" component={App} />\n        <Route path=\"/:jobid\" component={App} />\n      </Switch>\n    </Router>\n  </Provider>\n)\n\nrender(<Root store={store} />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// For Google Analygtics\nexport const GA_DEV_ID = \"UA-62588031-6\" // Dev server\nexport const GA_STAGING_ID = \"UA-62588031-7\" // For staging server\nexport const GA_PRODUCTION = \"UA-62588031-8\" // For Production server\n","module.exports = __webpack_public_path__ + \"static/media/ndex-logo.04d7bf44.svg\";","module.exports = __webpack_public_path__ + \"static/media/cytoscape-logo.4aa4c296.svg\";"],"sourceRoot":""}